
// ** Expanded prelude

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Basic theory for vectors using arrays. This version of vectors is not extensional.

datatype Vec<T> {
    Vec(v: [int]T, l: int)
}

function {:builtin "MapConst"} MapConstVec<T>(T): [int]T;
function DefaultVecElem<T>(): T;
function {:inline} DefaultVecMap<T>(): [int]T { MapConstVec(DefaultVecElem()) }

function {:inline} EmptyVec<T>(): Vec T {
    Vec(DefaultVecMap(), 0)
}

function {:inline} MakeVec1<T>(v: T): Vec T {
    Vec(DefaultVecMap()[0 := v], 1)
}

function {:inline} MakeVec2<T>(v1: T, v2: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2], 2)
}

function {:inline} MakeVec3<T>(v1: T, v2: T, v3: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2][2 := v3], 3)
}

function {:inline} MakeVec4<T>(v1: T, v2: T, v3: T, v4: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2][2 := v3][3 := v4], 4)
}

function {:inline} ExtendVec<T>(v: Vec T, elem: T): Vec T {
    (var l := v->l;
    Vec(v->v[l := elem], l + 1))
}

function {:inline} ReadVec<T>(v: Vec T, i: int): T {
    v->v[i]
}

function {:inline} LenVec<T>(v: Vec T): int {
    v->l
}

function {:inline} IsEmptyVec<T>(v: Vec T): bool {
    v->l == 0
}

function {:inline} RemoveVec<T>(v: Vec T): Vec T {
    (var l := v->l - 1;
    Vec(v->v[l := DefaultVecElem()], l))
}

function {:inline} RemoveAtVec<T>(v: Vec T, i: int): Vec T {
    (var l := v->l - 1;
    Vec(
        (lambda j: int ::
           if j >= 0 && j < l then
               if j < i then v->v[j] else v->v[j+1]
           else DefaultVecElem()),
        l))
}

function {:inline} ConcatVec<T>(v1: Vec T, v2: Vec T): Vec T {
    (var l1, m1, l2, m2 := v1->l, v1->v, v2->l, v2->v;
    Vec(
        (lambda i: int ::
          if i >= 0 && i < l1 + l2 then
            if i < l1 then m1[i] else m2[i - l1]
          else DefaultVecElem()),
        l1 + l2))
}

function {:inline} ReverseVec<T>(v: Vec T): Vec T {
    (var l := v->l;
    Vec(
        (lambda i: int :: if 0 <= i && i < l then v->v[l - i - 1] else DefaultVecElem()),
        l))
}

function {:inline} SliceVec<T>(v: Vec T, i: int, j: int): Vec T {
    (var m := v->v;
    Vec(
        (lambda k:int ::
          if 0 <= k && k < j - i then
            m[i + k]
          else
            DefaultVecElem()),
        (if j - i < 0 then 0 else j - i)))
}


function {:inline} UpdateVec<T>(v: Vec T, i: int, elem: T): Vec T {
    Vec(v->v[i := elem], v->l)
}

function {:inline} SwapVec<T>(v: Vec T, i: int, j: int): Vec T {
    (var m := v->v;
    Vec(m[i := m[j]][j := m[i]], v->l))
}

function {:inline} ContainsVec<T>(v: Vec T, e: T): bool {
    (var l := v->l;
    (exists i: int :: InRangeVec(v, i) && v->v[i] == e))
}

function IndexOfVec<T>(v: Vec T, e: T): int;
axiom {:ctor "Vec"} (forall<T> v: Vec T, e: T :: {IndexOfVec(v, e)}
    (var i := IndexOfVec(v,e);
     if (!ContainsVec(v, e)) then i == -1
     else InRangeVec(v, i) && ReadVec(v, i) == e &&
        (forall j: int :: j >= 0 && j < i ==> ReadVec(v, j) != e)));

// This function should stay non-inlined as it guards many quantifiers
// over vectors. It appears important to have this uninterpreted for
// quantifier triggering.
function InRangeVec<T>(v: Vec T, i: int): bool {
    i >= 0 && i < LenVec(v)
}

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Boogie model for multisets, based on Boogie arrays. This theory assumes extensional equality for element types.

datatype Multiset<T> {
    Multiset(v: [T]int, l: int)
}

function {:builtin "MapConst"} MapConstMultiset<T>(l: int): [T]int;

function {:inline} EmptyMultiset<T>(): Multiset T {
    Multiset(MapConstMultiset(0), 0)
}

function {:inline} LenMultiset<T>(s: Multiset T): int {
    s->l
}

function {:inline} ExtendMultiset<T>(s: Multiset T, v: T): Multiset T {
    (var len := s->l;
    (var cnt := s->v[v];
    Multiset(s->v[v := (cnt + 1)], len + 1)))
}

// This function returns (s1 - s2). This function assumes that s2 is a subset of s1.
function {:inline} SubtractMultiset<T>(s1: Multiset T, s2: Multiset T): Multiset T {
    (var len1 := s1->l;
    (var len2 := s2->l;
    Multiset((lambda v:T :: s1->v[v]-s2->v[v]), len1-len2)))
}

function {:inline} IsEmptyMultiset<T>(s: Multiset T): bool {
    (s->l == 0) &&
    (forall v: T :: s->v[v] == 0)
}

function {:inline} IsSubsetMultiset<T>(s1: Multiset T, s2: Multiset T): bool {
    (s1->l <= s2->l) &&
    (forall v: T :: s1->v[v] <= s2->v[v])
}

function {:inline} ContainsMultiset<T>(s: Multiset T, v: T): bool {
    s->v[v] > 0
}

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Theory for tables.

// v is the SMT array holding the key-value assignment. e is an array which
// independently determines whether a key is valid or not. l is the length.
//
// Note that even though the program cannot reflect over existence of a key,
// we want the specification to be able to do this, so it can express
// verification conditions like "key has been inserted".
datatype Table <K, V> {
    Table(v: [K]V, e: [K]bool, l: int)
}

// Functions for default SMT arrays. For the table values, we don't care and
// use an uninterpreted function.
function DefaultTableArray<K, V>(): [K]V;
function DefaultTableKeyExistsArray<K>(): [K]bool;
axiom DefaultTableKeyExistsArray() == (lambda i: int :: false);

function {:inline} EmptyTable<K, V>(): Table K V {
    Table(DefaultTableArray(), DefaultTableKeyExistsArray(), 0)
}

function {:inline} GetTable<K,V>(t: Table K V, k: K): V {
    // Notice we do not check whether key is in the table. The result is undetermined if it is not.
    t->v[k]
}

function {:inline} LenTable<K,V>(t: Table K V): int {
    t->l
}


function {:inline} ContainsTable<K,V>(t: Table K V, k: K): bool {
    t->e[k]
}

function {:inline} UpdateTable<K,V>(t: Table K V, k: K, v: V): Table K V {
    Table(t->v[k := v], t->e, t->l)
}

function {:inline} AddTable<K,V>(t: Table K V, k: K, v: V): Table K V {
    // This function has an undetermined result if the key is already in the table
    // (all specification functions have this "partial definiteness" behavior). Thus we can
    // just increment the length.
    Table(t->v[k := v], t->e[k := true], t->l + 1)
}

function {:inline} RemoveTable<K,V>(t: Table K V, k: K): Table K V {
    // Similar as above, we only need to consider the case where the key is in the table.
    Table(t->v, t->e[k := false], t->l - 1)
}

axiom {:ctor "Table"} (forall<K,V> t: Table K V :: {LenTable(t)}
    (exists k: K :: {ContainsTable(t, k)} ContainsTable(t, k)) ==> LenTable(t) >= 1
);
// TODO: we might want to encoder a stronger property that the length of table
// must be more than N given a set of N items. Currently we don't see a need here
// and the above axiom seems to be sufficient.
// Copyright Â© Aptos Foundation
// SPDX-License-Identifier: Apache-2.0

// ==================================================================================
// Native object::exists_at

// ==================================================================================
// Intrinsic implementation of aggregator and aggregator factory

datatype $1_aggregator_Aggregator {
    $1_aggregator_Aggregator($handle: int, $key: int, $limit: int, $val: int)
}
function {:inline} $Update'$1_aggregator_Aggregator'_handle(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(x, s->$key, s->$limit, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_key(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, x, s->$limit, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_limit(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, s->$key, x, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_val(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, s->$key, s->$limit, x)
}
function $IsValid'$1_aggregator_Aggregator'(s: $1_aggregator_Aggregator): bool {
    $IsValid'address'(s->$handle)
      && $IsValid'address'(s->$key)
      && $IsValid'u128'(s->$limit)
      && $IsValid'u128'(s->$val)
}
function {:inline} $IsEqual'$1_aggregator_Aggregator'(s1: $1_aggregator_Aggregator, s2: $1_aggregator_Aggregator): bool {
    s1 == s2
}
function {:inline} $1_aggregator_spec_get_limit(s: $1_aggregator_Aggregator): int {
    s->$limit
}
function {:inline} $1_aggregator_spec_get_handle(s: $1_aggregator_Aggregator): int {
    s->$handle
}
function {:inline} $1_aggregator_spec_get_key(s: $1_aggregator_Aggregator): int {
    s->$key
}
function {:inline} $1_aggregator_spec_get_val(s: $1_aggregator_Aggregator): int {
    s->$val
}

function $1_aggregator_spec_read(agg: $1_aggregator_Aggregator): int {
    $1_aggregator_spec_get_val(agg)
}

function $1_aggregator_spec_aggregator_set_val(agg: $1_aggregator_Aggregator, val: int): $1_aggregator_Aggregator {
    $Update'$1_aggregator_Aggregator'_val(agg, val)
}

function $1_aggregator_spec_aggregator_get_val(agg: $1_aggregator_Aggregator): int {
    $1_aggregator_spec_get_val(agg)
}

function $1_aggregator_factory_spec_new_aggregator(limit: int) : $1_aggregator_Aggregator;

axiom (forall limit: int :: {$1_aggregator_factory_spec_new_aggregator(limit)}
    (var agg := $1_aggregator_factory_spec_new_aggregator(limit);
     $1_aggregator_spec_get_limit(agg) == limit));

axiom (forall limit: int :: {$1_aggregator_factory_spec_new_aggregator(limit)}
     (var agg := $1_aggregator_factory_spec_new_aggregator(limit);
     $1_aggregator_spec_aggregator_get_val(agg) == 0));


// ============================================================================================
// Primitive Types

const $MAX_U8: int;
axiom $MAX_U8 == 255;
const $MAX_U16: int;
axiom $MAX_U16 == 65535;
const $MAX_U32: int;
axiom $MAX_U32 == 4294967295;
const $MAX_U64: int;
axiom $MAX_U64 == 18446744073709551615;
const $MAX_U128: int;
axiom $MAX_U128 == 340282366920938463463374607431768211455;
const $MAX_U256: int;
axiom $MAX_U256 == 115792089237316195423570985008687907853269984665640564039457584007913129639935;

// Templates for bitvector operations

function {:bvbuiltin "bvand"} $And'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvor"} $Or'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvxor"} $Xor'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvadd"} $Add'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvsub"} $Sub'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvmul"} $Mul'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvudiv"} $Div'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvurem"} $Mod'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvshl"} $Shl'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvlshr"} $Shr'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvult"} $Lt'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv8'(bv8,bv8) returns(bool);

procedure {:inline 1} $AddBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'($Add'Bv8'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv8'(src1, src2);
}

procedure {:inline 1} $AddBv8_unchecked(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Add'Bv8'(src1, src2);
}

procedure {:inline 1} $SubBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv8'(src1, src2);
}

procedure {:inline 1} $MulBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'($Mul'Bv8'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv8'(src1, src2);
}

procedure {:inline 1} $DivBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if (src2 == 0bv8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv8'(src1, src2);
}

procedure {:inline 1} $ModBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if (src2 == 0bv8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv8'(src1, src2);
}

procedure {:inline 1} $AndBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $And'Bv8'(src1,src2);
}

procedure {:inline 1} $OrBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Or'Bv8'(src1,src2);
}

procedure {:inline 1} $XorBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Xor'Bv8'(src1,src2);
}

procedure {:inline 1} $LtBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Lt'Bv8'(src1,src2);
}

procedure {:inline 1} $LeBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Le'Bv8'(src1,src2);
}

procedure {:inline 1} $GtBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Gt'Bv8'(src1,src2);
}

procedure {:inline 1} $GeBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Ge'Bv8'(src1,src2);
}

function $IsValid'bv8'(v: bv8): bool {
  $Ge'Bv8'(v,0bv8) && $Le'Bv8'(v,255bv8)
}

function {:inline} $IsEqual'bv8'(x: bv8, y: bv8): bool {
    x == y
}

procedure {:inline 1} $int2bv8(src: int) returns (dst: bv8)
{
    if (src > 255) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.8(src);
}

procedure {:inline 1} $bv2int8(src: bv8) returns (dst: int)
{
    dst := $bv2int.8(src);
}

function {:builtin "(_ int2bv 8)"} $int2bv.8(i: int) returns (bv8);
function {:builtin "bv2nat"} $bv2int.8(i: bv8) returns (int);

function {:bvbuiltin "bvand"} $And'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvor"} $Or'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvxor"} $Xor'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvadd"} $Add'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvsub"} $Sub'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvmul"} $Mul'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvudiv"} $Div'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvurem"} $Mod'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvshl"} $Shl'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvlshr"} $Shr'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvult"} $Lt'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv16'(bv16,bv16) returns(bool);

procedure {:inline 1} $AddBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'($Add'Bv16'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv16'(src1, src2);
}

procedure {:inline 1} $AddBv16_unchecked(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Add'Bv16'(src1, src2);
}

procedure {:inline 1} $SubBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv16'(src1, src2);
}

procedure {:inline 1} $MulBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'($Mul'Bv16'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv16'(src1, src2);
}

procedure {:inline 1} $DivBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if (src2 == 0bv16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv16'(src1, src2);
}

procedure {:inline 1} $ModBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if (src2 == 0bv16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv16'(src1, src2);
}

procedure {:inline 1} $AndBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $And'Bv16'(src1,src2);
}

procedure {:inline 1} $OrBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Or'Bv16'(src1,src2);
}

procedure {:inline 1} $XorBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Xor'Bv16'(src1,src2);
}

procedure {:inline 1} $LtBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Lt'Bv16'(src1,src2);
}

procedure {:inline 1} $LeBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Le'Bv16'(src1,src2);
}

procedure {:inline 1} $GtBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Gt'Bv16'(src1,src2);
}

procedure {:inline 1} $GeBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Ge'Bv16'(src1,src2);
}

function $IsValid'bv16'(v: bv16): bool {
  $Ge'Bv16'(v,0bv16) && $Le'Bv16'(v,65535bv16)
}

function {:inline} $IsEqual'bv16'(x: bv16, y: bv16): bool {
    x == y
}

procedure {:inline 1} $int2bv16(src: int) returns (dst: bv16)
{
    if (src > 65535) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.16(src);
}

procedure {:inline 1} $bv2int16(src: bv16) returns (dst: int)
{
    dst := $bv2int.16(src);
}

function {:builtin "(_ int2bv 16)"} $int2bv.16(i: int) returns (bv16);
function {:builtin "bv2nat"} $bv2int.16(i: bv16) returns (int);

function {:bvbuiltin "bvand"} $And'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvor"} $Or'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvxor"} $Xor'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvadd"} $Add'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvsub"} $Sub'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvmul"} $Mul'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvudiv"} $Div'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvurem"} $Mod'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvshl"} $Shl'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvlshr"} $Shr'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvult"} $Lt'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv32'(bv32,bv32) returns(bool);

procedure {:inline 1} $AddBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'($Add'Bv32'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv32'(src1, src2);
}

procedure {:inline 1} $AddBv32_unchecked(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Add'Bv32'(src1, src2);
}

procedure {:inline 1} $SubBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv32'(src1, src2);
}

procedure {:inline 1} $MulBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'($Mul'Bv32'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv32'(src1, src2);
}

procedure {:inline 1} $DivBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if (src2 == 0bv32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv32'(src1, src2);
}

procedure {:inline 1} $ModBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if (src2 == 0bv32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv32'(src1, src2);
}

procedure {:inline 1} $AndBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $And'Bv32'(src1,src2);
}

procedure {:inline 1} $OrBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Or'Bv32'(src1,src2);
}

procedure {:inline 1} $XorBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Xor'Bv32'(src1,src2);
}

procedure {:inline 1} $LtBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Lt'Bv32'(src1,src2);
}

procedure {:inline 1} $LeBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Le'Bv32'(src1,src2);
}

procedure {:inline 1} $GtBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Gt'Bv32'(src1,src2);
}

procedure {:inline 1} $GeBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Ge'Bv32'(src1,src2);
}

function $IsValid'bv32'(v: bv32): bool {
  $Ge'Bv32'(v,0bv32) && $Le'Bv32'(v,2147483647bv32)
}

function {:inline} $IsEqual'bv32'(x: bv32, y: bv32): bool {
    x == y
}

procedure {:inline 1} $int2bv32(src: int) returns (dst: bv32)
{
    if (src > 2147483647) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.32(src);
}

procedure {:inline 1} $bv2int32(src: bv32) returns (dst: int)
{
    dst := $bv2int.32(src);
}

function {:builtin "(_ int2bv 32)"} $int2bv.32(i: int) returns (bv32);
function {:builtin "bv2nat"} $bv2int.32(i: bv32) returns (int);

function {:bvbuiltin "bvand"} $And'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvor"} $Or'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvxor"} $Xor'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvadd"} $Add'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvsub"} $Sub'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvmul"} $Mul'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvudiv"} $Div'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvurem"} $Mod'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvshl"} $Shl'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvlshr"} $Shr'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvult"} $Lt'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv64'(bv64,bv64) returns(bool);

procedure {:inline 1} $AddBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'($Add'Bv64'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv64'(src1, src2);
}

procedure {:inline 1} $AddBv64_unchecked(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Add'Bv64'(src1, src2);
}

procedure {:inline 1} $SubBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv64'(src1, src2);
}

procedure {:inline 1} $MulBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'($Mul'Bv64'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv64'(src1, src2);
}

procedure {:inline 1} $DivBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if (src2 == 0bv64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv64'(src1, src2);
}

procedure {:inline 1} $ModBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if (src2 == 0bv64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv64'(src1, src2);
}

procedure {:inline 1} $AndBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $And'Bv64'(src1,src2);
}

procedure {:inline 1} $OrBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Or'Bv64'(src1,src2);
}

procedure {:inline 1} $XorBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Xor'Bv64'(src1,src2);
}

procedure {:inline 1} $LtBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Lt'Bv64'(src1,src2);
}

procedure {:inline 1} $LeBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Le'Bv64'(src1,src2);
}

procedure {:inline 1} $GtBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Gt'Bv64'(src1,src2);
}

procedure {:inline 1} $GeBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Ge'Bv64'(src1,src2);
}

function $IsValid'bv64'(v: bv64): bool {
  $Ge'Bv64'(v,0bv64) && $Le'Bv64'(v,18446744073709551615bv64)
}

function {:inline} $IsEqual'bv64'(x: bv64, y: bv64): bool {
    x == y
}

procedure {:inline 1} $int2bv64(src: int) returns (dst: bv64)
{
    if (src > 18446744073709551615) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.64(src);
}

procedure {:inline 1} $bv2int64(src: bv64) returns (dst: int)
{
    dst := $bv2int.64(src);
}

function {:builtin "(_ int2bv 64)"} $int2bv.64(i: int) returns (bv64);
function {:builtin "bv2nat"} $bv2int.64(i: bv64) returns (int);

function {:bvbuiltin "bvand"} $And'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvor"} $Or'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvxor"} $Xor'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvadd"} $Add'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvsub"} $Sub'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvmul"} $Mul'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvudiv"} $Div'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvurem"} $Mod'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvshl"} $Shl'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvlshr"} $Shr'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvult"} $Lt'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv128'(bv128,bv128) returns(bool);

procedure {:inline 1} $AddBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'($Add'Bv128'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv128'(src1, src2);
}

procedure {:inline 1} $AddBv128_unchecked(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Add'Bv128'(src1, src2);
}

procedure {:inline 1} $SubBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv128'(src1, src2);
}

procedure {:inline 1} $MulBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'($Mul'Bv128'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv128'(src1, src2);
}

procedure {:inline 1} $DivBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if (src2 == 0bv128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv128'(src1, src2);
}

procedure {:inline 1} $ModBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if (src2 == 0bv128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv128'(src1, src2);
}

procedure {:inline 1} $AndBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $And'Bv128'(src1,src2);
}

procedure {:inline 1} $OrBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Or'Bv128'(src1,src2);
}

procedure {:inline 1} $XorBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Xor'Bv128'(src1,src2);
}

procedure {:inline 1} $LtBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Lt'Bv128'(src1,src2);
}

procedure {:inline 1} $LeBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Le'Bv128'(src1,src2);
}

procedure {:inline 1} $GtBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Gt'Bv128'(src1,src2);
}

procedure {:inline 1} $GeBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Ge'Bv128'(src1,src2);
}

function $IsValid'bv128'(v: bv128): bool {
  $Ge'Bv128'(v,0bv128) && $Le'Bv128'(v,340282366920938463463374607431768211455bv128)
}

function {:inline} $IsEqual'bv128'(x: bv128, y: bv128): bool {
    x == y
}

procedure {:inline 1} $int2bv128(src: int) returns (dst: bv128)
{
    if (src > 340282366920938463463374607431768211455) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.128(src);
}

procedure {:inline 1} $bv2int128(src: bv128) returns (dst: int)
{
    dst := $bv2int.128(src);
}

function {:builtin "(_ int2bv 128)"} $int2bv.128(i: int) returns (bv128);
function {:builtin "bv2nat"} $bv2int.128(i: bv128) returns (int);

function {:bvbuiltin "bvand"} $And'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvor"} $Or'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvxor"} $Xor'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvadd"} $Add'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvsub"} $Sub'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvmul"} $Mul'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvudiv"} $Div'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvurem"} $Mod'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvshl"} $Shl'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvlshr"} $Shr'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvult"} $Lt'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv256'(bv256,bv256) returns(bool);

procedure {:inline 1} $AddBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'($Add'Bv256'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv256'(src1, src2);
}

procedure {:inline 1} $AddBv256_unchecked(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Add'Bv256'(src1, src2);
}

procedure {:inline 1} $SubBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv256'(src1, src2);
}

procedure {:inline 1} $MulBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'($Mul'Bv256'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv256'(src1, src2);
}

procedure {:inline 1} $DivBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if (src2 == 0bv256) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv256'(src1, src2);
}

procedure {:inline 1} $ModBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if (src2 == 0bv256) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv256'(src1, src2);
}

procedure {:inline 1} $AndBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $And'Bv256'(src1,src2);
}

procedure {:inline 1} $OrBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Or'Bv256'(src1,src2);
}

procedure {:inline 1} $XorBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Xor'Bv256'(src1,src2);
}

procedure {:inline 1} $LtBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Lt'Bv256'(src1,src2);
}

procedure {:inline 1} $LeBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Le'Bv256'(src1,src2);
}

procedure {:inline 1} $GtBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Gt'Bv256'(src1,src2);
}

procedure {:inline 1} $GeBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Ge'Bv256'(src1,src2);
}

function $IsValid'bv256'(v: bv256): bool {
  $Ge'Bv256'(v,0bv256) && $Le'Bv256'(v,115792089237316195423570985008687907853269984665640564039457584007913129639935bv256)
}

function {:inline} $IsEqual'bv256'(x: bv256, y: bv256): bool {
    x == y
}

procedure {:inline 1} $int2bv256(src: int) returns (dst: bv256)
{
    if (src > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.256(src);
}

procedure {:inline 1} $bv2int256(src: bv256) returns (dst: int)
{
    dst := $bv2int.256(src);
}

function {:builtin "(_ int2bv 256)"} $int2bv.256(i: int) returns (bv256);
function {:builtin "bv2nat"} $bv2int.256(i: bv256) returns (int);

datatype $Range {
    $Range(lb: int, ub: int)
}

function {:inline} $IsValid'bool'(v: bool): bool {
  true
}

function $IsValid'u8'(v: int): bool {
  v >= 0 && v <= $MAX_U8
}

function $IsValid'u16'(v: int): bool {
  v >= 0 && v <= $MAX_U16
}

function $IsValid'u32'(v: int): bool {
  v >= 0 && v <= $MAX_U32
}

function $IsValid'u64'(v: int): bool {
  v >= 0 && v <= $MAX_U64
}

function $IsValid'u128'(v: int): bool {
  v >= 0 && v <= $MAX_U128
}

function $IsValid'u256'(v: int): bool {
  v >= 0 && v <= $MAX_U256
}

function $IsValid'num'(v: int): bool {
  true
}

function $IsValid'address'(v: int): bool {
  // TODO: restrict max to representable addresses?
  v >= 0
}

function {:inline} $IsValidRange(r: $Range): bool {
   $IsValid'u64'(r->lb) &&  $IsValid'u64'(r->ub)
}

// Intentionally not inlined so it serves as a trigger in quantifiers.
function $InRange(r: $Range, i: int): bool {
   r->lb <= i && i < r->ub
}


function {:inline} $IsEqual'u8'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u16'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u32'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u64'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u128'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u256'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'num'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'address'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'bool'(x: bool, y: bool): bool {
    x == y
}

// ============================================================================================
// Memory

datatype $Location {
    // A global resource location within the statically known resource type's memory,
    // where `a` is an address.
    $Global(a: int),
    // A local location. `i` is the unique index of the local.
    $Local(i: int),
    // The location of a reference outside of the verification scope, for example, a `&mut` parameter
    // of the function being verified. References with these locations don't need to be written back
    // when mutation ends.
    $Param(i: int),
    // The location of an uninitialized mutation. Using this to make sure that the location
    // will not be equal to any valid mutation locations, i.e., $Local, $Global, or $Param.
    $Uninitialized()
}

// A mutable reference which also carries its current value. Since mutable references
// are single threaded in Move, we can keep them together and treat them as a value
// during mutation until the point they are stored back to their original location.
datatype $Mutation<T> {
    $Mutation(l: $Location, p: Vec int, v: T)
}

// Representation of memory for a given type.
datatype $Memory<T> {
    $Memory(domain: [int]bool, contents: [int]T)
}

function {:builtin "MapConst"} $ConstMemoryDomain(v: bool): [int]bool;
function {:builtin "MapConst"} $ConstMemoryContent<T>(v: T): [int]T;
axiom $ConstMemoryDomain(false) == (lambda i: int :: false);
axiom $ConstMemoryDomain(true) == (lambda i: int :: true);


// Dereferences a mutation.
function {:inline} $Dereference<T>(ref: $Mutation T): T {
    ref->v
}

// Update the value of a mutation.
function {:inline} $UpdateMutation<T>(m: $Mutation T, v: T): $Mutation T {
    $Mutation(m->l, m->p, v)
}

function {:inline} $ChildMutation<T1, T2>(m: $Mutation T1, offset: int, v: T2): $Mutation T2 {
    $Mutation(m->l, ExtendVec(m->p, offset), v)
}

// Return true if two mutations share the location and path
function {:inline} $IsSameMutation<T1, T2>(parent: $Mutation T1, child: $Mutation T2 ): bool {
    parent->l == child->l && parent->p == child->p
}

// Return true if the mutation is a parent of a child which was derived with the given edge offset. This
// is used to implement write-back choices.
function {:inline} $IsParentMutation<T1, T2>(parent: $Mutation T1, edge: int, child: $Mutation T2 ): bool {
    parent->l == child->l &&
    (var pp := parent->p;
    (var cp := child->p;
    (var pl := LenVec(pp);
    (var cl := LenVec(cp);
     cl == pl + 1 &&
     (forall i: int:: i >= 0 && i < pl ==> ReadVec(pp, i) ==  ReadVec(cp, i)) &&
     $EdgeMatches(ReadVec(cp, pl), edge)
    ))))
}

// Return true if the mutation is a parent of a child, for hyper edge.
function {:inline} $IsParentMutationHyper<T1, T2>(parent: $Mutation T1, hyper_edge: Vec int, child: $Mutation T2 ): bool {
    parent->l == child->l &&
    (var pp := parent->p;
    (var cp := child->p;
    (var pl := LenVec(pp);
    (var cl := LenVec(cp);
    (var el := LenVec(hyper_edge);
     cl == pl + el &&
     (forall i: int:: i >= 0 && i < pl ==> ReadVec(pp, i) == ReadVec(cp, i)) &&
     (forall i: int:: i >= 0 && i < el ==> $EdgeMatches(ReadVec(cp, pl + i), ReadVec(hyper_edge, i)))
    )))))
}

function {:inline} $EdgeMatches(edge: int, edge_pattern: int): bool {
    edge_pattern == -1 // wildcard
    || edge_pattern == edge
}



function {:inline} $SameLocation<T1, T2>(m1: $Mutation T1, m2: $Mutation T2): bool {
    m1->l == m2->l
}

function {:inline} $HasGlobalLocation<T>(m: $Mutation T): bool {
    (m->l) is $Global
}

function {:inline} $HasLocalLocation<T>(m: $Mutation T, idx: int): bool {
    m->l == $Local(idx)
}

function {:inline} $GlobalLocationAddress<T>(m: $Mutation T): int {
    (m->l)->a
}



// Tests whether resource exists.
function {:inline} $ResourceExists<T>(m: $Memory T, addr: int): bool {
    m->domain[addr]
}

// Obtains Value of given resource.
function {:inline} $ResourceValue<T>(m: $Memory T, addr: int): T {
    m->contents[addr]
}

// Update resource.
function {:inline} $ResourceUpdate<T>(m: $Memory T, a: int, v: T): $Memory T {
    $Memory(m->domain[a := true], m->contents[a := v])
}

// Remove resource.
function {:inline} $ResourceRemove<T>(m: $Memory T, a: int): $Memory T {
    $Memory(m->domain[a := false], m->contents)
}

// Copies resource from memory s to m.
function {:inline} $ResourceCopy<T>(m: $Memory T, s: $Memory T, a: int): $Memory T {
    $Memory(m->domain[a := s->domain[a]],
            m->contents[a := s->contents[a]])
}



// ============================================================================================
// Abort Handling

var $abort_flag: bool;
var $abort_code: int;

function {:inline} $process_abort_code(code: int): int {
    code
}

const $EXEC_FAILURE_CODE: int;
axiom $EXEC_FAILURE_CODE == -1;

// TODO(wrwg): currently we map aborts of native functions like those for vectors also to
//   execution failure. This may need to be aligned with what the runtime actually does.

procedure {:inline 1} $ExecFailureAbort() {
    $abort_flag := true;
    $abort_code := $EXEC_FAILURE_CODE;
}

procedure {:inline 1} $Abort(code: int) {
    $abort_flag := true;
    $abort_code := code;
}

function {:inline} $StdError(cat: int, reason: int): int {
    reason * 256 + cat
}

procedure {:inline 1} $InitVerification() {
    // Set abort_flag to false, and havoc abort_code
    $abort_flag := false;
    havoc $abort_code;
    // Initialize event store
    call $InitEventStore();
}

// ============================================================================================
// Instructions


procedure {:inline 1} $CastU8(src: int) returns (dst: int)
{
    if (src > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU16(src: int) returns (dst: int)
{
    if (src > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU32(src: int) returns (dst: int)
{
    if (src > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU64(src: int) returns (dst: int)
{
    if (src > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU128(src: int) returns (dst: int)
{
    if (src > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU256(src: int) returns (dst: int)
{
    if (src > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $AddU8(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU16(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU16_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU32(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU32_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU64(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU64_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU128(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU128_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU256(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU256_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $Sub(src1: int, src2: int) returns (dst: int)
{
    if (src1 < src2) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 - src2;
}

// uninterpreted function to return an undefined value.
function $undefined_int(): int;

// Recursive exponentiation function
// Undefined unless e >=0.  $pow(0,0) is also undefined.
function $pow(n: int, e: int): int {
    if n != 0 && e == 0 then 1
    else if e > 0 then n * $pow(n, e - 1)
    else $undefined_int()
}

function $shl(src1: int, p: int): int {
    src1 * $pow(2, p)
}

function $shlU8(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 256
}

function $shlU16(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 65536
}

function $shlU32(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 4294967296
}

function $shlU64(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 18446744073709551616
}

function $shlU128(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 340282366920938463463374607431768211456
}

function $shlU256(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 115792089237316195423570985008687907853269984665640564039457584007913129639936
}

function $shr(src1: int, p: int): int {
    src1 div $pow(2, p)
}

// We need to know the size of the destination in order to drop bits
// that have been shifted left more than that, so we have $ShlU8/16/32/64/128/256
procedure {:inline 1} $ShlU8(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU8(src1, src2);
}

// Template for cast and shift operations of bitvector types

procedure {:inline 1} $CastBv8to8(src: bv8) returns (dst: bv8)
{
    dst := src;
}


function $shlBv8From8(src1: bv8, src2: bv8) returns (bv8)
{
    $Shl'Bv8'(src1, src2)
}

procedure {:inline 1} $ShlBv8From8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Ge'Bv8'(src2, 8bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2);
}

function $shrBv8From8(src1: bv8, src2: bv8) returns (bv8)
{
    $Shr'Bv8'(src1, src2)
}

procedure {:inline 1} $ShrBv8From8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Ge'Bv8'(src2, 8bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2);
}

procedure {:inline 1} $CastBv16to8(src: bv16) returns (dst: bv8)
{
    if ($Gt'Bv16'(src, 255bv16)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From16(src1: bv8, src2: bv16) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From16(src1: bv8, src2: bv16) returns (dst: bv8)
{
    if ($Ge'Bv16'(src2, 8bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From16(src1: bv8, src2: bv16) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From16(src1: bv8, src2: bv16) returns (dst: bv8)
{
    if ($Ge'Bv16'(src2, 8bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv32to8(src: bv32) returns (dst: bv8)
{
    if ($Gt'Bv32'(src, 255bv32)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From32(src1: bv8, src2: bv32) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From32(src1: bv8, src2: bv32) returns (dst: bv8)
{
    if ($Ge'Bv32'(src2, 8bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From32(src1: bv8, src2: bv32) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From32(src1: bv8, src2: bv32) returns (dst: bv8)
{
    if ($Ge'Bv32'(src2, 8bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv64to8(src: bv64) returns (dst: bv8)
{
    if ($Gt'Bv64'(src, 255bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From64(src1: bv8, src2: bv64) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From64(src1: bv8, src2: bv64) returns (dst: bv8)
{
    if ($Ge'Bv64'(src2, 8bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From64(src1: bv8, src2: bv64) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From64(src1: bv8, src2: bv64) returns (dst: bv8)
{
    if ($Ge'Bv64'(src2, 8bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv128to8(src: bv128) returns (dst: bv8)
{
    if ($Gt'Bv128'(src, 255bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From128(src1: bv8, src2: bv128) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From128(src1: bv8, src2: bv128) returns (dst: bv8)
{
    if ($Ge'Bv128'(src2, 8bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From128(src1: bv8, src2: bv128) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From128(src1: bv8, src2: bv128) returns (dst: bv8)
{
    if ($Ge'Bv128'(src2, 8bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv256to8(src: bv256) returns (dst: bv8)
{
    if ($Gt'Bv256'(src, 255bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From256(src1: bv8, src2: bv256) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From256(src1: bv8, src2: bv256) returns (dst: bv8)
{
    if ($Ge'Bv256'(src2, 8bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From256(src1: bv8, src2: bv256) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From256(src1: bv8, src2: bv256) returns (dst: bv8)
{
    if ($Ge'Bv256'(src2, 8bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv8to16(src: bv8) returns (dst: bv16)
{
    dst := 0bv8 ++ src;
}


function $shlBv16From8(src1: bv16, src2: bv8) returns (bv16)
{
    $Shl'Bv16'(src1, 0bv8 ++ src2)
}

procedure {:inline 1} $ShlBv16From8(src1: bv16, src2: bv8) returns (dst: bv16)
{
    if ($Ge'Bv8'(src2, 16bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, 0bv8 ++ src2);
}

function $shrBv16From8(src1: bv16, src2: bv8) returns (bv16)
{
    $Shr'Bv16'(src1, 0bv8 ++ src2)
}

procedure {:inline 1} $ShrBv16From8(src1: bv16, src2: bv8) returns (dst: bv16)
{
    if ($Ge'Bv8'(src2, 16bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, 0bv8 ++ src2);
}

procedure {:inline 1} $CastBv16to16(src: bv16) returns (dst: bv16)
{
    dst := src;
}


function $shlBv16From16(src1: bv16, src2: bv16) returns (bv16)
{
    $Shl'Bv16'(src1, src2)
}

procedure {:inline 1} $ShlBv16From16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Ge'Bv16'(src2, 16bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2);
}

function $shrBv16From16(src1: bv16, src2: bv16) returns (bv16)
{
    $Shr'Bv16'(src1, src2)
}

procedure {:inline 1} $ShrBv16From16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Ge'Bv16'(src2, 16bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2);
}

procedure {:inline 1} $CastBv32to16(src: bv32) returns (dst: bv16)
{
    if ($Gt'Bv32'(src, 65535bv32)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From32(src1: bv16, src2: bv32) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From32(src1: bv16, src2: bv32) returns (dst: bv16)
{
    if ($Ge'Bv32'(src2, 16bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From32(src1: bv16, src2: bv32) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From32(src1: bv16, src2: bv32) returns (dst: bv16)
{
    if ($Ge'Bv32'(src2, 16bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv64to16(src: bv64) returns (dst: bv16)
{
    if ($Gt'Bv64'(src, 65535bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From64(src1: bv16, src2: bv64) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From64(src1: bv16, src2: bv64) returns (dst: bv16)
{
    if ($Ge'Bv64'(src2, 16bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From64(src1: bv16, src2: bv64) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From64(src1: bv16, src2: bv64) returns (dst: bv16)
{
    if ($Ge'Bv64'(src2, 16bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv128to16(src: bv128) returns (dst: bv16)
{
    if ($Gt'Bv128'(src, 65535bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From128(src1: bv16, src2: bv128) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From128(src1: bv16, src2: bv128) returns (dst: bv16)
{
    if ($Ge'Bv128'(src2, 16bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From128(src1: bv16, src2: bv128) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From128(src1: bv16, src2: bv128) returns (dst: bv16)
{
    if ($Ge'Bv128'(src2, 16bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv256to16(src: bv256) returns (dst: bv16)
{
    if ($Gt'Bv256'(src, 65535bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From256(src1: bv16, src2: bv256) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From256(src1: bv16, src2: bv256) returns (dst: bv16)
{
    if ($Ge'Bv256'(src2, 16bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From256(src1: bv16, src2: bv256) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From256(src1: bv16, src2: bv256) returns (dst: bv16)
{
    if ($Ge'Bv256'(src2, 16bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv8to32(src: bv8) returns (dst: bv32)
{
    dst := 0bv24 ++ src;
}


function $shlBv32From8(src1: bv32, src2: bv8) returns (bv32)
{
    $Shl'Bv32'(src1, 0bv24 ++ src2)
}

procedure {:inline 1} $ShlBv32From8(src1: bv32, src2: bv8) returns (dst: bv32)
{
    if ($Ge'Bv8'(src2, 32bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, 0bv24 ++ src2);
}

function $shrBv32From8(src1: bv32, src2: bv8) returns (bv32)
{
    $Shr'Bv32'(src1, 0bv24 ++ src2)
}

procedure {:inline 1} $ShrBv32From8(src1: bv32, src2: bv8) returns (dst: bv32)
{
    if ($Ge'Bv8'(src2, 32bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, 0bv24 ++ src2);
}

procedure {:inline 1} $CastBv16to32(src: bv16) returns (dst: bv32)
{
    dst := 0bv16 ++ src;
}


function $shlBv32From16(src1: bv32, src2: bv16) returns (bv32)
{
    $Shl'Bv32'(src1, 0bv16 ++ src2)
}

procedure {:inline 1} $ShlBv32From16(src1: bv32, src2: bv16) returns (dst: bv32)
{
    if ($Ge'Bv16'(src2, 32bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, 0bv16 ++ src2);
}

function $shrBv32From16(src1: bv32, src2: bv16) returns (bv32)
{
    $Shr'Bv32'(src1, 0bv16 ++ src2)
}

procedure {:inline 1} $ShrBv32From16(src1: bv32, src2: bv16) returns (dst: bv32)
{
    if ($Ge'Bv16'(src2, 32bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, 0bv16 ++ src2);
}

procedure {:inline 1} $CastBv32to32(src: bv32) returns (dst: bv32)
{
    dst := src;
}


function $shlBv32From32(src1: bv32, src2: bv32) returns (bv32)
{
    $Shl'Bv32'(src1, src2)
}

procedure {:inline 1} $ShlBv32From32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Ge'Bv32'(src2, 32bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2);
}

function $shrBv32From32(src1: bv32, src2: bv32) returns (bv32)
{
    $Shr'Bv32'(src1, src2)
}

procedure {:inline 1} $ShrBv32From32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Ge'Bv32'(src2, 32bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2);
}

procedure {:inline 1} $CastBv64to32(src: bv64) returns (dst: bv32)
{
    if ($Gt'Bv64'(src, 2147483647bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From64(src1: bv32, src2: bv64) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From64(src1: bv32, src2: bv64) returns (dst: bv32)
{
    if ($Ge'Bv64'(src2, 32bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From64(src1: bv32, src2: bv64) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From64(src1: bv32, src2: bv64) returns (dst: bv32)
{
    if ($Ge'Bv64'(src2, 32bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv128to32(src: bv128) returns (dst: bv32)
{
    if ($Gt'Bv128'(src, 2147483647bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From128(src1: bv32, src2: bv128) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From128(src1: bv32, src2: bv128) returns (dst: bv32)
{
    if ($Ge'Bv128'(src2, 32bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From128(src1: bv32, src2: bv128) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From128(src1: bv32, src2: bv128) returns (dst: bv32)
{
    if ($Ge'Bv128'(src2, 32bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv256to32(src: bv256) returns (dst: bv32)
{
    if ($Gt'Bv256'(src, 2147483647bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From256(src1: bv32, src2: bv256) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From256(src1: bv32, src2: bv256) returns (dst: bv32)
{
    if ($Ge'Bv256'(src2, 32bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From256(src1: bv32, src2: bv256) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From256(src1: bv32, src2: bv256) returns (dst: bv32)
{
    if ($Ge'Bv256'(src2, 32bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv8to64(src: bv8) returns (dst: bv64)
{
    dst := 0bv56 ++ src;
}


function $shlBv64From8(src1: bv64, src2: bv8) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv56 ++ src2)
}

procedure {:inline 1} $ShlBv64From8(src1: bv64, src2: bv8) returns (dst: bv64)
{
    if ($Ge'Bv8'(src2, 64bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv56 ++ src2);
}

function $shrBv64From8(src1: bv64, src2: bv8) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv56 ++ src2)
}

procedure {:inline 1} $ShrBv64From8(src1: bv64, src2: bv8) returns (dst: bv64)
{
    if ($Ge'Bv8'(src2, 64bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv56 ++ src2);
}

procedure {:inline 1} $CastBv16to64(src: bv16) returns (dst: bv64)
{
    dst := 0bv48 ++ src;
}


function $shlBv64From16(src1: bv64, src2: bv16) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv48 ++ src2)
}

procedure {:inline 1} $ShlBv64From16(src1: bv64, src2: bv16) returns (dst: bv64)
{
    if ($Ge'Bv16'(src2, 64bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv48 ++ src2);
}

function $shrBv64From16(src1: bv64, src2: bv16) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv48 ++ src2)
}

procedure {:inline 1} $ShrBv64From16(src1: bv64, src2: bv16) returns (dst: bv64)
{
    if ($Ge'Bv16'(src2, 64bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv48 ++ src2);
}

procedure {:inline 1} $CastBv32to64(src: bv32) returns (dst: bv64)
{
    dst := 0bv32 ++ src;
}


function $shlBv64From32(src1: bv64, src2: bv32) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv32 ++ src2)
}

procedure {:inline 1} $ShlBv64From32(src1: bv64, src2: bv32) returns (dst: bv64)
{
    if ($Ge'Bv32'(src2, 64bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv32 ++ src2);
}

function $shrBv64From32(src1: bv64, src2: bv32) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv32 ++ src2)
}

procedure {:inline 1} $ShrBv64From32(src1: bv64, src2: bv32) returns (dst: bv64)
{
    if ($Ge'Bv32'(src2, 64bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv32 ++ src2);
}

procedure {:inline 1} $CastBv64to64(src: bv64) returns (dst: bv64)
{
    dst := src;
}


function $shlBv64From64(src1: bv64, src2: bv64) returns (bv64)
{
    $Shl'Bv64'(src1, src2)
}

procedure {:inline 1} $ShlBv64From64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Ge'Bv64'(src2, 64bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2);
}

function $shrBv64From64(src1: bv64, src2: bv64) returns (bv64)
{
    $Shr'Bv64'(src1, src2)
}

procedure {:inline 1} $ShrBv64From64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Ge'Bv64'(src2, 64bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2);
}

procedure {:inline 1} $CastBv128to64(src: bv128) returns (dst: bv64)
{
    if ($Gt'Bv128'(src, 18446744073709551615bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[64:0];
}


function $shlBv64From128(src1: bv64, src2: bv128) returns (bv64)
{
    $Shl'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShlBv64From128(src1: bv64, src2: bv128) returns (dst: bv64)
{
    if ($Ge'Bv128'(src2, 64bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2[64:0]);
}

function $shrBv64From128(src1: bv64, src2: bv128) returns (bv64)
{
    $Shr'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShrBv64From128(src1: bv64, src2: bv128) returns (dst: bv64)
{
    if ($Ge'Bv128'(src2, 64bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2[64:0]);
}

procedure {:inline 1} $CastBv256to64(src: bv256) returns (dst: bv64)
{
    if ($Gt'Bv256'(src, 18446744073709551615bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[64:0];
}


function $shlBv64From256(src1: bv64, src2: bv256) returns (bv64)
{
    $Shl'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShlBv64From256(src1: bv64, src2: bv256) returns (dst: bv64)
{
    if ($Ge'Bv256'(src2, 64bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2[64:0]);
}

function $shrBv64From256(src1: bv64, src2: bv256) returns (bv64)
{
    $Shr'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShrBv64From256(src1: bv64, src2: bv256) returns (dst: bv64)
{
    if ($Ge'Bv256'(src2, 64bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2[64:0]);
}

procedure {:inline 1} $CastBv8to128(src: bv8) returns (dst: bv128)
{
    dst := 0bv120 ++ src;
}


function $shlBv128From8(src1: bv128, src2: bv8) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv120 ++ src2)
}

procedure {:inline 1} $ShlBv128From8(src1: bv128, src2: bv8) returns (dst: bv128)
{
    if ($Ge'Bv8'(src2, 128bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv120 ++ src2);
}

function $shrBv128From8(src1: bv128, src2: bv8) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv120 ++ src2)
}

procedure {:inline 1} $ShrBv128From8(src1: bv128, src2: bv8) returns (dst: bv128)
{
    if ($Ge'Bv8'(src2, 128bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv120 ++ src2);
}

procedure {:inline 1} $CastBv16to128(src: bv16) returns (dst: bv128)
{
    dst := 0bv112 ++ src;
}


function $shlBv128From16(src1: bv128, src2: bv16) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv112 ++ src2)
}

procedure {:inline 1} $ShlBv128From16(src1: bv128, src2: bv16) returns (dst: bv128)
{
    if ($Ge'Bv16'(src2, 128bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv112 ++ src2);
}

function $shrBv128From16(src1: bv128, src2: bv16) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv112 ++ src2)
}

procedure {:inline 1} $ShrBv128From16(src1: bv128, src2: bv16) returns (dst: bv128)
{
    if ($Ge'Bv16'(src2, 128bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv112 ++ src2);
}

procedure {:inline 1} $CastBv32to128(src: bv32) returns (dst: bv128)
{
    dst := 0bv96 ++ src;
}


function $shlBv128From32(src1: bv128, src2: bv32) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv96 ++ src2)
}

procedure {:inline 1} $ShlBv128From32(src1: bv128, src2: bv32) returns (dst: bv128)
{
    if ($Ge'Bv32'(src2, 128bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv96 ++ src2);
}

function $shrBv128From32(src1: bv128, src2: bv32) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv96 ++ src2)
}

procedure {:inline 1} $ShrBv128From32(src1: bv128, src2: bv32) returns (dst: bv128)
{
    if ($Ge'Bv32'(src2, 128bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv96 ++ src2);
}

procedure {:inline 1} $CastBv64to128(src: bv64) returns (dst: bv128)
{
    dst := 0bv64 ++ src;
}


function $shlBv128From64(src1: bv128, src2: bv64) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv64 ++ src2)
}

procedure {:inline 1} $ShlBv128From64(src1: bv128, src2: bv64) returns (dst: bv128)
{
    if ($Ge'Bv64'(src2, 128bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv64 ++ src2);
}

function $shrBv128From64(src1: bv128, src2: bv64) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv64 ++ src2)
}

procedure {:inline 1} $ShrBv128From64(src1: bv128, src2: bv64) returns (dst: bv128)
{
    if ($Ge'Bv64'(src2, 128bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv64 ++ src2);
}

procedure {:inline 1} $CastBv128to128(src: bv128) returns (dst: bv128)
{
    dst := src;
}


function $shlBv128From128(src1: bv128, src2: bv128) returns (bv128)
{
    $Shl'Bv128'(src1, src2)
}

procedure {:inline 1} $ShlBv128From128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Ge'Bv128'(src2, 128bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, src2);
}

function $shrBv128From128(src1: bv128, src2: bv128) returns (bv128)
{
    $Shr'Bv128'(src1, src2)
}

procedure {:inline 1} $ShrBv128From128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Ge'Bv128'(src2, 128bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, src2);
}

procedure {:inline 1} $CastBv256to128(src: bv256) returns (dst: bv128)
{
    if ($Gt'Bv256'(src, 340282366920938463463374607431768211455bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[128:0];
}


function $shlBv128From256(src1: bv128, src2: bv256) returns (bv128)
{
    $Shl'Bv128'(src1, src2[128:0])
}

procedure {:inline 1} $ShlBv128From256(src1: bv128, src2: bv256) returns (dst: bv128)
{
    if ($Ge'Bv256'(src2, 128bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, src2[128:0]);
}

function $shrBv128From256(src1: bv128, src2: bv256) returns (bv128)
{
    $Shr'Bv128'(src1, src2[128:0])
}

procedure {:inline 1} $ShrBv128From256(src1: bv128, src2: bv256) returns (dst: bv128)
{
    if ($Ge'Bv256'(src2, 128bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, src2[128:0]);
}

procedure {:inline 1} $CastBv8to256(src: bv8) returns (dst: bv256)
{
    dst := 0bv248 ++ src;
}


function $shlBv256From8(src1: bv256, src2: bv8) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv248 ++ src2)
}

procedure {:inline 1} $ShlBv256From8(src1: bv256, src2: bv8) returns (dst: bv256)
{
    if ($Ge'Bv8'(src2, 256bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv248 ++ src2);
}

function $shrBv256From8(src1: bv256, src2: bv8) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv248 ++ src2)
}

procedure {:inline 1} $ShrBv256From8(src1: bv256, src2: bv8) returns (dst: bv256)
{
    if ($Ge'Bv8'(src2, 256bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv248 ++ src2);
}

procedure {:inline 1} $CastBv16to256(src: bv16) returns (dst: bv256)
{
    dst := 0bv240 ++ src;
}


function $shlBv256From16(src1: bv256, src2: bv16) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv240 ++ src2)
}

procedure {:inline 1} $ShlBv256From16(src1: bv256, src2: bv16) returns (dst: bv256)
{
    if ($Ge'Bv16'(src2, 256bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv240 ++ src2);
}

function $shrBv256From16(src1: bv256, src2: bv16) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv240 ++ src2)
}

procedure {:inline 1} $ShrBv256From16(src1: bv256, src2: bv16) returns (dst: bv256)
{
    if ($Ge'Bv16'(src2, 256bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv240 ++ src2);
}

procedure {:inline 1} $CastBv32to256(src: bv32) returns (dst: bv256)
{
    dst := 0bv224 ++ src;
}


function $shlBv256From32(src1: bv256, src2: bv32) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv224 ++ src2)
}

procedure {:inline 1} $ShlBv256From32(src1: bv256, src2: bv32) returns (dst: bv256)
{
    if ($Ge'Bv32'(src2, 256bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv224 ++ src2);
}

function $shrBv256From32(src1: bv256, src2: bv32) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv224 ++ src2)
}

procedure {:inline 1} $ShrBv256From32(src1: bv256, src2: bv32) returns (dst: bv256)
{
    if ($Ge'Bv32'(src2, 256bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv224 ++ src2);
}

procedure {:inline 1} $CastBv64to256(src: bv64) returns (dst: bv256)
{
    dst := 0bv192 ++ src;
}


function $shlBv256From64(src1: bv256, src2: bv64) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv192 ++ src2)
}

procedure {:inline 1} $ShlBv256From64(src1: bv256, src2: bv64) returns (dst: bv256)
{
    if ($Ge'Bv64'(src2, 256bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv192 ++ src2);
}

function $shrBv256From64(src1: bv256, src2: bv64) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv192 ++ src2)
}

procedure {:inline 1} $ShrBv256From64(src1: bv256, src2: bv64) returns (dst: bv256)
{
    if ($Ge'Bv64'(src2, 256bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv192 ++ src2);
}

procedure {:inline 1} $CastBv128to256(src: bv128) returns (dst: bv256)
{
    dst := 0bv128 ++ src;
}


function $shlBv256From128(src1: bv256, src2: bv128) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv128 ++ src2)
}

procedure {:inline 1} $ShlBv256From128(src1: bv256, src2: bv128) returns (dst: bv256)
{
    if ($Ge'Bv128'(src2, 256bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv128 ++ src2);
}

function $shrBv256From128(src1: bv256, src2: bv128) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv128 ++ src2)
}

procedure {:inline 1} $ShrBv256From128(src1: bv256, src2: bv128) returns (dst: bv256)
{
    if ($Ge'Bv128'(src2, 256bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv128 ++ src2);
}

procedure {:inline 1} $CastBv256to256(src: bv256) returns (dst: bv256)
{
    dst := src;
}


function $shlBv256From256(src1: bv256, src2: bv256) returns (bv256)
{
    $Shl'Bv256'(src1, src2)
}

procedure {:inline 1} $ShlBv256From256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Ge'Bv256'(src2, 256bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, src2);
}

function $shrBv256From256(src1: bv256, src2: bv256) returns (bv256)
{
    $Shr'Bv256'(src1, src2)
}

procedure {:inline 1} $ShrBv256From256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Ge'Bv256'(src2, 256bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, src2);
}

procedure {:inline 1} $ShlU16(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU16(src1, src2);
}

procedure {:inline 1} $ShlU32(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU32(src1, src2);
}

procedure {:inline 1} $ShlU64(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 64) {
       call $ExecFailureAbort();
       return;
    }
    dst := $shlU64(src1, src2);
}

procedure {:inline 1} $ShlU128(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU128(src1, src2);
}

procedure {:inline 1} $ShlU256(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shlU256(src1, src2);
}

procedure {:inline 1} $Shr(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU8(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU16(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU32(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU64(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU128(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU256(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shr(src1, src2);
}

procedure {:inline 1} $MulU8(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU16(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU32(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU64(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU128(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU256(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $Div(src1: int, src2: int) returns (dst: int)
{
    if (src2 == 0) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 div src2;
}

procedure {:inline 1} $Mod(src1: int, src2: int) returns (dst: int)
{
    if (src2 == 0) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 mod src2;
}

procedure {:inline 1} $ArithBinaryUnimplemented(src1: int, src2: int) returns (dst: int);

procedure {:inline 1} $Lt(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 < src2;
}

procedure {:inline 1} $Gt(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 > src2;
}

procedure {:inline 1} $Le(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 <= src2;
}

procedure {:inline 1} $Ge(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 >= src2;
}

procedure {:inline 1} $And(src1: bool, src2: bool) returns (dst: bool)
{
    dst := src1 && src2;
}

procedure {:inline 1} $Or(src1: bool, src2: bool) returns (dst: bool)
{
    dst := src1 || src2;
}

procedure {:inline 1} $Not(src: bool) returns (dst: bool)
{
    dst := !src;
}

// Pack and Unpack are auto-generated for each type T


// ==================================================================================
// Native Vector

function {:inline} $SliceVecByRange<T>(v: Vec T, r: $Range): Vec T {
    SliceVec(v, r->lb, r->ub)
}

// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `#0`

// Not inlined. It appears faster this way.
function $IsEqual'vec'#0''(v1: Vec (#0), v2: Vec (#0)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'#0'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'#0''(v: Vec (#0), prefix: Vec (#0)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'#0'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'#0''(v: Vec (#0), suffix: Vec (#0)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'#0'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'#0''(v: Vec (#0)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'#0'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'#0'(v: Vec (#0), e: #0): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'#0'(ReadVec(v, i), e))
}

function $IndexOfVec'#0'(v: Vec (#0), e: #0): int;
axiom (forall v: Vec (#0), e: #0:: {$IndexOfVec'#0'(v, e)}
    (var i := $IndexOfVec'#0'(v, e);
     if (!$ContainsVec'#0'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'#0'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'#0'(ReadVec(v, j), e))));


function {:inline} $RangeVec'#0'(v: Vec (#0)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'#0'(): Vec (#0) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'#0'() returns (v: Vec (#0)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'#0'(): Vec (#0) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'#0'(v: Vec (#0)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'#0'(m: $Mutation (Vec (#0)), val: #0) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'#0'(v: Vec (#0), val: #0): Vec (#0) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'#0'(m: $Mutation (Vec (#0))) returns (e: #0, m': $Mutation (Vec (#0))) {
    var v: Vec (#0);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'#0'(m: $Mutation (Vec (#0)), other: Vec (#0)) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'#0'(m: $Mutation (Vec (#0))) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'#0'(m: $Mutation (Vec (#0)), other: Vec (#0)) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'#0'(m: $Mutation (Vec (#0)), new_len: int) returns (v: (Vec (#0)), m': $Mutation (Vec (#0))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'#0'(m: $Mutation (Vec (#0)), new_len: int) returns (v: (Vec (#0)), m': $Mutation (Vec (#0))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'#0'(m: $Mutation (Vec (#0)), left: int, right: int) returns (m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var mid_vec: Vec (#0);
    var right_vec: Vec (#0);
    var v: Vec (#0);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'#0'(m: $Mutation (Vec (#0)), rot: int) returns (n: int, m': $Mutation (Vec (#0))) {
    var v: Vec (#0);
    var len: int;
    var left_vec: Vec (#0);
    var right_vec: Vec (#0);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'#0'(m: $Mutation (Vec (#0)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var mid_vec: Vec (#0);
    var right_vec: Vec (#0);
    var mid_left_vec: Vec (#0);
    var mid_right_vec: Vec (#0);
    var v: Vec (#0);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'#0'(m: $Mutation (Vec (#0)), i: int, e: #0) returns (m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var right_vec: Vec (#0);
    var v: Vec (#0);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'#0'(v: Vec (#0)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'#0'(v: Vec (#0)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'#0'(v: Vec (#0), i: int) returns (dst: #0) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'#0'(v: Vec (#0), i: int): #0 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'#0'(m: $Mutation (Vec (#0)), index: int)
returns (dst: $Mutation (#0), m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'#0'(v: Vec (#0), i: int): #0 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'#0'(v: Vec (#0)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'#0'(m: $Mutation (Vec (#0)), i: int, j: int) returns (m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'#0'(v: Vec (#0), i: int, j: int): Vec (#0) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'#0'(m: $Mutation (Vec (#0)), i: int) returns (e: #0, m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'#0'(m: $Mutation (Vec (#0)), i: int) returns (e: #0, m': $Mutation (Vec (#0)))
{
    var len: int;
    var v: Vec (#0);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'#0'(v: Vec (#0), e: #0) returns (res: bool)  {
    res := $ContainsVec'#0'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'#0'(v: Vec (#0), e: #0) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'#0'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_aggregator_Aggregator`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_aggregator_Aggregator''(v1: Vec ($1_aggregator_Aggregator), v2: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator), prefix: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator), suffix: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_aggregator_Aggregator'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator): int;
axiom (forall v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator:: {$IndexOfVec'$1_aggregator_Aggregator'(v, e)}
    (var i := $IndexOfVec'$1_aggregator_Aggregator'(v, e);
     if (!$ContainsVec'$1_aggregator_Aggregator'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_aggregator_Aggregator'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_aggregator_Aggregator'(): Vec ($1_aggregator_Aggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_aggregator_Aggregator'() returns (v: Vec ($1_aggregator_Aggregator)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_aggregator_Aggregator'(): Vec ($1_aggregator_Aggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), val: $1_aggregator_Aggregator) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), val: $1_aggregator_Aggregator): Vec ($1_aggregator_Aggregator) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator))) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var v: Vec ($1_aggregator_Aggregator);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), other: Vec ($1_aggregator_Aggregator)) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator))) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), other: Vec ($1_aggregator_Aggregator)) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), new_len: int) returns (v: (Vec ($1_aggregator_Aggregator)), m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), new_len: int) returns (v: (Vec ($1_aggregator_Aggregator)), m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), left: int, right: int) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var left_vec: Vec ($1_aggregator_Aggregator);
    var mid_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    var v: Vec ($1_aggregator_Aggregator);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), rot: int) returns (n: int, m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var v: Vec ($1_aggregator_Aggregator);
    var len: int;
    var left_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var left_vec: Vec ($1_aggregator_Aggregator);
    var mid_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    var mid_left_vec: Vec ($1_aggregator_Aggregator);
    var mid_right_vec: Vec ($1_aggregator_Aggregator);
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int, e: $1_aggregator_Aggregator) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var left_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int) returns (dst: $1_aggregator_Aggregator) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int): $1_aggregator_Aggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), index: int)
returns (dst: $Mutation ($1_aggregator_Aggregator), m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int): $1_aggregator_Aggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int, j: int) returns (m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int, j: int): Vec ($1_aggregator_Aggregator) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var len: int;
    var v: Vec ($1_aggregator_Aggregator);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator) returns (res: bool)  {
    res := $ContainsVec'$1_aggregator_Aggregator'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_aggregator_Aggregator'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_aggregator_v2_AggregatorSnapshot'u64'`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(v1: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), v2: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_aggregator_v2_AggregatorSnapshot'u64''(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), prefix: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_aggregator_v2_AggregatorSnapshot'u64''(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), suffix: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_aggregator_v2_AggregatorSnapshot'u64''(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), e: $1_aggregator_v2_AggregatorSnapshot'u64'): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aggregator_v2_AggregatorSnapshot'u64''(ReadVec(v, i), e))
}

function $IndexOfVec'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), e: $1_aggregator_v2_AggregatorSnapshot'u64'): int;
axiom (forall v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), e: $1_aggregator_v2_AggregatorSnapshot'u64':: {$IndexOfVec'$1_aggregator_v2_AggregatorSnapshot'u64''(v, e)}
    (var i := $IndexOfVec'$1_aggregator_v2_AggregatorSnapshot'u64''(v, e);
     if (!$ContainsVec'$1_aggregator_v2_AggregatorSnapshot'u64''(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aggregator_v2_AggregatorSnapshot'u64''(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_aggregator_v2_AggregatorSnapshot'u64''(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_aggregator_v2_AggregatorSnapshot'u64''(): Vec ($1_aggregator_v2_AggregatorSnapshot'u64') {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_aggregator_v2_AggregatorSnapshot'u64''() returns (v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_aggregator_v2_AggregatorSnapshot'u64''(): Vec ($1_aggregator_v2_AggregatorSnapshot'u64') {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), val: $1_aggregator_v2_AggregatorSnapshot'u64') returns (m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), val: $1_aggregator_v2_AggregatorSnapshot'u64'): Vec ($1_aggregator_v2_AggregatorSnapshot'u64') {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) returns (e: $1_aggregator_v2_AggregatorSnapshot'u64', m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) {
    var v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), other: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')) returns (m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) returns (m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), other: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')) returns (m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), new_len: int) returns (v: (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), new_len: int) returns (v: (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), left: int, right: int) returns (m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) {
    var left_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var mid_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var right_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), rot: int) returns (n: int, m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) {
    var v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var len: int;
    var left_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var right_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) {
    var left_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var mid_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var right_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var mid_left_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var mid_right_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), i: int, e: $1_aggregator_v2_AggregatorSnapshot'u64') returns (m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))) {
    var left_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var right_vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    var v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), i: int) returns (dst: $1_aggregator_v2_AggregatorSnapshot'u64') {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), i: int): $1_aggregator_v2_AggregatorSnapshot'u64' {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), index: int)
returns (dst: $Mutation ($1_aggregator_v2_AggregatorSnapshot'u64'), m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')))
{
    var v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), i: int): $1_aggregator_v2_AggregatorSnapshot'u64' {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), i: int, j: int) returns (m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')))
{
    var v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), i: int, j: int): Vec ($1_aggregator_v2_AggregatorSnapshot'u64') {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), i: int) returns (e: $1_aggregator_v2_AggregatorSnapshot'u64', m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')))
{
    var v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_aggregator_v2_AggregatorSnapshot'u64''(m: $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')), i: int) returns (e: $1_aggregator_v2_AggregatorSnapshot'u64', m': $Mutation (Vec ($1_aggregator_v2_AggregatorSnapshot'u64')))
{
    var len: int;
    var v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64');

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), e: $1_aggregator_v2_AggregatorSnapshot'u64') returns (res: bool)  {
    res := $ContainsVec'$1_aggregator_v2_AggregatorSnapshot'u64''(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'), e: $1_aggregator_v2_AggregatorSnapshot'u64') returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_aggregator_v2_AggregatorSnapshot'u64''(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_optional_aggregator_Integer`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_optional_aggregator_Integer''(v1: Vec ($1_optional_aggregator_Integer), v2: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer), prefix: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer), suffix: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_optional_aggregator_Integer'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer): int;
axiom (forall v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer:: {$IndexOfVec'$1_optional_aggregator_Integer'(v, e)}
    (var i := $IndexOfVec'$1_optional_aggregator_Integer'(v, e);
     if (!$ContainsVec'$1_optional_aggregator_Integer'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_optional_aggregator_Integer'(): Vec ($1_optional_aggregator_Integer) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_optional_aggregator_Integer'() returns (v: Vec ($1_optional_aggregator_Integer)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_optional_aggregator_Integer'(): Vec ($1_optional_aggregator_Integer) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), val: $1_optional_aggregator_Integer) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), val: $1_optional_aggregator_Integer): Vec ($1_optional_aggregator_Integer) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer))) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var v: Vec ($1_optional_aggregator_Integer);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), other: Vec ($1_optional_aggregator_Integer)) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer))) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), other: Vec ($1_optional_aggregator_Integer)) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), new_len: int) returns (v: (Vec ($1_optional_aggregator_Integer)), m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), new_len: int) returns (v: (Vec ($1_optional_aggregator_Integer)), m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), left: int, right: int) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var mid_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    var v: Vec ($1_optional_aggregator_Integer);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), rot: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var v: Vec ($1_optional_aggregator_Integer);
    var len: int;
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var mid_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    var mid_left_vec: Vec ($1_optional_aggregator_Integer);
    var mid_right_vec: Vec ($1_optional_aggregator_Integer);
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int, e: $1_optional_aggregator_Integer) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int) returns (dst: $1_optional_aggregator_Integer) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int): $1_optional_aggregator_Integer {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), index: int)
returns (dst: $Mutation ($1_optional_aggregator_Integer), m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int): $1_optional_aggregator_Integer {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int, j: int) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int, j: int): Vec ($1_optional_aggregator_Integer) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var len: int;
    var v: Vec ($1_optional_aggregator_Integer);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer) returns (res: bool)  {
    res := $ContainsVec'$1_optional_aggregator_Integer'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_optional_aggregator_Integer'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_optional_aggregator_OptionalAggregator`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''(v1: Vec ($1_optional_aggregator_OptionalAggregator), v2: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator), prefix: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator), suffix: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator): int;
axiom (forall v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator:: {$IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e)}
    (var i := $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e);
     if (!$ContainsVec'$1_optional_aggregator_OptionalAggregator'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_optional_aggregator_OptionalAggregator'(): Vec ($1_optional_aggregator_OptionalAggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_optional_aggregator_OptionalAggregator'() returns (v: Vec ($1_optional_aggregator_OptionalAggregator)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_optional_aggregator_OptionalAggregator'(): Vec ($1_optional_aggregator_OptionalAggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), val: $1_optional_aggregator_OptionalAggregator) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), val: $1_optional_aggregator_OptionalAggregator): Vec ($1_optional_aggregator_OptionalAggregator) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), other: Vec ($1_optional_aggregator_OptionalAggregator)) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), other: Vec ($1_optional_aggregator_OptionalAggregator)) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), new_len: int) returns (v: (Vec ($1_optional_aggregator_OptionalAggregator)), m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), new_len: int) returns (v: (Vec ($1_optional_aggregator_OptionalAggregator)), m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), left: int, right: int) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), rot: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    var len: int;
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int, e: $1_optional_aggregator_OptionalAggregator) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int) returns (dst: $1_optional_aggregator_OptionalAggregator) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int): $1_optional_aggregator_OptionalAggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), index: int)
returns (dst: $Mutation ($1_optional_aggregator_OptionalAggregator), m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int): $1_optional_aggregator_OptionalAggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int, j: int) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int, j: int): Vec ($1_optional_aggregator_OptionalAggregator) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var len: int;
    var v: Vec ($1_optional_aggregator_OptionalAggregator);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator) returns (res: bool)  {
    res := $ContainsVec'$1_optional_aggregator_OptionalAggregator'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_string_String`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_string_String''(v1: Vec ($1_string_String), v2: Vec ($1_string_String)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_string_String'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_string_String''(v: Vec ($1_string_String), prefix: Vec ($1_string_String)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_string_String'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_string_String''(v: Vec ($1_string_String), suffix: Vec ($1_string_String)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_string_String'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_string_String''(v: Vec ($1_string_String)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_string_String'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_string_String'(v: Vec ($1_string_String), e: $1_string_String): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_string_String'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_string_String'(v: Vec ($1_string_String), e: $1_string_String): int;
axiom (forall v: Vec ($1_string_String), e: $1_string_String:: {$IndexOfVec'$1_string_String'(v, e)}
    (var i := $IndexOfVec'$1_string_String'(v, e);
     if (!$ContainsVec'$1_string_String'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_string_String'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_string_String'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_string_String'(v: Vec ($1_string_String)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_string_String'(): Vec ($1_string_String) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_string_String'() returns (v: Vec ($1_string_String)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_string_String'(): Vec ($1_string_String) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_string_String'(v: Vec ($1_string_String)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_string_String'(m: $Mutation (Vec ($1_string_String)), val: $1_string_String) returns (m': $Mutation (Vec ($1_string_String))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_string_String'(v: Vec ($1_string_String), val: $1_string_String): Vec ($1_string_String) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_string_String'(m: $Mutation (Vec ($1_string_String))) returns (e: $1_string_String, m': $Mutation (Vec ($1_string_String))) {
    var v: Vec ($1_string_String);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_string_String'(m: $Mutation (Vec ($1_string_String)), other: Vec ($1_string_String)) returns (m': $Mutation (Vec ($1_string_String))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_string_String'(m: $Mutation (Vec ($1_string_String))) returns (m': $Mutation (Vec ($1_string_String))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_string_String'(m: $Mutation (Vec ($1_string_String)), other: Vec ($1_string_String)) returns (m': $Mutation (Vec ($1_string_String))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_string_String'(m: $Mutation (Vec ($1_string_String)), new_len: int) returns (v: (Vec ($1_string_String)), m': $Mutation (Vec ($1_string_String))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_string_String'(m: $Mutation (Vec ($1_string_String)), new_len: int) returns (v: (Vec ($1_string_String)), m': $Mutation (Vec ($1_string_String))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_string_String'(m: $Mutation (Vec ($1_string_String)), left: int, right: int) returns (m': $Mutation (Vec ($1_string_String))) {
    var left_vec: Vec ($1_string_String);
    var mid_vec: Vec ($1_string_String);
    var right_vec: Vec ($1_string_String);
    var v: Vec ($1_string_String);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_string_String'(m: $Mutation (Vec ($1_string_String)), rot: int) returns (n: int, m': $Mutation (Vec ($1_string_String))) {
    var v: Vec ($1_string_String);
    var len: int;
    var left_vec: Vec ($1_string_String);
    var right_vec: Vec ($1_string_String);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_string_String'(m: $Mutation (Vec ($1_string_String)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_string_String))) {
    var left_vec: Vec ($1_string_String);
    var mid_vec: Vec ($1_string_String);
    var right_vec: Vec ($1_string_String);
    var mid_left_vec: Vec ($1_string_String);
    var mid_right_vec: Vec ($1_string_String);
    var v: Vec ($1_string_String);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_string_String'(m: $Mutation (Vec ($1_string_String)), i: int, e: $1_string_String) returns (m': $Mutation (Vec ($1_string_String))) {
    var left_vec: Vec ($1_string_String);
    var right_vec: Vec ($1_string_String);
    var v: Vec ($1_string_String);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_string_String'(v: Vec ($1_string_String)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_string_String'(v: Vec ($1_string_String)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_string_String'(v: Vec ($1_string_String), i: int) returns (dst: $1_string_String) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_string_String'(v: Vec ($1_string_String), i: int): $1_string_String {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_string_String'(m: $Mutation (Vec ($1_string_String)), index: int)
returns (dst: $Mutation ($1_string_String), m': $Mutation (Vec ($1_string_String)))
{
    var v: Vec ($1_string_String);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_string_String'(v: Vec ($1_string_String), i: int): $1_string_String {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_string_String'(v: Vec ($1_string_String)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_string_String'(m: $Mutation (Vec ($1_string_String)), i: int, j: int) returns (m': $Mutation (Vec ($1_string_String)))
{
    var v: Vec ($1_string_String);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_string_String'(v: Vec ($1_string_String), i: int, j: int): Vec ($1_string_String) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_string_String'(m: $Mutation (Vec ($1_string_String)), i: int) returns (e: $1_string_String, m': $Mutation (Vec ($1_string_String)))
{
    var v: Vec ($1_string_String);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_string_String'(m: $Mutation (Vec ($1_string_String)), i: int) returns (e: $1_string_String, m': $Mutation (Vec ($1_string_String)))
{
    var len: int;
    var v: Vec ($1_string_String);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_string_String'(v: Vec ($1_string_String), e: $1_string_String) returns (res: bool)  {
    res := $ContainsVec'$1_string_String'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_string_String'(v: Vec ($1_string_String), e: $1_string_String) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_string_String'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$4_collection_ConcurrentSupply`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$4_collection_ConcurrentSupply''(v1: Vec ($4_collection_ConcurrentSupply), v2: Vec ($4_collection_ConcurrentSupply)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$4_collection_ConcurrentSupply'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$4_collection_ConcurrentSupply''(v: Vec ($4_collection_ConcurrentSupply), prefix: Vec ($4_collection_ConcurrentSupply)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$4_collection_ConcurrentSupply'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$4_collection_ConcurrentSupply''(v: Vec ($4_collection_ConcurrentSupply), suffix: Vec ($4_collection_ConcurrentSupply)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$4_collection_ConcurrentSupply'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$4_collection_ConcurrentSupply''(v: Vec ($4_collection_ConcurrentSupply)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$4_collection_ConcurrentSupply'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply), e: $4_collection_ConcurrentSupply): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$4_collection_ConcurrentSupply'(ReadVec(v, i), e))
}

function $IndexOfVec'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply), e: $4_collection_ConcurrentSupply): int;
axiom (forall v: Vec ($4_collection_ConcurrentSupply), e: $4_collection_ConcurrentSupply:: {$IndexOfVec'$4_collection_ConcurrentSupply'(v, e)}
    (var i := $IndexOfVec'$4_collection_ConcurrentSupply'(v, e);
     if (!$ContainsVec'$4_collection_ConcurrentSupply'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$4_collection_ConcurrentSupply'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$4_collection_ConcurrentSupply'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$4_collection_ConcurrentSupply'(): Vec ($4_collection_ConcurrentSupply) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$4_collection_ConcurrentSupply'() returns (v: Vec ($4_collection_ConcurrentSupply)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$4_collection_ConcurrentSupply'(): Vec ($4_collection_ConcurrentSupply) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), val: $4_collection_ConcurrentSupply) returns (m': $Mutation (Vec ($4_collection_ConcurrentSupply))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply), val: $4_collection_ConcurrentSupply): Vec ($4_collection_ConcurrentSupply) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply))) returns (e: $4_collection_ConcurrentSupply, m': $Mutation (Vec ($4_collection_ConcurrentSupply))) {
    var v: Vec ($4_collection_ConcurrentSupply);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), other: Vec ($4_collection_ConcurrentSupply)) returns (m': $Mutation (Vec ($4_collection_ConcurrentSupply))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply))) returns (m': $Mutation (Vec ($4_collection_ConcurrentSupply))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), other: Vec ($4_collection_ConcurrentSupply)) returns (m': $Mutation (Vec ($4_collection_ConcurrentSupply))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), new_len: int) returns (v: (Vec ($4_collection_ConcurrentSupply)), m': $Mutation (Vec ($4_collection_ConcurrentSupply))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), new_len: int) returns (v: (Vec ($4_collection_ConcurrentSupply)), m': $Mutation (Vec ($4_collection_ConcurrentSupply))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), left: int, right: int) returns (m': $Mutation (Vec ($4_collection_ConcurrentSupply))) {
    var left_vec: Vec ($4_collection_ConcurrentSupply);
    var mid_vec: Vec ($4_collection_ConcurrentSupply);
    var right_vec: Vec ($4_collection_ConcurrentSupply);
    var v: Vec ($4_collection_ConcurrentSupply);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), rot: int) returns (n: int, m': $Mutation (Vec ($4_collection_ConcurrentSupply))) {
    var v: Vec ($4_collection_ConcurrentSupply);
    var len: int;
    var left_vec: Vec ($4_collection_ConcurrentSupply);
    var right_vec: Vec ($4_collection_ConcurrentSupply);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($4_collection_ConcurrentSupply))) {
    var left_vec: Vec ($4_collection_ConcurrentSupply);
    var mid_vec: Vec ($4_collection_ConcurrentSupply);
    var right_vec: Vec ($4_collection_ConcurrentSupply);
    var mid_left_vec: Vec ($4_collection_ConcurrentSupply);
    var mid_right_vec: Vec ($4_collection_ConcurrentSupply);
    var v: Vec ($4_collection_ConcurrentSupply);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), i: int, e: $4_collection_ConcurrentSupply) returns (m': $Mutation (Vec ($4_collection_ConcurrentSupply))) {
    var left_vec: Vec ($4_collection_ConcurrentSupply);
    var right_vec: Vec ($4_collection_ConcurrentSupply);
    var v: Vec ($4_collection_ConcurrentSupply);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply), i: int) returns (dst: $4_collection_ConcurrentSupply) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply), i: int): $4_collection_ConcurrentSupply {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), index: int)
returns (dst: $Mutation ($4_collection_ConcurrentSupply), m': $Mutation (Vec ($4_collection_ConcurrentSupply)))
{
    var v: Vec ($4_collection_ConcurrentSupply);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply), i: int): $4_collection_ConcurrentSupply {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), i: int, j: int) returns (m': $Mutation (Vec ($4_collection_ConcurrentSupply)))
{
    var v: Vec ($4_collection_ConcurrentSupply);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply), i: int, j: int): Vec ($4_collection_ConcurrentSupply) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), i: int) returns (e: $4_collection_ConcurrentSupply, m': $Mutation (Vec ($4_collection_ConcurrentSupply)))
{
    var v: Vec ($4_collection_ConcurrentSupply);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$4_collection_ConcurrentSupply'(m: $Mutation (Vec ($4_collection_ConcurrentSupply)), i: int) returns (e: $4_collection_ConcurrentSupply, m': $Mutation (Vec ($4_collection_ConcurrentSupply)))
{
    var len: int;
    var v: Vec ($4_collection_ConcurrentSupply);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply), e: $4_collection_ConcurrentSupply) returns (res: bool)  {
    res := $ContainsVec'$4_collection_ConcurrentSupply'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply), e: $4_collection_ConcurrentSupply) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$4_collection_ConcurrentSupply'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$4_collection_FixedSupply`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$4_collection_FixedSupply''(v1: Vec ($4_collection_FixedSupply), v2: Vec ($4_collection_FixedSupply)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$4_collection_FixedSupply'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$4_collection_FixedSupply''(v: Vec ($4_collection_FixedSupply), prefix: Vec ($4_collection_FixedSupply)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$4_collection_FixedSupply'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$4_collection_FixedSupply''(v: Vec ($4_collection_FixedSupply), suffix: Vec ($4_collection_FixedSupply)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$4_collection_FixedSupply'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$4_collection_FixedSupply''(v: Vec ($4_collection_FixedSupply)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$4_collection_FixedSupply'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$4_collection_FixedSupply'(v: Vec ($4_collection_FixedSupply), e: $4_collection_FixedSupply): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$4_collection_FixedSupply'(ReadVec(v, i), e))
}

function $IndexOfVec'$4_collection_FixedSupply'(v: Vec ($4_collection_FixedSupply), e: $4_collection_FixedSupply): int;
axiom (forall v: Vec ($4_collection_FixedSupply), e: $4_collection_FixedSupply:: {$IndexOfVec'$4_collection_FixedSupply'(v, e)}
    (var i := $IndexOfVec'$4_collection_FixedSupply'(v, e);
     if (!$ContainsVec'$4_collection_FixedSupply'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$4_collection_FixedSupply'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$4_collection_FixedSupply'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$4_collection_FixedSupply'(v: Vec ($4_collection_FixedSupply)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$4_collection_FixedSupply'(): Vec ($4_collection_FixedSupply) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$4_collection_FixedSupply'() returns (v: Vec ($4_collection_FixedSupply)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$4_collection_FixedSupply'(): Vec ($4_collection_FixedSupply) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$4_collection_FixedSupply'(v: Vec ($4_collection_FixedSupply)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$4_collection_FixedSupply'(m: $Mutation (Vec ($4_collection_FixedSupply)), val: $4_collection_FixedSupply) returns (m': $Mutation (Vec ($4_collection_FixedSupply))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$4_collection_FixedSupply'(v: Vec ($4_collection_FixedSupply), val: $4_collection_FixedSupply): Vec ($4_collection_FixedSupply) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$4_collection_FixedSupply'(m: $Mutation (Vec ($4_collection_FixedSupply))) returns (e: $4_collection_FixedSupply, m': $Mutation (Vec ($4_collection_FixedSupply))) {
    var v: Vec ($4_collection_FixedSupply);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$4_collection_FixedSupply'(m: $Mutation (Vec ($4_collection_FixedSupply)), other: Vec ($4_collection_FixedSupply)) returns (m': $Mutation (Vec ($4_collection_FixedSupply))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$4_collection_FixedSupply'(m: $Mutation (Vec ($4_collection_FixedSupply))) returns (m': $Mutation (Vec ($4_collection_FixedSupply))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$4_collection_FixedSupply'(m: $Mutation (Vec ($4_collection_FixedSupply)), other: Vec ($4_collection_FixedSupply)) returns (m': $Mutation (Vec ($4_collection_FixedSupply))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$4_collection_FixedSupply'(m: $Mutation (Vec ($4_collection_FixedSupply)), new_len: int) returns (v: (Vec ($4_collection_FixedSupply)), m': $Mutation (Vec ($4_collection_FixedSupply))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$4_collection_FixedSupply'(m: $Mutation (Vec ($4_collection_FixedSupply)), new_len: int) returns (v: (Vec ($4_collection_FixedSupply)), m': $Mutation (Vec ($4_collection_FixedSupply))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$4_collection_FixedSupply'(m: $Mutation (Vec ($4_collection_FixedSupply)), left: int, right: int) returns (m': $Mutation (Vec ($4_collection_FixedSupply))) {
    var left_vec: Vec ($4_collection_FixedSupply);
    var mid_vec: Vec ($4_collection_FixedSupply);
    var right_vec: Vec ($4_collection_FixedSupply);
    var v: Vec ($4_collection_FixedSupply);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$4_collection_FixedSupply'(m: $Mutation (Vec ($4_collection_FixedSupply)), rot: int) returns (n: int, m': $Mutation (Vec ($4_collection_FixedSupply))) {
    var v: Vec ($4_collection_FixedSupply);
    var len: int;
    var left_vec: Vec ($4_collection_FixedSupply);
    var right_vec: Vec ($4_collection_FixedSupply);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$4_collection_FixedSupply'(m: $Mutation (Vec ($4_collection_FixedSupply)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($4_collection_FixedSupply))) {
    var left_vec: Vec ($4_collection_FixedSupply);
    var mid_vec: Vec ($4_collection_FixedSupply);
    var right_vec: Vec ($4_collection_FixedSupply);
    var mid_left_vec: Vec ($4_collection_FixedSupply);
    var mid_right_vec: Vec ($4_collection_FixedSupply);
    var v: Vec ($4_collection_FixedSupply);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$4_collection_FixedSupply'(m: $Mutation (Vec ($4_collection_FixedSupply)), i: int, e: $4_collection_FixedSupply) returns (m': $Mutation (Vec ($4_collection_FixedSupply))) {
    var left_vec: Vec ($4_collection_FixedSupply);
    var right_vec: Vec ($4_collection_FixedSupply);
    var v: Vec ($4_collection_FixedSupply);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$4_collection_FixedSupply'(v: Vec ($4_collection_FixedSupply)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$4_collection_FixedSupply'(v: Vec ($4_collection_FixedSupply)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$4_collection_FixedSupply'(v: Vec ($4_collection_FixedSupply), i: int) returns (dst: $4_collection_FixedSupply) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$4_collection_FixedSupply'(v: Vec ($4_collection_FixedSupply), i: int): $4_collection_FixedSupply {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$4_collection_FixedSupply'(m: $Mutation (Vec ($4_collection_FixedSupply)), index: int)
returns (dst: $Mutation ($4_collection_FixedSupply), m': $Mutation (Vec ($4_collection_FixedSupply)))
{
    var v: Vec ($4_collection_FixedSupply);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$4_collection_FixedSupply'(v: Vec ($4_collection_FixedSupply), i: int): $4_collection_FixedSupply {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$4_collection_FixedSupply'(v: Vec ($4_collection_FixedSupply)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$4_collection_FixedSupply'(m: $Mutation (Vec ($4_collection_FixedSupply)), i: int, j: int) returns (m': $Mutation (Vec ($4_collection_FixedSupply)))
{
    var v: Vec ($4_collection_FixedSupply);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$4_collection_FixedSupply'(v: Vec ($4_collection_FixedSupply), i: int, j: int): Vec ($4_collection_FixedSupply) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$4_collection_FixedSupply'(m: $Mutation (Vec ($4_collection_FixedSupply)), i: int) returns (e: $4_collection_FixedSupply, m': $Mutation (Vec ($4_collection_FixedSupply)))
{
    var v: Vec ($4_collection_FixedSupply);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$4_collection_FixedSupply'(m: $Mutation (Vec ($4_collection_FixedSupply)), i: int) returns (e: $4_collection_FixedSupply, m': $Mutation (Vec ($4_collection_FixedSupply)))
{
    var len: int;
    var v: Vec ($4_collection_FixedSupply);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$4_collection_FixedSupply'(v: Vec ($4_collection_FixedSupply), e: $4_collection_FixedSupply) returns (res: bool)  {
    res := $ContainsVec'$4_collection_FixedSupply'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$4_collection_FixedSupply'(v: Vec ($4_collection_FixedSupply), e: $4_collection_FixedSupply) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$4_collection_FixedSupply'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$4_collection_MutatorRef`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$4_collection_MutatorRef''(v1: Vec ($4_collection_MutatorRef), v2: Vec ($4_collection_MutatorRef)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$4_collection_MutatorRef'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$4_collection_MutatorRef''(v: Vec ($4_collection_MutatorRef), prefix: Vec ($4_collection_MutatorRef)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$4_collection_MutatorRef'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$4_collection_MutatorRef''(v: Vec ($4_collection_MutatorRef), suffix: Vec ($4_collection_MutatorRef)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$4_collection_MutatorRef'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$4_collection_MutatorRef''(v: Vec ($4_collection_MutatorRef)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$4_collection_MutatorRef'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$4_collection_MutatorRef'(v: Vec ($4_collection_MutatorRef), e: $4_collection_MutatorRef): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$4_collection_MutatorRef'(ReadVec(v, i), e))
}

function $IndexOfVec'$4_collection_MutatorRef'(v: Vec ($4_collection_MutatorRef), e: $4_collection_MutatorRef): int;
axiom (forall v: Vec ($4_collection_MutatorRef), e: $4_collection_MutatorRef:: {$IndexOfVec'$4_collection_MutatorRef'(v, e)}
    (var i := $IndexOfVec'$4_collection_MutatorRef'(v, e);
     if (!$ContainsVec'$4_collection_MutatorRef'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$4_collection_MutatorRef'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$4_collection_MutatorRef'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$4_collection_MutatorRef'(v: Vec ($4_collection_MutatorRef)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$4_collection_MutatorRef'(): Vec ($4_collection_MutatorRef) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$4_collection_MutatorRef'() returns (v: Vec ($4_collection_MutatorRef)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$4_collection_MutatorRef'(): Vec ($4_collection_MutatorRef) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$4_collection_MutatorRef'(v: Vec ($4_collection_MutatorRef)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$4_collection_MutatorRef'(m: $Mutation (Vec ($4_collection_MutatorRef)), val: $4_collection_MutatorRef) returns (m': $Mutation (Vec ($4_collection_MutatorRef))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$4_collection_MutatorRef'(v: Vec ($4_collection_MutatorRef), val: $4_collection_MutatorRef): Vec ($4_collection_MutatorRef) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$4_collection_MutatorRef'(m: $Mutation (Vec ($4_collection_MutatorRef))) returns (e: $4_collection_MutatorRef, m': $Mutation (Vec ($4_collection_MutatorRef))) {
    var v: Vec ($4_collection_MutatorRef);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$4_collection_MutatorRef'(m: $Mutation (Vec ($4_collection_MutatorRef)), other: Vec ($4_collection_MutatorRef)) returns (m': $Mutation (Vec ($4_collection_MutatorRef))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$4_collection_MutatorRef'(m: $Mutation (Vec ($4_collection_MutatorRef))) returns (m': $Mutation (Vec ($4_collection_MutatorRef))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$4_collection_MutatorRef'(m: $Mutation (Vec ($4_collection_MutatorRef)), other: Vec ($4_collection_MutatorRef)) returns (m': $Mutation (Vec ($4_collection_MutatorRef))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$4_collection_MutatorRef'(m: $Mutation (Vec ($4_collection_MutatorRef)), new_len: int) returns (v: (Vec ($4_collection_MutatorRef)), m': $Mutation (Vec ($4_collection_MutatorRef))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$4_collection_MutatorRef'(m: $Mutation (Vec ($4_collection_MutatorRef)), new_len: int) returns (v: (Vec ($4_collection_MutatorRef)), m': $Mutation (Vec ($4_collection_MutatorRef))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$4_collection_MutatorRef'(m: $Mutation (Vec ($4_collection_MutatorRef)), left: int, right: int) returns (m': $Mutation (Vec ($4_collection_MutatorRef))) {
    var left_vec: Vec ($4_collection_MutatorRef);
    var mid_vec: Vec ($4_collection_MutatorRef);
    var right_vec: Vec ($4_collection_MutatorRef);
    var v: Vec ($4_collection_MutatorRef);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$4_collection_MutatorRef'(m: $Mutation (Vec ($4_collection_MutatorRef)), rot: int) returns (n: int, m': $Mutation (Vec ($4_collection_MutatorRef))) {
    var v: Vec ($4_collection_MutatorRef);
    var len: int;
    var left_vec: Vec ($4_collection_MutatorRef);
    var right_vec: Vec ($4_collection_MutatorRef);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$4_collection_MutatorRef'(m: $Mutation (Vec ($4_collection_MutatorRef)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($4_collection_MutatorRef))) {
    var left_vec: Vec ($4_collection_MutatorRef);
    var mid_vec: Vec ($4_collection_MutatorRef);
    var right_vec: Vec ($4_collection_MutatorRef);
    var mid_left_vec: Vec ($4_collection_MutatorRef);
    var mid_right_vec: Vec ($4_collection_MutatorRef);
    var v: Vec ($4_collection_MutatorRef);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$4_collection_MutatorRef'(m: $Mutation (Vec ($4_collection_MutatorRef)), i: int, e: $4_collection_MutatorRef) returns (m': $Mutation (Vec ($4_collection_MutatorRef))) {
    var left_vec: Vec ($4_collection_MutatorRef);
    var right_vec: Vec ($4_collection_MutatorRef);
    var v: Vec ($4_collection_MutatorRef);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$4_collection_MutatorRef'(v: Vec ($4_collection_MutatorRef)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$4_collection_MutatorRef'(v: Vec ($4_collection_MutatorRef)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$4_collection_MutatorRef'(v: Vec ($4_collection_MutatorRef), i: int) returns (dst: $4_collection_MutatorRef) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$4_collection_MutatorRef'(v: Vec ($4_collection_MutatorRef), i: int): $4_collection_MutatorRef {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$4_collection_MutatorRef'(m: $Mutation (Vec ($4_collection_MutatorRef)), index: int)
returns (dst: $Mutation ($4_collection_MutatorRef), m': $Mutation (Vec ($4_collection_MutatorRef)))
{
    var v: Vec ($4_collection_MutatorRef);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$4_collection_MutatorRef'(v: Vec ($4_collection_MutatorRef), i: int): $4_collection_MutatorRef {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$4_collection_MutatorRef'(v: Vec ($4_collection_MutatorRef)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$4_collection_MutatorRef'(m: $Mutation (Vec ($4_collection_MutatorRef)), i: int, j: int) returns (m': $Mutation (Vec ($4_collection_MutatorRef)))
{
    var v: Vec ($4_collection_MutatorRef);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$4_collection_MutatorRef'(v: Vec ($4_collection_MutatorRef), i: int, j: int): Vec ($4_collection_MutatorRef) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$4_collection_MutatorRef'(m: $Mutation (Vec ($4_collection_MutatorRef)), i: int) returns (e: $4_collection_MutatorRef, m': $Mutation (Vec ($4_collection_MutatorRef)))
{
    var v: Vec ($4_collection_MutatorRef);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$4_collection_MutatorRef'(m: $Mutation (Vec ($4_collection_MutatorRef)), i: int) returns (e: $4_collection_MutatorRef, m': $Mutation (Vec ($4_collection_MutatorRef)))
{
    var len: int;
    var v: Vec ($4_collection_MutatorRef);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$4_collection_MutatorRef'(v: Vec ($4_collection_MutatorRef), e: $4_collection_MutatorRef) returns (res: bool)  {
    res := $ContainsVec'$4_collection_MutatorRef'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$4_collection_MutatorRef'(v: Vec ($4_collection_MutatorRef), e: $4_collection_MutatorRef) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$4_collection_MutatorRef'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$4_royalty_MutatorRef`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$4_royalty_MutatorRef''(v1: Vec ($4_royalty_MutatorRef), v2: Vec ($4_royalty_MutatorRef)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$4_royalty_MutatorRef'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$4_royalty_MutatorRef''(v: Vec ($4_royalty_MutatorRef), prefix: Vec ($4_royalty_MutatorRef)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$4_royalty_MutatorRef'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$4_royalty_MutatorRef''(v: Vec ($4_royalty_MutatorRef), suffix: Vec ($4_royalty_MutatorRef)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$4_royalty_MutatorRef'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$4_royalty_MutatorRef''(v: Vec ($4_royalty_MutatorRef)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$4_royalty_MutatorRef'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$4_royalty_MutatorRef'(v: Vec ($4_royalty_MutatorRef), e: $4_royalty_MutatorRef): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$4_royalty_MutatorRef'(ReadVec(v, i), e))
}

function $IndexOfVec'$4_royalty_MutatorRef'(v: Vec ($4_royalty_MutatorRef), e: $4_royalty_MutatorRef): int;
axiom (forall v: Vec ($4_royalty_MutatorRef), e: $4_royalty_MutatorRef:: {$IndexOfVec'$4_royalty_MutatorRef'(v, e)}
    (var i := $IndexOfVec'$4_royalty_MutatorRef'(v, e);
     if (!$ContainsVec'$4_royalty_MutatorRef'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$4_royalty_MutatorRef'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$4_royalty_MutatorRef'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$4_royalty_MutatorRef'(v: Vec ($4_royalty_MutatorRef)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$4_royalty_MutatorRef'(): Vec ($4_royalty_MutatorRef) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$4_royalty_MutatorRef'() returns (v: Vec ($4_royalty_MutatorRef)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$4_royalty_MutatorRef'(): Vec ($4_royalty_MutatorRef) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$4_royalty_MutatorRef'(v: Vec ($4_royalty_MutatorRef)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$4_royalty_MutatorRef'(m: $Mutation (Vec ($4_royalty_MutatorRef)), val: $4_royalty_MutatorRef) returns (m': $Mutation (Vec ($4_royalty_MutatorRef))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$4_royalty_MutatorRef'(v: Vec ($4_royalty_MutatorRef), val: $4_royalty_MutatorRef): Vec ($4_royalty_MutatorRef) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$4_royalty_MutatorRef'(m: $Mutation (Vec ($4_royalty_MutatorRef))) returns (e: $4_royalty_MutatorRef, m': $Mutation (Vec ($4_royalty_MutatorRef))) {
    var v: Vec ($4_royalty_MutatorRef);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$4_royalty_MutatorRef'(m: $Mutation (Vec ($4_royalty_MutatorRef)), other: Vec ($4_royalty_MutatorRef)) returns (m': $Mutation (Vec ($4_royalty_MutatorRef))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$4_royalty_MutatorRef'(m: $Mutation (Vec ($4_royalty_MutatorRef))) returns (m': $Mutation (Vec ($4_royalty_MutatorRef))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$4_royalty_MutatorRef'(m: $Mutation (Vec ($4_royalty_MutatorRef)), other: Vec ($4_royalty_MutatorRef)) returns (m': $Mutation (Vec ($4_royalty_MutatorRef))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$4_royalty_MutatorRef'(m: $Mutation (Vec ($4_royalty_MutatorRef)), new_len: int) returns (v: (Vec ($4_royalty_MutatorRef)), m': $Mutation (Vec ($4_royalty_MutatorRef))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$4_royalty_MutatorRef'(m: $Mutation (Vec ($4_royalty_MutatorRef)), new_len: int) returns (v: (Vec ($4_royalty_MutatorRef)), m': $Mutation (Vec ($4_royalty_MutatorRef))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$4_royalty_MutatorRef'(m: $Mutation (Vec ($4_royalty_MutatorRef)), left: int, right: int) returns (m': $Mutation (Vec ($4_royalty_MutatorRef))) {
    var left_vec: Vec ($4_royalty_MutatorRef);
    var mid_vec: Vec ($4_royalty_MutatorRef);
    var right_vec: Vec ($4_royalty_MutatorRef);
    var v: Vec ($4_royalty_MutatorRef);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$4_royalty_MutatorRef'(m: $Mutation (Vec ($4_royalty_MutatorRef)), rot: int) returns (n: int, m': $Mutation (Vec ($4_royalty_MutatorRef))) {
    var v: Vec ($4_royalty_MutatorRef);
    var len: int;
    var left_vec: Vec ($4_royalty_MutatorRef);
    var right_vec: Vec ($4_royalty_MutatorRef);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$4_royalty_MutatorRef'(m: $Mutation (Vec ($4_royalty_MutatorRef)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($4_royalty_MutatorRef))) {
    var left_vec: Vec ($4_royalty_MutatorRef);
    var mid_vec: Vec ($4_royalty_MutatorRef);
    var right_vec: Vec ($4_royalty_MutatorRef);
    var mid_left_vec: Vec ($4_royalty_MutatorRef);
    var mid_right_vec: Vec ($4_royalty_MutatorRef);
    var v: Vec ($4_royalty_MutatorRef);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$4_royalty_MutatorRef'(m: $Mutation (Vec ($4_royalty_MutatorRef)), i: int, e: $4_royalty_MutatorRef) returns (m': $Mutation (Vec ($4_royalty_MutatorRef))) {
    var left_vec: Vec ($4_royalty_MutatorRef);
    var right_vec: Vec ($4_royalty_MutatorRef);
    var v: Vec ($4_royalty_MutatorRef);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$4_royalty_MutatorRef'(v: Vec ($4_royalty_MutatorRef)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$4_royalty_MutatorRef'(v: Vec ($4_royalty_MutatorRef)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$4_royalty_MutatorRef'(v: Vec ($4_royalty_MutatorRef), i: int) returns (dst: $4_royalty_MutatorRef) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$4_royalty_MutatorRef'(v: Vec ($4_royalty_MutatorRef), i: int): $4_royalty_MutatorRef {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$4_royalty_MutatorRef'(m: $Mutation (Vec ($4_royalty_MutatorRef)), index: int)
returns (dst: $Mutation ($4_royalty_MutatorRef), m': $Mutation (Vec ($4_royalty_MutatorRef)))
{
    var v: Vec ($4_royalty_MutatorRef);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$4_royalty_MutatorRef'(v: Vec ($4_royalty_MutatorRef), i: int): $4_royalty_MutatorRef {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$4_royalty_MutatorRef'(v: Vec ($4_royalty_MutatorRef)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$4_royalty_MutatorRef'(m: $Mutation (Vec ($4_royalty_MutatorRef)), i: int, j: int) returns (m': $Mutation (Vec ($4_royalty_MutatorRef)))
{
    var v: Vec ($4_royalty_MutatorRef);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$4_royalty_MutatorRef'(v: Vec ($4_royalty_MutatorRef), i: int, j: int): Vec ($4_royalty_MutatorRef) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$4_royalty_MutatorRef'(m: $Mutation (Vec ($4_royalty_MutatorRef)), i: int) returns (e: $4_royalty_MutatorRef, m': $Mutation (Vec ($4_royalty_MutatorRef)))
{
    var v: Vec ($4_royalty_MutatorRef);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$4_royalty_MutatorRef'(m: $Mutation (Vec ($4_royalty_MutatorRef)), i: int) returns (e: $4_royalty_MutatorRef, m': $Mutation (Vec ($4_royalty_MutatorRef)))
{
    var len: int;
    var v: Vec ($4_royalty_MutatorRef);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$4_royalty_MutatorRef'(v: Vec ($4_royalty_MutatorRef), e: $4_royalty_MutatorRef) returns (res: bool)  {
    res := $ContainsVec'$4_royalty_MutatorRef'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$4_royalty_MutatorRef'(v: Vec ($4_royalty_MutatorRef), e: $4_royalty_MutatorRef) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$4_royalty_MutatorRef'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$4_royalty_Royalty`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$4_royalty_Royalty''(v1: Vec ($4_royalty_Royalty), v2: Vec ($4_royalty_Royalty)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$4_royalty_Royalty'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$4_royalty_Royalty''(v: Vec ($4_royalty_Royalty), prefix: Vec ($4_royalty_Royalty)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$4_royalty_Royalty'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$4_royalty_Royalty''(v: Vec ($4_royalty_Royalty), suffix: Vec ($4_royalty_Royalty)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$4_royalty_Royalty'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$4_royalty_Royalty''(v: Vec ($4_royalty_Royalty)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$4_royalty_Royalty'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), e: $4_royalty_Royalty): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$4_royalty_Royalty'(ReadVec(v, i), e))
}

function $IndexOfVec'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), e: $4_royalty_Royalty): int;
axiom (forall v: Vec ($4_royalty_Royalty), e: $4_royalty_Royalty:: {$IndexOfVec'$4_royalty_Royalty'(v, e)}
    (var i := $IndexOfVec'$4_royalty_Royalty'(v, e);
     if (!$ContainsVec'$4_royalty_Royalty'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$4_royalty_Royalty'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$4_royalty_Royalty'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$4_royalty_Royalty'(): Vec ($4_royalty_Royalty) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$4_royalty_Royalty'() returns (v: Vec ($4_royalty_Royalty)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$4_royalty_Royalty'(): Vec ($4_royalty_Royalty) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), val: $4_royalty_Royalty) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), val: $4_royalty_Royalty): Vec ($4_royalty_Royalty) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty))) returns (e: $4_royalty_Royalty, m': $Mutation (Vec ($4_royalty_Royalty))) {
    var v: Vec ($4_royalty_Royalty);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), other: Vec ($4_royalty_Royalty)) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty))) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), other: Vec ($4_royalty_Royalty)) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), new_len: int) returns (v: (Vec ($4_royalty_Royalty)), m': $Mutation (Vec ($4_royalty_Royalty))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), new_len: int) returns (v: (Vec ($4_royalty_Royalty)), m': $Mutation (Vec ($4_royalty_Royalty))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), left: int, right: int) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    var left_vec: Vec ($4_royalty_Royalty);
    var mid_vec: Vec ($4_royalty_Royalty);
    var right_vec: Vec ($4_royalty_Royalty);
    var v: Vec ($4_royalty_Royalty);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), rot: int) returns (n: int, m': $Mutation (Vec ($4_royalty_Royalty))) {
    var v: Vec ($4_royalty_Royalty);
    var len: int;
    var left_vec: Vec ($4_royalty_Royalty);
    var right_vec: Vec ($4_royalty_Royalty);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($4_royalty_Royalty))) {
    var left_vec: Vec ($4_royalty_Royalty);
    var mid_vec: Vec ($4_royalty_Royalty);
    var right_vec: Vec ($4_royalty_Royalty);
    var mid_left_vec: Vec ($4_royalty_Royalty);
    var mid_right_vec: Vec ($4_royalty_Royalty);
    var v: Vec ($4_royalty_Royalty);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), i: int, e: $4_royalty_Royalty) returns (m': $Mutation (Vec ($4_royalty_Royalty))) {
    var left_vec: Vec ($4_royalty_Royalty);
    var right_vec: Vec ($4_royalty_Royalty);
    var v: Vec ($4_royalty_Royalty);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), i: int) returns (dst: $4_royalty_Royalty) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), i: int): $4_royalty_Royalty {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), index: int)
returns (dst: $Mutation ($4_royalty_Royalty), m': $Mutation (Vec ($4_royalty_Royalty)))
{
    var v: Vec ($4_royalty_Royalty);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), i: int): $4_royalty_Royalty {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), i: int, j: int) returns (m': $Mutation (Vec ($4_royalty_Royalty)))
{
    var v: Vec ($4_royalty_Royalty);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), i: int, j: int): Vec ($4_royalty_Royalty) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), i: int) returns (e: $4_royalty_Royalty, m': $Mutation (Vec ($4_royalty_Royalty)))
{
    var v: Vec ($4_royalty_Royalty);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$4_royalty_Royalty'(m: $Mutation (Vec ($4_royalty_Royalty)), i: int) returns (e: $4_royalty_Royalty, m': $Mutation (Vec ($4_royalty_Royalty)))
{
    var len: int;
    var v: Vec ($4_royalty_Royalty);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), e: $4_royalty_Royalty) returns (res: bool)  {
    res := $ContainsVec'$4_royalty_Royalty'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty), e: $4_royalty_Royalty) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$4_royalty_Royalty'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `vec'u8'`

// Not inlined. It appears faster this way.
function $IsEqual'vec'vec'u8'''(v1: Vec (Vec (int)), v2: Vec (Vec (int))): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'vec'u8''(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'vec'u8'''(v: Vec (Vec (int)), prefix: Vec (Vec (int))): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'vec'u8''(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'vec'u8'''(v: Vec (Vec (int)), suffix: Vec (Vec (int))): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'vec'u8''(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'vec'u8'''(v: Vec (Vec (int))): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'vec'u8''(ReadVec(v, i)))
}


function {:inline} $ContainsVec'vec'u8''(v: Vec (Vec (int)), e: Vec (int)): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'vec'u8''(ReadVec(v, i), e))
}

function $IndexOfVec'vec'u8''(v: Vec (Vec (int)), e: Vec (int)): int;
axiom (forall v: Vec (Vec (int)), e: Vec (int):: {$IndexOfVec'vec'u8''(v, e)}
    (var i := $IndexOfVec'vec'u8''(v, e);
     if (!$ContainsVec'vec'u8''(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'vec'u8''(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'vec'u8''(ReadVec(v, j), e))));


function {:inline} $RangeVec'vec'u8''(v: Vec (Vec (int))): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'vec'u8''(): Vec (Vec (int)) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'vec'u8''() returns (v: Vec (Vec (int))) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'vec'u8''(): Vec (Vec (int)) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'vec'u8''(v: Vec (Vec (int))) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'vec'u8''(m: $Mutation (Vec (Vec (int))), val: Vec (int)) returns (m': $Mutation (Vec (Vec (int)))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'vec'u8''(v: Vec (Vec (int)), val: Vec (int)): Vec (Vec (int)) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'vec'u8''(m: $Mutation (Vec (Vec (int)))) returns (e: Vec (int), m': $Mutation (Vec (Vec (int)))) {
    var v: Vec (Vec (int));
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'vec'u8''(m: $Mutation (Vec (Vec (int))), other: Vec (Vec (int))) returns (m': $Mutation (Vec (Vec (int)))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'vec'u8''(m: $Mutation (Vec (Vec (int)))) returns (m': $Mutation (Vec (Vec (int)))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'vec'u8''(m: $Mutation (Vec (Vec (int))), other: Vec (Vec (int))) returns (m': $Mutation (Vec (Vec (int)))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'vec'u8''(m: $Mutation (Vec (Vec (int))), new_len: int) returns (v: (Vec (Vec (int))), m': $Mutation (Vec (Vec (int)))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'vec'u8''(m: $Mutation (Vec (Vec (int))), new_len: int) returns (v: (Vec (Vec (int))), m': $Mutation (Vec (Vec (int)))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'vec'u8''(m: $Mutation (Vec (Vec (int))), left: int, right: int) returns (m': $Mutation (Vec (Vec (int)))) {
    var left_vec: Vec (Vec (int));
    var mid_vec: Vec (Vec (int));
    var right_vec: Vec (Vec (int));
    var v: Vec (Vec (int));
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'vec'u8''(m: $Mutation (Vec (Vec (int))), rot: int) returns (n: int, m': $Mutation (Vec (Vec (int)))) {
    var v: Vec (Vec (int));
    var len: int;
    var left_vec: Vec (Vec (int));
    var right_vec: Vec (Vec (int));
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'vec'u8''(m: $Mutation (Vec (Vec (int))), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (Vec (int)))) {
    var left_vec: Vec (Vec (int));
    var mid_vec: Vec (Vec (int));
    var right_vec: Vec (Vec (int));
    var mid_left_vec: Vec (Vec (int));
    var mid_right_vec: Vec (Vec (int));
    var v: Vec (Vec (int));
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'vec'u8''(m: $Mutation (Vec (Vec (int))), i: int, e: Vec (int)) returns (m': $Mutation (Vec (Vec (int)))) {
    var left_vec: Vec (Vec (int));
    var right_vec: Vec (Vec (int));
    var v: Vec (Vec (int));
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'vec'u8''(v: Vec (Vec (int))) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'vec'u8''(v: Vec (Vec (int))): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'vec'u8''(v: Vec (Vec (int)), i: int) returns (dst: Vec (int)) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'vec'u8''(v: Vec (Vec (int)), i: int): Vec (int) {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'vec'u8''(m: $Mutation (Vec (Vec (int))), index: int)
returns (dst: $Mutation (Vec (int)), m': $Mutation (Vec (Vec (int))))
{
    var v: Vec (Vec (int));
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'vec'u8''(v: Vec (Vec (int)), i: int): Vec (int) {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'vec'u8''(v: Vec (Vec (int))) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'vec'u8''(m: $Mutation (Vec (Vec (int))), i: int, j: int) returns (m': $Mutation (Vec (Vec (int))))
{
    var v: Vec (Vec (int));
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'vec'u8''(v: Vec (Vec (int)), i: int, j: int): Vec (Vec (int)) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'vec'u8''(m: $Mutation (Vec (Vec (int))), i: int) returns (e: Vec (int), m': $Mutation (Vec (Vec (int))))
{
    var v: Vec (Vec (int));

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'vec'u8''(m: $Mutation (Vec (Vec (int))), i: int) returns (e: Vec (int), m': $Mutation (Vec (Vec (int))))
{
    var len: int;
    var v: Vec (Vec (int));

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'vec'u8''(v: Vec (Vec (int)), e: Vec (int)) returns (res: bool)  {
    res := $ContainsVec'vec'u8''(v, e);
}

procedure {:inline 1}
$1_vector_index_of'vec'u8''(v: Vec (Vec (int)), e: Vec (int)) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'vec'u8''(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `address`

// Not inlined. It appears faster this way.
function $IsEqual'vec'address''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'address'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'address''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'address'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'address''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'address'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'address''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'address'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'address'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'address'(ReadVec(v, i), e))
}

function $IndexOfVec'address'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'address'(v, e)}
    (var i := $IndexOfVec'address'(v, e);
     if (!$ContainsVec'address'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'address'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'address'(ReadVec(v, j), e))));


function {:inline} $RangeVec'address'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'address'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'address'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'address'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'address'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'address'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'address'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'address'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'address'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'address'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'address'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'address'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'address'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'address'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'address'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'address'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'address'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'address'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'address'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'address'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'address'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'address'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'address'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'address'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'address'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'address'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'address'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'address'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'address'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'address'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'address'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'address'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u64`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u64''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u64'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u64''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u64'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u64''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u64'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u64''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u64'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u64'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u64'(ReadVec(v, i), e))
}

function $IndexOfVec'u64'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u64'(v, e)}
    (var i := $IndexOfVec'u64'(v, e);
     if (!$ContainsVec'u64'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u64'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u64'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u64'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u64'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u64'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u64'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u64'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u64'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u64'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u64'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u64'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u64'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'u64'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'u64'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'u64'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'u64'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'u64'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'u64'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'u64'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'u64'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u64'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u64'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u64'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u64'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u64'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u64'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u64'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u64'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u64'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u64'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u64'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u64'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u64'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u64'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u8`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u8''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u8'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u8''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u8'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u8''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u8'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u8''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u8'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u8'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u8'(ReadVec(v, i), e))
}

function $IndexOfVec'u8'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u8'(v, e)}
    (var i := $IndexOfVec'u8'(v, e);
     if (!$ContainsVec'u8'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u8'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u8'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u8'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u8'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u8'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u8'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u8'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u8'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u8'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u8'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u8'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u8'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'u8'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'u8'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'u8'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'u8'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'u8'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'u8'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'u8'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'u8'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u8'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u8'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u8'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u8'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u8'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u8'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u8'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u8'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u8'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u8'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u8'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u8'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u8'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u8'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `vec'bv8'`

// Not inlined. It appears faster this way.
function $IsEqual'vec'vec'bv8'''(v1: Vec (Vec (bv8)), v2: Vec (Vec (bv8))): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'vec'bv8''(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'vec'bv8'''(v: Vec (Vec (bv8)), prefix: Vec (Vec (bv8))): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'vec'bv8''(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'vec'bv8'''(v: Vec (Vec (bv8)), suffix: Vec (Vec (bv8))): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'vec'bv8''(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'vec'bv8'''(v: Vec (Vec (bv8))): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'vec'bv8''(ReadVec(v, i)))
}


function {:inline} $ContainsVec'vec'bv8''(v: Vec (Vec (bv8)), e: Vec (bv8)): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'vec'bv8''(ReadVec(v, i), e))
}

function $IndexOfVec'vec'bv8''(v: Vec (Vec (bv8)), e: Vec (bv8)): int;
axiom (forall v: Vec (Vec (bv8)), e: Vec (bv8):: {$IndexOfVec'vec'bv8''(v, e)}
    (var i := $IndexOfVec'vec'bv8''(v, e);
     if (!$ContainsVec'vec'bv8''(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'vec'bv8''(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'vec'bv8''(ReadVec(v, j), e))));


function {:inline} $RangeVec'vec'bv8''(v: Vec (Vec (bv8))): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'vec'bv8''(): Vec (Vec (bv8)) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'vec'bv8''() returns (v: Vec (Vec (bv8))) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'vec'bv8''(): Vec (Vec (bv8)) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'vec'bv8''(v: Vec (Vec (bv8))) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), val: Vec (bv8)) returns (m': $Mutation (Vec (Vec (bv8)))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'vec'bv8''(v: Vec (Vec (bv8)), val: Vec (bv8)): Vec (Vec (bv8)) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'vec'bv8''(m: $Mutation (Vec (Vec (bv8)))) returns (e: Vec (bv8), m': $Mutation (Vec (Vec (bv8)))) {
    var v: Vec (Vec (bv8));
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), other: Vec (Vec (bv8))) returns (m': $Mutation (Vec (Vec (bv8)))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'vec'bv8''(m: $Mutation (Vec (Vec (bv8)))) returns (m': $Mutation (Vec (Vec (bv8)))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), other: Vec (Vec (bv8))) returns (m': $Mutation (Vec (Vec (bv8)))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), new_len: int) returns (v: (Vec (Vec (bv8))), m': $Mutation (Vec (Vec (bv8)))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), new_len: int) returns (v: (Vec (Vec (bv8))), m': $Mutation (Vec (Vec (bv8)))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), left: int, right: int) returns (m': $Mutation (Vec (Vec (bv8)))) {
    var left_vec: Vec (Vec (bv8));
    var mid_vec: Vec (Vec (bv8));
    var right_vec: Vec (Vec (bv8));
    var v: Vec (Vec (bv8));
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), rot: int) returns (n: int, m': $Mutation (Vec (Vec (bv8)))) {
    var v: Vec (Vec (bv8));
    var len: int;
    var left_vec: Vec (Vec (bv8));
    var right_vec: Vec (Vec (bv8));
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (Vec (bv8)))) {
    var left_vec: Vec (Vec (bv8));
    var mid_vec: Vec (Vec (bv8));
    var right_vec: Vec (Vec (bv8));
    var mid_left_vec: Vec (Vec (bv8));
    var mid_right_vec: Vec (Vec (bv8));
    var v: Vec (Vec (bv8));
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), i: int, e: Vec (bv8)) returns (m': $Mutation (Vec (Vec (bv8)))) {
    var left_vec: Vec (Vec (bv8));
    var right_vec: Vec (Vec (bv8));
    var v: Vec (Vec (bv8));
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'vec'bv8''(v: Vec (Vec (bv8))) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'vec'bv8''(v: Vec (Vec (bv8))): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'vec'bv8''(v: Vec (Vec (bv8)), i: int) returns (dst: Vec (bv8)) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'vec'bv8''(v: Vec (Vec (bv8)), i: int): Vec (bv8) {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), index: int)
returns (dst: $Mutation (Vec (bv8)), m': $Mutation (Vec (Vec (bv8))))
{
    var v: Vec (Vec (bv8));
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'vec'bv8''(v: Vec (Vec (bv8)), i: int): Vec (bv8) {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'vec'bv8''(v: Vec (Vec (bv8))) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), i: int, j: int) returns (m': $Mutation (Vec (Vec (bv8))))
{
    var v: Vec (Vec (bv8));
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'vec'bv8''(v: Vec (Vec (bv8)), i: int, j: int): Vec (Vec (bv8)) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), i: int) returns (e: Vec (bv8), m': $Mutation (Vec (Vec (bv8))))
{
    var v: Vec (Vec (bv8));

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'vec'bv8''(m: $Mutation (Vec (Vec (bv8))), i: int) returns (e: Vec (bv8), m': $Mutation (Vec (Vec (bv8))))
{
    var len: int;
    var v: Vec (Vec (bv8));

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'vec'bv8''(v: Vec (Vec (bv8)), e: Vec (bv8)) returns (res: bool)  {
    res := $ContainsVec'vec'bv8''(v, e);
}

procedure {:inline 1}
$1_vector_index_of'vec'bv8''(v: Vec (Vec (bv8)), e: Vec (bv8)) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'vec'bv8''(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv64`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv64''(v1: Vec (bv64), v2: Vec (bv64)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv64'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv64''(v: Vec (bv64), prefix: Vec (bv64)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv64'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv64''(v: Vec (bv64), suffix: Vec (bv64)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv64'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv64''(v: Vec (bv64)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv64'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv64'(v: Vec (bv64), e: bv64): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv64'(ReadVec(v, i), e))
}

function $IndexOfVec'bv64'(v: Vec (bv64), e: bv64): int;
axiom (forall v: Vec (bv64), e: bv64:: {$IndexOfVec'bv64'(v, e)}
    (var i := $IndexOfVec'bv64'(v, e);
     if (!$ContainsVec'bv64'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv64'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv64'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv64'(v: Vec (bv64)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv64'(): Vec (bv64) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv64'() returns (v: Vec (bv64)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv64'(): Vec (bv64) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv64'(v: Vec (bv64)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv64'(m: $Mutation (Vec (bv64)), val: bv64) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv64'(v: Vec (bv64), val: bv64): Vec (bv64) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv64'(m: $Mutation (Vec (bv64))) returns (e: bv64, m': $Mutation (Vec (bv64))) {
    var v: Vec (bv64);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv64'(m: $Mutation (Vec (bv64)), other: Vec (bv64)) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv64'(m: $Mutation (Vec (bv64))) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'bv64'(m: $Mutation (Vec (bv64)), other: Vec (bv64)) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'bv64'(m: $Mutation (Vec (bv64)), new_len: int) returns (v: (Vec (bv64)), m': $Mutation (Vec (bv64))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'bv64'(m: $Mutation (Vec (bv64)), new_len: int) returns (v: (Vec (bv64)), m': $Mutation (Vec (bv64))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'bv64'(m: $Mutation (Vec (bv64)), left: int, right: int) returns (m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var mid_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var v: Vec (bv64);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'bv64'(m: $Mutation (Vec (bv64)), rot: int) returns (n: int, m': $Mutation (Vec (bv64))) {
    var v: Vec (bv64);
    var len: int;
    var left_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'bv64'(m: $Mutation (Vec (bv64)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var mid_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var mid_left_vec: Vec (bv64);
    var mid_right_vec: Vec (bv64);
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'bv64'(m: $Mutation (Vec (bv64)), i: int, e: bv64) returns (m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'bv64'(v: Vec (bv64)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv64'(v: Vec (bv64)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv64'(v: Vec (bv64), i: int) returns (dst: bv64) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv64'(v: Vec (bv64), i: int): bv64 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv64'(m: $Mutation (Vec (bv64)), index: int)
returns (dst: $Mutation (bv64), m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv64'(v: Vec (bv64), i: int): bv64 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv64'(v: Vec (bv64)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv64'(m: $Mutation (Vec (bv64)), i: int, j: int) returns (m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv64'(v: Vec (bv64), i: int, j: int): Vec (bv64) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv64'(m: $Mutation (Vec (bv64)), i: int) returns (e: bv64, m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv64'(m: $Mutation (Vec (bv64)), i: int) returns (e: bv64, m': $Mutation (Vec (bv64)))
{
    var len: int;
    var v: Vec (bv64);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv64'(v: Vec (bv64), e: bv64) returns (res: bool)  {
    res := $ContainsVec'bv64'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv64'(v: Vec (bv64), e: bv64) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv64'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv8`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv8''(v1: Vec (bv8), v2: Vec (bv8)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv8'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv8''(v: Vec (bv8), prefix: Vec (bv8)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv8'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv8''(v: Vec (bv8), suffix: Vec (bv8)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv8'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv8''(v: Vec (bv8)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv8'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv8'(v: Vec (bv8), e: bv8): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv8'(ReadVec(v, i), e))
}

function $IndexOfVec'bv8'(v: Vec (bv8), e: bv8): int;
axiom (forall v: Vec (bv8), e: bv8:: {$IndexOfVec'bv8'(v, e)}
    (var i := $IndexOfVec'bv8'(v, e);
     if (!$ContainsVec'bv8'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv8'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv8'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv8'(v: Vec (bv8)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv8'(): Vec (bv8) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv8'() returns (v: Vec (bv8)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv8'(): Vec (bv8) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv8'(v: Vec (bv8)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv8'(m: $Mutation (Vec (bv8)), val: bv8) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv8'(v: Vec (bv8), val: bv8): Vec (bv8) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv8'(m: $Mutation (Vec (bv8))) returns (e: bv8, m': $Mutation (Vec (bv8))) {
    var v: Vec (bv8);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv8'(m: $Mutation (Vec (bv8)), other: Vec (bv8)) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv8'(m: $Mutation (Vec (bv8))) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'bv8'(m: $Mutation (Vec (bv8)), other: Vec (bv8)) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'bv8'(m: $Mutation (Vec (bv8)), new_len: int) returns (v: (Vec (bv8)), m': $Mutation (Vec (bv8))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'bv8'(m: $Mutation (Vec (bv8)), new_len: int) returns (v: (Vec (bv8)), m': $Mutation (Vec (bv8))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'bv8'(m: $Mutation (Vec (bv8)), left: int, right: int) returns (m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var mid_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var v: Vec (bv8);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'bv8'(m: $Mutation (Vec (bv8)), rot: int) returns (n: int, m': $Mutation (Vec (bv8))) {
    var v: Vec (bv8);
    var len: int;
    var left_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'bv8'(m: $Mutation (Vec (bv8)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var mid_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var mid_left_vec: Vec (bv8);
    var mid_right_vec: Vec (bv8);
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'bv8'(m: $Mutation (Vec (bv8)), i: int, e: bv8) returns (m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'bv8'(v: Vec (bv8)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv8'(v: Vec (bv8)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv8'(v: Vec (bv8), i: int) returns (dst: bv8) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv8'(v: Vec (bv8), i: int): bv8 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv8'(m: $Mutation (Vec (bv8)), index: int)
returns (dst: $Mutation (bv8), m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv8'(v: Vec (bv8), i: int): bv8 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv8'(v: Vec (bv8)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv8'(m: $Mutation (Vec (bv8)), i: int, j: int) returns (m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv8'(v: Vec (bv8), i: int, j: int): Vec (bv8) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv8'(m: $Mutation (Vec (bv8)), i: int) returns (e: bv8, m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv8'(m: $Mutation (Vec (bv8)), i: int) returns (e: bv8, m': $Mutation (Vec (bv8)))
{
    var len: int;
    var v: Vec (bv8);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv8'(v: Vec (bv8), e: bv8) returns (res: bool)  {
    res := $ContainsVec'bv8'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv8'(v: Vec (bv8), e: bv8) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv8'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ==================================================================================
// Native Table

// ----------------------------------------------------------------------------------
// Native Table key encoding for type `address`

function $EncodeKey'address'(k: int): int;
axiom (
  forall k1, k2: int :: {$EncodeKey'address'(k1), $EncodeKey'address'(k2)}
    $IsEqual'address'(k1, k2) <==> $EncodeKey'address'(k1) == $EncodeKey'address'(k2)
);


// ----------------------------------------------------------------------------------
// Native Table implementation for type `(address,u64)`

function $IsEqual'$1_table_Table'address_u64''(t1: Table int (int), t2: Table int (int)): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_table_Table'address_u64''(t: Table int (int)): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'u64'(GetTable(t, i)))
}
procedure {:inline 2} $1_table_new'address_u64'() returns (v: Table int (int)) {
    v := EmptyTable();
}
procedure {:inline 2} $1_table_destroy'address_u64'(t: Table int (int)) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_table_contains'address_u64'(t: (Table int (int)), k: int) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'address'(k));
}
procedure {:inline 2} $1_table_add'address_u64'(m: $Mutation (Table int (int)), k: int, v: int) returns (m': $Mutation(Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_upsert'address_u64'(m: $Mutation (Table int (int)), k: int, v: int) returns (m': $Mutation(Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, UpdateTable(t, enc_k, v));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_remove'address_u64'(m: $Mutation (Table int (int)), k: int)
returns (v: int, m': $Mutation(Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_table_borrow'address_u64'(t: Table int (int), k: int) returns (v: int) {
    var enc_k: int;
    enc_k := $EncodeKey'address'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'address'(k));
    }
}
procedure {:inline 2} $1_table_borrow_mut'address_u64'(m: $Mutation (Table int (int)), k: int)
returns (dst: $Mutation (int), m': $Mutation (Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_borrow_mut_with_default'address_u64'(m: $Mutation (Table int (int)), k: int, default: int)
returns (dst: $Mutation (int), m': $Mutation (Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    var t': Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, AddTable(t, enc_k, default));
        t' := $Dereference(m');
        dst := $Mutation(m'->l, ExtendVec(m'->p, enc_k), GetTable(t', enc_k));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
function {:inline} $1_table_spec_contains'address_u64'(t: (Table int (int)), k: int): bool {
    ContainsTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_table_spec_set'address_u64'(t: Table int (int), k: int, v: int): Table int (int) {
    (var enc_k := $EncodeKey'address'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_table_spec_remove'address_u64'(t: Table int (int), k: int): Table int (int) {
    RemoveTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_table_spec_get'address_u64'(t: Table int (int), k: int): int {
    GetTable(t, $EncodeKey'address'(k))
}



// ----------------------------------------------------------------------------------
// Native Table implementation for type `(address,bv64)`

function $IsEqual'$1_table_Table'address_bv64''(t1: Table int (bv64), t2: Table int (bv64)): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_table_Table'address_bv64''(t: Table int (bv64)): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'bv64'(GetTable(t, i)))
}
procedure {:inline 2} $1_table_new'address_bv64'() returns (v: Table int (bv64)) {
    v := EmptyTable();
}
procedure {:inline 2} $1_table_destroy'address_bv64'(t: Table int (bv64)) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_table_contains'address_bv64'(t: (Table int (bv64)), k: int) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'address'(k));
}
procedure {:inline 2} $1_table_add'address_bv64'(m: $Mutation (Table int (bv64)), k: int, v: bv64) returns (m': $Mutation(Table int (bv64))) {
    var enc_k: int;
    var t: Table int (bv64);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_upsert'address_bv64'(m: $Mutation (Table int (bv64)), k: int, v: bv64) returns (m': $Mutation(Table int (bv64))) {
    var enc_k: int;
    var t: Table int (bv64);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, UpdateTable(t, enc_k, v));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_remove'address_bv64'(m: $Mutation (Table int (bv64)), k: int)
returns (v: bv64, m': $Mutation(Table int (bv64))) {
    var enc_k: int;
    var t: Table int (bv64);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_table_borrow'address_bv64'(t: Table int (bv64), k: int) returns (v: bv64) {
    var enc_k: int;
    enc_k := $EncodeKey'address'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'address'(k));
    }
}
procedure {:inline 2} $1_table_borrow_mut'address_bv64'(m: $Mutation (Table int (bv64)), k: int)
returns (dst: $Mutation (bv64), m': $Mutation (Table int (bv64))) {
    var enc_k: int;
    var t: Table int (bv64);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_borrow_mut_with_default'address_bv64'(m: $Mutation (Table int (bv64)), k: int, default: bv64)
returns (dst: $Mutation (bv64), m': $Mutation (Table int (bv64))) {
    var enc_k: int;
    var t: Table int (bv64);
    var t': Table int (bv64);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, AddTable(t, enc_k, default));
        t' := $Dereference(m');
        dst := $Mutation(m'->l, ExtendVec(m'->p, enc_k), GetTable(t', enc_k));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
function {:inline} $1_table_spec_contains'address_bv64'(t: (Table int (bv64)), k: int): bool {
    ContainsTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_table_spec_set'address_bv64'(t: Table int (bv64), k: int, v: bv64): Table int (bv64) {
    (var enc_k := $EncodeKey'address'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_table_spec_remove'address_bv64'(t: Table int (bv64), k: int): Table int (bv64) {
    RemoveTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_table_spec_get'address_bv64'(t: Table int (bv64), k: int): bv64 {
    GetTable(t, $EncodeKey'address'(k))
}



// ==================================================================================
// Native Hash

// Hash is modeled as an otherwise uninterpreted injection.
// In truth, it is not an injection since the domain has greater cardinality
// (arbitrary length vectors) than the co-domain (vectors of length 32).  But it is
// common to assume in code there are no hash collisions in practice.  Fortunately,
// Boogie is not smart enough to recognized that there is an inconsistency.
// FIXME: If we were using a reliable extensional theory of arrays, and if we could use ==
// instead of $IsEqual, we might be able to avoid so many quantified formulas by
// using a sha2_inverse function in the ensures conditions of Hash_sha2_256 to
// assert that sha2/3 are injections without using global quantified axioms.


function $1_hash_sha2(val: Vec int): Vec int;

// This says that Hash_sha2 is bijective.
axiom (forall v1,v2: Vec int :: {$1_hash_sha2(v1), $1_hash_sha2(v2)}
       $IsEqual'vec'u8''(v1, v2) <==> $IsEqual'vec'u8''($1_hash_sha2(v1), $1_hash_sha2(v2)));

procedure $1_hash_sha2_256(val: Vec int) returns (res: Vec int);
ensures res == $1_hash_sha2(val);     // returns Hash_sha2 Value
ensures $IsValid'vec'u8''(res);    // result is a legal vector of U8s.
ensures LenVec(res) == 32;               // result is 32 bytes.

// Spec version of Move native function.
function {:inline} $1_hash_$sha2_256(val: Vec int): Vec int {
    $1_hash_sha2(val)
}

// similarly for Hash_sha3
function $1_hash_sha3(val: Vec int): Vec int;

axiom (forall v1,v2: Vec int :: {$1_hash_sha3(v1), $1_hash_sha3(v2)}
       $IsEqual'vec'u8''(v1, v2) <==> $IsEqual'vec'u8''($1_hash_sha3(v1), $1_hash_sha3(v2)));

procedure $1_hash_sha3_256(val: Vec int) returns (res: Vec int);
ensures res == $1_hash_sha3(val);     // returns Hash_sha3 Value
ensures $IsValid'vec'u8''(res);    // result is a legal vector of U8s.
ensures LenVec(res) == 32;               // result is 32 bytes.

// Spec version of Move native function.
function {:inline} $1_hash_$sha3_256(val: Vec int): Vec int {
    $1_hash_sha3(val)
}

// ==================================================================================
// Native string

// TODO: correct implementation of strings

procedure {:inline 1} $1_string_internal_check_utf8(x: Vec int) returns (r: bool) {
}

procedure {:inline 1} $1_string_internal_sub_string(x: Vec int, i: int, j: int) returns (r: Vec int) {
}

procedure {:inline 1} $1_string_internal_index_of(x: Vec int, y: Vec int) returns (r: int) {
}

procedure {:inline 1} $1_string_internal_is_char_boundary(x: Vec int, i: int) returns (r: bool) {
}




// ==================================================================================
// Native diem_account

procedure {:inline 1} $1_DiemAccount_create_signer(
  addr: int
) returns (signer: $signer) {
    // A signer is currently identical to an address.
    signer := $signer(addr);
}

procedure {:inline 1} $1_DiemAccount_destroy_signer(
  signer: $signer
) {
  return;
}

// ==================================================================================
// Native account

procedure {:inline 1} $1_Account_create_signer(
  addr: int
) returns (signer: $signer) {
    // A signer is currently identical to an address.
    signer := $signer(addr);
}

// ==================================================================================
// Native Signer

datatype $signer {
    $signer($addr: int)
}
function {:inline} $IsValid'signer'(s: $signer): bool {
    $IsValid'address'(s->$addr)
}
function {:inline} $IsEqual'signer'(s1: $signer, s2: $signer): bool {
    s1 == s2
}

procedure {:inline 1} $1_signer_borrow_address(signer: $signer) returns (res: int) {
    res := signer->$addr;
}

function {:inline} $1_signer_$borrow_address(signer: $signer): int
{
    signer->$addr
}

function $1_signer_is_txn_signer(s: $signer): bool;

function $1_signer_is_txn_signer_addr(a: int): bool;


// ==================================================================================
// Native signature

// Signature related functionality is handled via uninterpreted functions. This is sound
// currently because we verify every code path based on signature verification with
// an arbitrary interpretation.

function $1_Signature_$ed25519_validate_pubkey(public_key: Vec int): bool;
function $1_Signature_$ed25519_verify(signature: Vec int, public_key: Vec int, message: Vec int): bool;

// Needed because we do not have extensional equality:
axiom (forall k1, k2: Vec int ::
    {$1_Signature_$ed25519_validate_pubkey(k1), $1_Signature_$ed25519_validate_pubkey(k2)}
    $IsEqual'vec'u8''(k1, k2) ==> $1_Signature_$ed25519_validate_pubkey(k1) == $1_Signature_$ed25519_validate_pubkey(k2));
axiom (forall s1, s2, k1, k2, m1, m2: Vec int ::
    {$1_Signature_$ed25519_verify(s1, k1, m1), $1_Signature_$ed25519_verify(s2, k2, m2)}
    $IsEqual'vec'u8''(s1, s2) && $IsEqual'vec'u8''(k1, k2) && $IsEqual'vec'u8''(m1, m2)
    ==> $1_Signature_$ed25519_verify(s1, k1, m1) == $1_Signature_$ed25519_verify(s2, k2, m2));


procedure {:inline 1} $1_Signature_ed25519_validate_pubkey(public_key: Vec int) returns (res: bool) {
    res := $1_Signature_$ed25519_validate_pubkey(public_key);
}

procedure {:inline 1} $1_Signature_ed25519_verify(
        signature: Vec int, public_key: Vec int, message: Vec int) returns (res: bool) {
    res := $1_Signature_$ed25519_verify(signature, public_key, message);
}


// ==================================================================================
// Native bcs::serialize

// ----------------------------------------------------------------------------------
// Native BCS implementation for element type `address`

// Serialize is modeled as an uninterpreted function, with an additional
// axiom to say it's an injection.

function $1_bcs_serialize'address'(v: int): Vec int;

axiom (forall v1, v2: int :: {$1_bcs_serialize'address'(v1), $1_bcs_serialize'address'(v2)}
   $IsEqual'address'(v1, v2) <==> $IsEqual'vec'u8''($1_bcs_serialize'address'(v1), $1_bcs_serialize'address'(v2)));

// This says that serialize returns a non-empty vec<u8>

axiom (forall v: int :: {$1_bcs_serialize'address'(v)}
     ( var r := $1_bcs_serialize'address'(v); $IsValid'vec'u8''(r) && LenVec(r) > 0 ));


procedure $1_bcs_to_bytes'address'(v: int) returns (res: Vec int);
ensures res == $1_bcs_serialize'address'(v);

function {:inline} $1_bcs_$to_bytes'address'(v: int): Vec int {
    $1_bcs_serialize'address'(v)
}

// Serialized addresses should have the same length.
const $serialized_address_len: int;
// Serialized addresses should have the same length
axiom (forall v: int :: {$1_bcs_serialize'address'(v)}
     ( var r := $1_bcs_serialize'address'(v); LenVec(r) == $serialized_address_len));



// ----------------------------------------------------------------------------------
// Native BCS implementation for element type `u64`

// Serialize is modeled as an uninterpreted function, with an additional
// axiom to say it's an injection.

function $1_bcs_serialize'u64'(v: int): Vec int;

axiom (forall v1, v2: int :: {$1_bcs_serialize'u64'(v1), $1_bcs_serialize'u64'(v2)}
   $IsEqual'u64'(v1, v2) <==> $IsEqual'vec'u8''($1_bcs_serialize'u64'(v1), $1_bcs_serialize'u64'(v2)));

// This says that serialize returns a non-empty vec<u8>

axiom (forall v: int :: {$1_bcs_serialize'u64'(v)}
     ( var r := $1_bcs_serialize'u64'(v); $IsValid'vec'u8''(r) && LenVec(r) > 0 ));


procedure $1_bcs_to_bytes'u64'(v: int) returns (res: Vec int);
ensures res == $1_bcs_serialize'u64'(v);

function {:inline} $1_bcs_$to_bytes'u64'(v: int): Vec int {
    $1_bcs_serialize'u64'(v)
}





// ==================================================================================
// Native Event module



procedure {:inline 1} $InitEventStore() {
}

// ============================================================================================
// Type Reflection on Type Parameters

datatype $TypeParamInfo {
    $TypeParamBool(),
    $TypeParamU8(),
    $TypeParamU16(),
    $TypeParamU32(),
    $TypeParamU64(),
    $TypeParamU128(),
    $TypeParamU256(),
    $TypeParamAddress(),
    $TypeParamSigner(),
    $TypeParamVector(e: $TypeParamInfo),
    $TypeParamStruct(a: int, m: Vec int, s: Vec int)
}



//==================================
// Begin Translation

function $TypeName(t: $TypeParamInfo): Vec int;
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamBool ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 98][1 := 111][2 := 111][3 := 108], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 98][1 := 111][2 := 111][3 := 108], 4)) ==> t is $TypeParamBool);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU8 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 56], 2)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 56], 2)) ==> t is $TypeParamU8);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU16 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 54], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 54], 3)) ==> t is $TypeParamU16);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU32 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 51][2 := 50], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 51][2 := 50], 3)) ==> t is $TypeParamU32);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU64 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3)) ==> t is $TypeParamU64);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU128 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 50][3 := 56], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 50][3 := 56], 4)) ==> t is $TypeParamU128);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU256 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 50][2 := 53][3 := 54], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 50][2 := 53][3 := 54], 4)) ==> t is $TypeParamU256);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamAddress ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 97][1 := 100][2 := 100][3 := 114][4 := 101][5 := 115][6 := 115], 7)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 97][1 := 100][2 := 100][3 := 114][4 := 101][5 := 115][6 := 115], 7)) ==> t is $TypeParamAddress);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamSigner ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 115][1 := 105][2 := 103][3 := 110][4 := 101][5 := 114], 6)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 115][1 := 105][2 := 103][3 := 110][4 := 101][5 := 114], 6)) ==> t is $TypeParamSigner);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamVector ==> $IsEqual'vec'u8''($TypeName(t), ConcatVec(ConcatVec(Vec(DefaultVecMap()[0 := 118][1 := 101][2 := 99][3 := 116][4 := 111][5 := 114][6 := 60], 7), $TypeName(t->e)), Vec(DefaultVecMap()[0 := 62], 1))));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} ($IsPrefix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 118][1 := 101][2 := 99][3 := 116][4 := 111][5 := 114][6 := 60], 7)) && $IsSuffix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 62], 1))) ==> t is $TypeParamVector);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamStruct ==> $IsEqual'vec'u8''($TypeName(t), ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(Vec(DefaultVecMap()[0 := 48][1 := 120], 2), MakeVec1(t->a)), Vec(DefaultVecMap()[0 := 58][1 := 58], 2)), t->m), Vec(DefaultVecMap()[0 := 58][1 := 58], 2)), t->s)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsPrefix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 48][1 := 120], 2)) ==> t is $TypeParamVector);


// Given Types for Type Parameters

type #0;
function {:inline} $IsEqual'#0'(x1: #0, x2: #0): bool { x1 == x2 }
function {:inline} $IsValid'#0'(x: #0): bool { true }
var #0_info: $TypeParamInfo;
var #0_$memory: $Memory #0;

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'bool'(b1), $1_from_bcs_deserializable'bool'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u8'(b1), $1_from_bcs_deserializable'u8'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u64'(b1), $1_from_bcs_deserializable'u64'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <u128>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u128'(b1), $1_from_bcs_deserializable'u128'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u256'(b1), $1_from_bcs_deserializable'u256'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'address'(b1), $1_from_bcs_deserializable'address'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'signer'(b1), $1_from_bcs_deserializable'signer'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'u8''(b1), $1_from_bcs_deserializable'vec'u8''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'u64''(b1), $1_from_bcs_deserializable'vec'u64''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'address''(b1), $1_from_bcs_deserializable'vec'address''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<vector<u8>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'vec'u8'''(b1), $1_from_bcs_deserializable'vec'vec'u8'''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_string_String''(b1), $1_from_bcs_deserializable'vec'$1_string_String''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<aggregator_v2::AggregatorSnapshot<u64>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(b1), $1_from_bcs_deserializable'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<royalty::MutatorRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$4_royalty_MutatorRef''(b1), $1_from_bcs_deserializable'vec'$4_royalty_MutatorRef''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<royalty::Royalty>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$4_royalty_Royalty''(b1), $1_from_bcs_deserializable'vec'$4_royalty_Royalty''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<collection::ConcurrentSupply>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$4_collection_ConcurrentSupply''(b1), $1_from_bcs_deserializable'vec'$4_collection_ConcurrentSupply''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<collection::MutatorRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$4_collection_MutatorRef''(b1), $1_from_bcs_deserializable'vec'$4_collection_MutatorRef''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<collection::FixedSupply>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$4_collection_FixedSupply''(b1), $1_from_bcs_deserializable'vec'$4_collection_FixedSupply''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'#0''(b1), $1_from_bcs_deserializable'vec'#0''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <option::Option<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'u64''(b1), $1_from_bcs_deserializable'$1_option_Option'u64''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <option::Option<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'address''(b1), $1_from_bcs_deserializable'$1_option_Option'address''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <option::Option<string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_string_String''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_string_String''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <option::Option<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <option::Option<aggregator_v2::AggregatorSnapshot<u64>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <option::Option<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <option::Option<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <option::Option<royalty::MutatorRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$4_royalty_MutatorRef''(b1), $1_from_bcs_deserializable'$1_option_Option'$4_royalty_MutatorRef''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <option::Option<royalty::Royalty>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$4_royalty_Royalty''(b1), $1_from_bcs_deserializable'$1_option_Option'$4_royalty_Royalty''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <option::Option<collection::ConcurrentSupply>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$4_collection_ConcurrentSupply''(b1), $1_from_bcs_deserializable'$1_option_Option'$4_collection_ConcurrentSupply''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <option::Option<collection::MutatorRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$4_collection_MutatorRef''(b1), $1_from_bcs_deserializable'$1_option_Option'$4_collection_MutatorRef''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <option::Option<collection::FixedSupply>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$4_collection_FixedSupply''(b1), $1_from_bcs_deserializable'$1_option_Option'$4_collection_FixedSupply''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_string_String'(b1), $1_from_bcs_deserializable'$1_string_String'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <features::Features>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_features_Features'(b1), $1_from_bcs_deserializable'$1_features_Features'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <type_info::TypeInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_type_info_TypeInfo'(b1), $1_from_bcs_deserializable'$1_type_info_TypeInfo'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <table::Table<address, u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_table_Table'address_u64''(b1), $1_from_bcs_deserializable'$1_table_Table'address_u64''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_guid_GUID'(b1), $1_from_bcs_deserializable'$1_guid_GUID'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_guid_ID'(b1), $1_from_bcs_deserializable'$1_guid_ID'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <event::EventHandle<account::CoinRegisterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <event::EventHandle<account::KeyRotationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <event::EventHandle<coin::DepositEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <event::EventHandle<coin::WithdrawEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <event::EventHandle<reconfiguration::NewEpochEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <event::EventHandle<object::TransferEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <event::EventHandle<collection::BurnEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_BurnEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_BurnEvent''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <event::EventHandle<collection::MintEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MintEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MintEvent''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <event::EventHandle<collection::MutationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MutationEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MutationEvent''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <event::EventHandle<token::MutationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$4_token_MutationEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$4_token_MutationEvent''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <event::EventHandle<machineV0::UpdateMachineEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <account::Account>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_Account'(b1), $1_from_bcs_deserializable'$1_account_Account'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <account::CapabilityOffer<account::RotationCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(b1), $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <account::CapabilityOffer<account::SignerCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(b1), $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <account::SignerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_SignerCapability'(b1), $1_from_bcs_deserializable'$1_account_SignerCapability'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <aggregator::Aggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aggregator_Aggregator'(b1), $1_from_bcs_deserializable'$1_aggregator_Aggregator'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <aggregator_v2::Aggregator<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(b1), $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <aggregator_v2::AggregatorSnapshot<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aggregator_v2_AggregatorSnapshot'u64''(b1), $1_from_bcs_deserializable'$1_aggregator_v2_AggregatorSnapshot'u64''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <aggregator_v2::AggregatorSnapshot<string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aggregator_v2_AggregatorSnapshot'$1_string_String''(b1), $1_from_bcs_deserializable'$1_aggregator_v2_AggregatorSnapshot'$1_string_String''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <optional_aggregator::Integer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_optional_aggregator_Integer'(b1), $1_from_bcs_deserializable'$1_optional_aggregator_Integer'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <optional_aggregator::OptionalAggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(b1), $1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <coin::Coin<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <coin::CoinInfo<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <coin::CoinStore<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <coin::DepositEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_DepositEvent'(b1), $1_from_bcs_deserializable'$1_coin_DepositEvent'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <coin::WithdrawEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_WithdrawEvent'(b1), $1_from_bcs_deserializable'$1_coin_WithdrawEvent'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <coin::Ghost$supply<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <aptos_coin::AptosCoin>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(b1), $1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <chain_status::GenesisEndMarker>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(b1), $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <timestamp::CurrentTimeMicroseconds>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(b1), $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <reconfiguration::Configuration>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_reconfiguration_Configuration'(b1), $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <object::ConstructorRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_ConstructorRef'(b1), $1_from_bcs_deserializable'$1_object_ConstructorRef'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <object::ExtendRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_ExtendRef'(b1), $1_from_bcs_deserializable'$1_object_ExtendRef'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <object::Object<collection::Collection>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Object'$4_collection_Collection''(b1), $1_from_bcs_deserializable'$1_object_Object'$4_collection_Collection''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <object::Object<token::Token>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Object'$4_token_Token''(b1), $1_from_bcs_deserializable'$1_object_Object'$4_token_Token''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <object::Object<aptos_token::AptosCollection>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Object'$4_aptos_token_AptosCollection''(b1), $1_from_bcs_deserializable'$1_object_Object'$4_aptos_token_AptosCollection''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <object::ObjectCore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_ObjectCore'(b1), $1_from_bcs_deserializable'$1_object_ObjectCore'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <object::TransferEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TransferEvent'(b1), $1_from_bcs_deserializable'$1_object_TransferEvent'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <object::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TransferRef'(b1), $1_from_bcs_deserializable'$1_object_TransferRef'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <royalty::MutatorRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_royalty_MutatorRef'(b1), $1_from_bcs_deserializable'$4_royalty_MutatorRef'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <royalty::Royalty>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_royalty_Royalty'(b1), $1_from_bcs_deserializable'$4_royalty_Royalty'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <collection::ConcurrentSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_collection_ConcurrentSupply'(b1), $1_from_bcs_deserializable'$4_collection_ConcurrentSupply'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <collection::MutatorRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_collection_MutatorRef'(b1), $1_from_bcs_deserializable'$4_collection_MutatorRef'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <collection::Collection>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_collection_Collection'(b1), $1_from_bcs_deserializable'$4_collection_Collection'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <collection::ConcurrentMintEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_collection_ConcurrentMintEvent'(b1), $1_from_bcs_deserializable'$4_collection_ConcurrentMintEvent'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <collection::FixedSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_collection_FixedSupply'(b1), $1_from_bcs_deserializable'$4_collection_FixedSupply'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <collection::MintEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_collection_MintEvent'(b1), $1_from_bcs_deserializable'$4_collection_MintEvent'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <collection::UnlimitedSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_collection_UnlimitedSupply'(b1), $1_from_bcs_deserializable'$4_collection_UnlimitedSupply'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <token::ConcurrentTokenIdentifiers>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_token_ConcurrentTokenIdentifiers'(b1), $1_from_bcs_deserializable'$4_token_ConcurrentTokenIdentifiers'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <token::Token>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_token_Token'(b1), $1_from_bcs_deserializable'$4_token_Token'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <aptos_token::AptosCollection>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4_aptos_token_AptosCollection'(b1), $1_from_bcs_deserializable'$4_aptos_token_AptosCollection'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <machineV0::Machine>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'(b1), $1_from_bcs_deserializable'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <machineV0::ResourceInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo'(b1), $1_from_bcs_deserializable'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:18:9+124, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'#0'(b1), $1_from_bcs_deserializable'#0'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserialize'bool'(b1), $1_from_bcs_deserialize'bool'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u8'($1_from_bcs_deserialize'u8'(b1), $1_from_bcs_deserialize'u8'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u64'($1_from_bcs_deserialize'u64'(b1), $1_from_bcs_deserialize'u64'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <u128>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u128'($1_from_bcs_deserialize'u128'(b1), $1_from_bcs_deserialize'u128'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u256'($1_from_bcs_deserialize'u256'(b1), $1_from_bcs_deserialize'u256'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'address'($1_from_bcs_deserialize'address'(b1), $1_from_bcs_deserialize'address'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'signer'($1_from_bcs_deserialize'signer'(b1), $1_from_bcs_deserialize'signer'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'u8''($1_from_bcs_deserialize'vec'u8''(b1), $1_from_bcs_deserialize'vec'u8''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'u64''($1_from_bcs_deserialize'vec'u64''(b1), $1_from_bcs_deserialize'vec'u64''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'address''($1_from_bcs_deserialize'vec'address''(b1), $1_from_bcs_deserialize'vec'address''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<vector<u8>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'vec'u8'''($1_from_bcs_deserialize'vec'vec'u8'''(b1), $1_from_bcs_deserialize'vec'vec'u8'''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_string_String''($1_from_bcs_deserialize'vec'$1_string_String''(b1), $1_from_bcs_deserialize'vec'$1_string_String''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_aggregator_Aggregator''($1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<aggregator_v2::AggregatorSnapshot<u64>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''($1_from_bcs_deserialize'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(b1), $1_from_bcs_deserialize'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_optional_aggregator_Integer''($1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''($1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<royalty::MutatorRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$4_royalty_MutatorRef''($1_from_bcs_deserialize'vec'$4_royalty_MutatorRef''(b1), $1_from_bcs_deserialize'vec'$4_royalty_MutatorRef''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<royalty::Royalty>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$4_royalty_Royalty''($1_from_bcs_deserialize'vec'$4_royalty_Royalty''(b1), $1_from_bcs_deserialize'vec'$4_royalty_Royalty''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<collection::ConcurrentSupply>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$4_collection_ConcurrentSupply''($1_from_bcs_deserialize'vec'$4_collection_ConcurrentSupply''(b1), $1_from_bcs_deserialize'vec'$4_collection_ConcurrentSupply''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<collection::MutatorRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$4_collection_MutatorRef''($1_from_bcs_deserialize'vec'$4_collection_MutatorRef''(b1), $1_from_bcs_deserialize'vec'$4_collection_MutatorRef''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<collection::FixedSupply>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$4_collection_FixedSupply''($1_from_bcs_deserialize'vec'$4_collection_FixedSupply''(b1), $1_from_bcs_deserialize'vec'$4_collection_FixedSupply''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'#0''($1_from_bcs_deserialize'vec'#0''(b1), $1_from_bcs_deserialize'vec'#0''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <option::Option<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'u64''($1_from_bcs_deserialize'$1_option_Option'u64''(b1), $1_from_bcs_deserialize'$1_option_Option'u64''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <option::Option<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'address''($1_from_bcs_deserialize'$1_option_Option'address''(b1), $1_from_bcs_deserialize'$1_option_Option'address''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <option::Option<string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_string_String''($1_from_bcs_deserialize'$1_option_Option'$1_string_String''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_string_String''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <option::Option<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_aggregator_Aggregator''($1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <option::Option<aggregator_v2::AggregatorSnapshot<u64>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''($1_from_bcs_deserialize'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <option::Option<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''($1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <option::Option<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <option::Option<royalty::MutatorRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$4_royalty_MutatorRef''($1_from_bcs_deserialize'$1_option_Option'$4_royalty_MutatorRef''(b1), $1_from_bcs_deserialize'$1_option_Option'$4_royalty_MutatorRef''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <option::Option<royalty::Royalty>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$4_royalty_Royalty''($1_from_bcs_deserialize'$1_option_Option'$4_royalty_Royalty''(b1), $1_from_bcs_deserialize'$1_option_Option'$4_royalty_Royalty''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <option::Option<collection::ConcurrentSupply>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$4_collection_ConcurrentSupply''($1_from_bcs_deserialize'$1_option_Option'$4_collection_ConcurrentSupply''(b1), $1_from_bcs_deserialize'$1_option_Option'$4_collection_ConcurrentSupply''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <option::Option<collection::MutatorRef>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$4_collection_MutatorRef''($1_from_bcs_deserialize'$1_option_Option'$4_collection_MutatorRef''(b1), $1_from_bcs_deserialize'$1_option_Option'$4_collection_MutatorRef''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <option::Option<collection::FixedSupply>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$4_collection_FixedSupply''($1_from_bcs_deserialize'$1_option_Option'$4_collection_FixedSupply''(b1), $1_from_bcs_deserialize'$1_option_Option'$4_collection_FixedSupply''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_string_String'($1_from_bcs_deserialize'$1_string_String'(b1), $1_from_bcs_deserialize'$1_string_String'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <features::Features>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_features_Features'($1_from_bcs_deserialize'$1_features_Features'(b1), $1_from_bcs_deserialize'$1_features_Features'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <type_info::TypeInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_type_info_TypeInfo'($1_from_bcs_deserialize'$1_type_info_TypeInfo'(b1), $1_from_bcs_deserialize'$1_type_info_TypeInfo'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <table::Table<address, u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_table_Table'address_u64''($1_from_bcs_deserialize'$1_table_Table'address_u64''(b1), $1_from_bcs_deserialize'$1_table_Table'address_u64''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_guid_GUID'($1_from_bcs_deserialize'$1_guid_GUID'(b1), $1_from_bcs_deserialize'$1_guid_GUID'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_guid_ID'($1_from_bcs_deserialize'$1_guid_ID'(b1), $1_from_bcs_deserialize'$1_guid_ID'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <event::EventHandle<account::CoinRegisterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <event::EventHandle<account::KeyRotationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <event::EventHandle<coin::DepositEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_coin_DepositEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <event::EventHandle<coin::WithdrawEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_coin_WithdrawEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <event::EventHandle<reconfiguration::NewEpochEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <event::EventHandle<object::TransferEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_object_TransferEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <event::EventHandle<collection::BurnEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$4_collection_BurnEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_BurnEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_BurnEvent''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <event::EventHandle<collection::MintEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$4_collection_MintEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MintEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MintEvent''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <event::EventHandle<collection::MutationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$4_collection_MutationEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MutationEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MutationEvent''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <event::EventHandle<token::MutationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$4_token_MutationEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$4_token_MutationEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$4_token_MutationEvent''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <event::EventHandle<machineV0::UpdateMachineEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <account::Account>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_Account'($1_from_bcs_deserialize'$1_account_Account'(b1), $1_from_bcs_deserialize'$1_account_Account'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <account::CapabilityOffer<account::RotationCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''($1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(b1), $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <account::CapabilityOffer<account::SignerCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''($1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(b1), $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <account::SignerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_SignerCapability'($1_from_bcs_deserialize'$1_account_SignerCapability'(b1), $1_from_bcs_deserialize'$1_account_SignerCapability'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <aggregator::Aggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aggregator_Aggregator'($1_from_bcs_deserialize'$1_aggregator_Aggregator'(b1), $1_from_bcs_deserialize'$1_aggregator_Aggregator'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <aggregator_v2::Aggregator<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aggregator_v2_Aggregator'u64''($1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(b1), $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <aggregator_v2::AggregatorSnapshot<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aggregator_v2_AggregatorSnapshot'u64''($1_from_bcs_deserialize'$1_aggregator_v2_AggregatorSnapshot'u64''(b1), $1_from_bcs_deserialize'$1_aggregator_v2_AggregatorSnapshot'u64''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <aggregator_v2::AggregatorSnapshot<string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aggregator_v2_AggregatorSnapshot'$1_string_String''($1_from_bcs_deserialize'$1_aggregator_v2_AggregatorSnapshot'$1_string_String''(b1), $1_from_bcs_deserialize'$1_aggregator_v2_AggregatorSnapshot'$1_string_String''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <optional_aggregator::Integer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_optional_aggregator_Integer'($1_from_bcs_deserialize'$1_optional_aggregator_Integer'(b1), $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <optional_aggregator::OptionalAggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'($1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(b1), $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <coin::Coin<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_Coin'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <coin::CoinInfo<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <coin::CoinStore<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <coin::DepositEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_DepositEvent'($1_from_bcs_deserialize'$1_coin_DepositEvent'(b1), $1_from_bcs_deserialize'$1_coin_DepositEvent'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <coin::WithdrawEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_WithdrawEvent'($1_from_bcs_deserialize'$1_coin_WithdrawEvent'(b1), $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <coin::Ghost$supply<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <aptos_coin::AptosCoin>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aptos_coin_AptosCoin'($1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(b1), $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <chain_status::GenesisEndMarker>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_chain_status_GenesisEndMarker'($1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b1), $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <timestamp::CurrentTimeMicroseconds>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_timestamp_CurrentTimeMicroseconds'($1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b1), $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <reconfiguration::Configuration>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_reconfiguration_Configuration'($1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b1), $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <object::ConstructorRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_ConstructorRef'($1_from_bcs_deserialize'$1_object_ConstructorRef'(b1), $1_from_bcs_deserialize'$1_object_ConstructorRef'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <object::ExtendRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_ExtendRef'($1_from_bcs_deserialize'$1_object_ExtendRef'(b1), $1_from_bcs_deserialize'$1_object_ExtendRef'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <object::Object<collection::Collection>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Object'$4_collection_Collection''($1_from_bcs_deserialize'$1_object_Object'$4_collection_Collection''(b1), $1_from_bcs_deserialize'$1_object_Object'$4_collection_Collection''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <object::Object<token::Token>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Object'$4_token_Token''($1_from_bcs_deserialize'$1_object_Object'$4_token_Token''(b1), $1_from_bcs_deserialize'$1_object_Object'$4_token_Token''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <object::Object<aptos_token::AptosCollection>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Object'$4_aptos_token_AptosCollection''($1_from_bcs_deserialize'$1_object_Object'$4_aptos_token_AptosCollection''(b1), $1_from_bcs_deserialize'$1_object_Object'$4_aptos_token_AptosCollection''(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <object::ObjectCore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_ObjectCore'($1_from_bcs_deserialize'$1_object_ObjectCore'(b1), $1_from_bcs_deserialize'$1_object_ObjectCore'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <object::TransferEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TransferEvent'($1_from_bcs_deserialize'$1_object_TransferEvent'(b1), $1_from_bcs_deserialize'$1_object_TransferEvent'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <object::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TransferRef'($1_from_bcs_deserialize'$1_object_TransferRef'(b1), $1_from_bcs_deserialize'$1_object_TransferRef'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <royalty::MutatorRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_royalty_MutatorRef'($1_from_bcs_deserialize'$4_royalty_MutatorRef'(b1), $1_from_bcs_deserialize'$4_royalty_MutatorRef'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <royalty::Royalty>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_royalty_Royalty'($1_from_bcs_deserialize'$4_royalty_Royalty'(b1), $1_from_bcs_deserialize'$4_royalty_Royalty'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <collection::ConcurrentSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_collection_ConcurrentSupply'($1_from_bcs_deserialize'$4_collection_ConcurrentSupply'(b1), $1_from_bcs_deserialize'$4_collection_ConcurrentSupply'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <collection::MutatorRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_collection_MutatorRef'($1_from_bcs_deserialize'$4_collection_MutatorRef'(b1), $1_from_bcs_deserialize'$4_collection_MutatorRef'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <collection::Collection>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_collection_Collection'($1_from_bcs_deserialize'$4_collection_Collection'(b1), $1_from_bcs_deserialize'$4_collection_Collection'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <collection::ConcurrentMintEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_collection_ConcurrentMintEvent'($1_from_bcs_deserialize'$4_collection_ConcurrentMintEvent'(b1), $1_from_bcs_deserialize'$4_collection_ConcurrentMintEvent'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <collection::FixedSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_collection_FixedSupply'($1_from_bcs_deserialize'$4_collection_FixedSupply'(b1), $1_from_bcs_deserialize'$4_collection_FixedSupply'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <collection::MintEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_collection_MintEvent'($1_from_bcs_deserialize'$4_collection_MintEvent'(b1), $1_from_bcs_deserialize'$4_collection_MintEvent'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <collection::UnlimitedSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_collection_UnlimitedSupply'($1_from_bcs_deserialize'$4_collection_UnlimitedSupply'(b1), $1_from_bcs_deserialize'$4_collection_UnlimitedSupply'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <token::ConcurrentTokenIdentifiers>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_token_ConcurrentTokenIdentifiers'($1_from_bcs_deserialize'$4_token_ConcurrentTokenIdentifiers'(b1), $1_from_bcs_deserialize'$4_token_ConcurrentTokenIdentifiers'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <token::Token>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_token_Token'($1_from_bcs_deserialize'$4_token_Token'(b1), $1_from_bcs_deserialize'$4_token_Token'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <aptos_token::AptosCollection>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4_aptos_token_AptosCollection'($1_from_bcs_deserialize'$4_aptos_token_AptosCollection'(b1), $1_from_bcs_deserialize'$4_aptos_token_AptosCollection'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <machineV0::Machine>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'($1_from_bcs_deserialize'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'(b1), $1_from_bcs_deserialize'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <machineV0::ResourceInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo'($1_from_bcs_deserialize'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo'(b1), $1_from_bcs_deserialize'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:21:9+118, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'#0'($1_from_bcs_deserialize'#0'(b1), $1_from_bcs_deserialize'#0'(b2)))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\hash.spec.move:8:9+113
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_keccak256(b1), $1_aptos_hash_spec_keccak256(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\hash.spec.move:13:9+129
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_sha2_512_internal(b1), $1_aptos_hash_spec_sha2_512_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\hash.spec.move:18:9+129
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_sha3_512_internal(b1), $1_aptos_hash_spec_sha3_512_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\hash.spec.move:23:9+131
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_ripemd160_internal(b1), $1_aptos_hash_spec_ripemd160_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\hash.spec.move:28:9+135
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_blake2b_256_internal(b1), $1_aptos_hash_spec_blake2b_256_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\vector.move:146:5+86
function {:inline} $1_vector_$is_empty'u64'(v: Vec (int)): bool {
    $IsEqual'u64'($1_vector_$length'u64'(v), 0)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\vector.move:146:5+86
function {:inline} $1_vector_$is_empty'address'(v: Vec (int)): bool {
    $IsEqual'u64'($1_vector_$length'address'(v), 0)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\vector.move:146:5+86
function {:inline} $1_vector_$is_empty'$1_string_String'(v: Vec ($1_string_String)): bool {
    $IsEqual'u64'($1_vector_$length'$1_string_String'(v), 0)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\vector.move:146:5+86
function {:inline} $1_vector_$is_empty'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)): bool {
    $IsEqual'u64'($1_vector_$length'$1_aggregator_Aggregator'(v), 0)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\vector.move:146:5+86
function {:inline} $1_vector_$is_empty'$1_aggregator_v2_AggregatorSnapshot'u64''(v: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')): bool {
    $IsEqual'u64'($1_vector_$length'$1_aggregator_v2_AggregatorSnapshot'u64''(v), 0)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\vector.move:146:5+86
function {:inline} $1_vector_$is_empty'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)): bool {
    $IsEqual'u64'($1_vector_$length'$1_optional_aggregator_Integer'(v), 0)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\vector.move:146:5+86
function {:inline} $1_vector_$is_empty'$4_royalty_Royalty'(v: Vec ($4_royalty_Royalty)): bool {
    $IsEqual'u64'($1_vector_$length'$4_royalty_Royalty'(v), 0)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\vector.move:146:5+86
function {:inline} $1_vector_$is_empty'$4_collection_ConcurrentSupply'(v: Vec ($4_collection_ConcurrentSupply)): bool {
    $IsEqual'u64'($1_vector_$length'$4_collection_ConcurrentSupply'(v), 0)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\vector.move:146:5+86
function {:inline} $1_vector_$is_empty'$4_collection_FixedSupply'(v: Vec ($4_collection_FixedSupply)): bool {
    $IsEqual'u64'($1_vector_$length'$4_collection_FixedSupply'(v), 0)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:102:5+145
function {:inline} $1_option_$borrow'$1_aggregator_Aggregator'(t: $1_option_Option'$1_aggregator_Aggregator'): $1_aggregator_Aggregator {
    $1_vector_$borrow'$1_aggregator_Aggregator'(t->$vec, 0)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:102:5+145
function {:inline} $1_option_$borrow'$1_optional_aggregator_Integer'(t: $1_option_Option'$1_optional_aggregator_Integer'): $1_optional_aggregator_Integer {
    $1_vector_$borrow'$1_optional_aggregator_Integer'(t->$vec, 0)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:61:5+95
function {:inline} $1_option_$is_none'$1_aggregator_Aggregator'(t: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $1_vector_$is_empty'$1_aggregator_Aggregator'(t->$vec)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:61:5+95
function {:inline} $1_option_$is_none'$1_optional_aggregator_Integer'(t: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $1_vector_$is_empty'$1_optional_aggregator_Integer'(t->$vec)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:74:5+96
function {:inline} $1_option_$is_some'$1_aggregator_Aggregator'(t: $1_option_Option'$1_aggregator_Aggregator'): bool {
    !$1_vector_$is_empty'$1_aggregator_Aggregator'(t->$vec)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:74:5+96
function {:inline} $1_option_$is_some'$1_optional_aggregator_Integer'(t: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    !$1_vector_$is_empty'$1_optional_aggregator_Integer'(t->$vec)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:34:10+78
function {:inline} $1_option_spec_none'u64'(): $1_option_Option'u64' {
    $1_option_Option'u64'($EmptyVec'u64'())
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:34:10+78
function {:inline} $1_option_spec_none'address'(): $1_option_Option'address' {
    $1_option_Option'address'($EmptyVec'address'())
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:34:10+78
function {:inline} $1_option_spec_none'$1_string_String'(): $1_option_Option'$1_string_String' {
    $1_option_Option'$1_string_String'($EmptyVec'$1_string_String'())
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:34:10+78
function {:inline} $1_option_spec_none'$1_aggregator_v2_AggregatorSnapshot'u64''(): $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'' {
    $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64''($EmptyVec'$1_aggregator_v2_AggregatorSnapshot'u64''())
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:34:10+78
function {:inline} $1_option_spec_none'$4_royalty_MutatorRef'(): $1_option_Option'$4_royalty_MutatorRef' {
    $1_option_Option'$4_royalty_MutatorRef'($EmptyVec'$4_royalty_MutatorRef'())
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:34:10+78
function {:inline} $1_option_spec_none'$4_collection_MutatorRef'(): $1_option_Option'$4_collection_MutatorRef' {
    $1_option_Option'$4_collection_MutatorRef'($EmptyVec'$4_collection_MutatorRef'())
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:47:10+89
function {:inline} $1_option_spec_some'u64'(e: int): $1_option_Option'u64' {
    $1_option_Option'u64'(MakeVec1(e))
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:47:10+89
function {:inline} $1_option_spec_some'address'(e: int): $1_option_Option'address' {
    $1_option_Option'address'(MakeVec1(e))
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:47:10+89
function {:inline} $1_option_spec_some'$1_aggregator_v2_AggregatorSnapshot'u64''(e: $1_aggregator_v2_AggregatorSnapshot'u64'): $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'' {
    $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64''(MakeVec1(e))
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:47:10+89
function {:inline} $1_option_spec_some'$4_royalty_MutatorRef'(e: $4_royalty_MutatorRef): $1_option_Option'$4_royalty_MutatorRef' {
    $1_option_Option'$4_royalty_MutatorRef'(MakeVec1(e))
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:47:10+89
function {:inline} $1_option_spec_some'$4_royalty_Royalty'(e: $4_royalty_Royalty): $1_option_Option'$4_royalty_Royalty' {
    $1_option_Option'$4_royalty_Royalty'(MakeVec1(e))
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:47:10+89
function {:inline} $1_option_spec_some'$4_collection_ConcurrentSupply'(e: $4_collection_ConcurrentSupply): $1_option_Option'$4_collection_ConcurrentSupply' {
    $1_option_Option'$4_collection_ConcurrentSupply'(MakeVec1(e))
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:47:10+89
function {:inline} $1_option_spec_some'$4_collection_MutatorRef'(e: $4_collection_MutatorRef): $1_option_Option'$4_collection_MutatorRef' {
    $1_option_Option'$4_collection_MutatorRef'(MakeVec1(e))
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:47:10+89
function {:inline} $1_option_spec_some'$4_collection_FixedSupply'(e: $4_collection_FixedSupply): $1_option_Option'$4_collection_FixedSupply' {
    $1_option_Option'$4_collection_FixedSupply'(MakeVec1(e))
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:69:10+91
function {:inline} $1_option_spec_is_none'address'(t: $1_option_Option'address'): bool {
    $1_vector_$is_empty'address'(t->$vec)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:69:10+91
function {:inline} $1_option_spec_is_none'$1_string_String'(t: $1_option_Option'$1_string_String'): bool {
    $1_vector_$is_empty'$1_string_String'(t->$vec)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:69:10+91
function {:inline} $1_option_spec_is_none'$4_royalty_Royalty'(t: $1_option_Option'$4_royalty_Royalty'): bool {
    $1_vector_$is_empty'$4_royalty_Royalty'(t->$vec)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:69:10+91
function {:inline} $1_option_spec_is_none'$4_collection_ConcurrentSupply'(t: $1_option_Option'$4_collection_ConcurrentSupply'): bool {
    $1_vector_$is_empty'$4_collection_ConcurrentSupply'(t->$vec)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:69:10+91
function {:inline} $1_option_spec_is_none'$4_collection_FixedSupply'(t: $1_option_Option'$4_collection_FixedSupply'): bool {
    $1_vector_$is_empty'$4_collection_FixedSupply'(t->$vec)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:82:10+92
function {:inline} $1_option_spec_is_some'u64'(t: $1_option_Option'u64'): bool {
    !$1_vector_$is_empty'u64'(t->$vec)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:82:10+92
function {:inline} $1_option_spec_is_some'$1_string_String'(t: $1_option_Option'$1_string_String'): bool {
    !$1_vector_$is_empty'$1_string_String'(t->$vec)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:82:10+92
function {:inline} $1_option_spec_is_some'$1_aggregator_v2_AggregatorSnapshot'u64''(t: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64''): bool {
    !$1_vector_$is_empty'$1_aggregator_v2_AggregatorSnapshot'u64''(t->$vec)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:82:10+92
function {:inline} $1_option_spec_is_some'$4_royalty_Royalty'(t: $1_option_Option'$4_royalty_Royalty'): bool {
    !$1_vector_$is_empty'$4_royalty_Royalty'(t->$vec)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:82:10+92
function {:inline} $1_option_spec_is_some'$4_collection_ConcurrentSupply'(t: $1_option_Option'$4_collection_ConcurrentSupply'): bool {
    !$1_vector_$is_empty'$4_collection_ConcurrentSupply'(t->$vec)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:82:10+92
function {:inline} $1_option_spec_is_some'$4_collection_FixedSupply'(t: $1_option_Option'$4_collection_FixedSupply'): bool {
    !$1_vector_$is_empty'$4_collection_FixedSupply'(t->$vec)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:111:10+78
function {:inline} $1_option_spec_borrow'u64'(t: $1_option_Option'u64'): int {
    ReadVec(t->$vec, 0)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:111:10+78
function {:inline} $1_option_spec_borrow'$1_string_String'(t: $1_option_Option'$1_string_String'): $1_string_String {
    ReadVec(t->$vec, 0)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:111:10+78
function {:inline} $1_option_spec_borrow'$1_aggregator_v2_AggregatorSnapshot'u64''(t: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64''): $1_aggregator_v2_AggregatorSnapshot'u64' {
    ReadVec(t->$vec, 0)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:111:10+78
function {:inline} $1_option_spec_borrow'$4_royalty_Royalty'(t: $1_option_Option'$4_royalty_Royalty'): $4_royalty_Royalty {
    ReadVec(t->$vec, 0)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:111:10+78
function {:inline} $1_option_spec_borrow'$4_collection_ConcurrentSupply'(t: $1_option_Option'$4_collection_ConcurrentSupply'): $4_collection_ConcurrentSupply {
    ReadVec(t->$vec, 0)
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:111:10+78
function {:inline} $1_option_spec_borrow'$4_collection_FixedSupply'(t: $1_option_Option'$4_collection_FixedSupply'): $4_collection_FixedSupply {
    ReadVec(t->$vec, 0)
}

// struct option::Option<u64> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+81
datatype $1_option_Option'u64' {
    $1_option_Option'u64'($vec: Vec (int))
}
function {:inline} $Update'$1_option_Option'u64''_vec(s: $1_option_Option'u64', x: Vec (int)): $1_option_Option'u64' {
    $1_option_Option'u64'(x)
}
function $IsValid'$1_option_Option'u64''(s: $1_option_Option'u64'): bool {
    $IsValid'vec'u64''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'u64''(s1: $1_option_Option'u64', s2: $1_option_Option'u64'): bool {
    $IsEqual'vec'u64''(s1->$vec, s2->$vec)}

// struct option::Option<address> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+81
datatype $1_option_Option'address' {
    $1_option_Option'address'($vec: Vec (int))
}
function {:inline} $Update'$1_option_Option'address''_vec(s: $1_option_Option'address', x: Vec (int)): $1_option_Option'address' {
    $1_option_Option'address'(x)
}
function $IsValid'$1_option_Option'address''(s: $1_option_Option'address'): bool {
    $IsValid'vec'address''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'address''(s1: $1_option_Option'address', s2: $1_option_Option'address'): bool {
    $IsEqual'vec'address''(s1->$vec, s2->$vec)}

// struct option::Option<string::String> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+81
datatype $1_option_Option'$1_string_String' {
    $1_option_Option'$1_string_String'($vec: Vec ($1_string_String))
}
function {:inline} $Update'$1_option_Option'$1_string_String''_vec(s: $1_option_Option'$1_string_String', x: Vec ($1_string_String)): $1_option_Option'$1_string_String' {
    $1_option_Option'$1_string_String'(x)
}
function $IsValid'$1_option_Option'$1_string_String''(s: $1_option_Option'$1_string_String'): bool {
    $IsValid'vec'$1_string_String''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_string_String''(s1: $1_option_Option'$1_string_String', s2: $1_option_Option'$1_string_String'): bool {
    $IsEqual'vec'$1_string_String''(s1->$vec, s2->$vec)}

// struct option::Option<aggregator::Aggregator> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+81
datatype $1_option_Option'$1_aggregator_Aggregator' {
    $1_option_Option'$1_aggregator_Aggregator'($vec: Vec ($1_aggregator_Aggregator))
}
function {:inline} $Update'$1_option_Option'$1_aggregator_Aggregator''_vec(s: $1_option_Option'$1_aggregator_Aggregator', x: Vec ($1_aggregator_Aggregator)): $1_option_Option'$1_aggregator_Aggregator' {
    $1_option_Option'$1_aggregator_Aggregator'(x)
}
function $IsValid'$1_option_Option'$1_aggregator_Aggregator''(s: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $IsValid'vec'$1_aggregator_Aggregator''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_aggregator_Aggregator''(s1: $1_option_Option'$1_aggregator_Aggregator', s2: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $IsEqual'vec'$1_aggregator_Aggregator''(s1->$vec, s2->$vec)}

// struct option::Option<aggregator_v2::AggregatorSnapshot<u64>> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+81
datatype $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'' {
    $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64''($vec: Vec ($1_aggregator_v2_AggregatorSnapshot'u64'))
}
function {:inline} $Update'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''_vec(s: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'', x: Vec ($1_aggregator_v2_AggregatorSnapshot'u64')): $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'' {
    $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64''(x)
}
function $IsValid'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''(s: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64''): bool {
    $IsValid'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''(s1: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'', s2: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64''): bool {
    $IsEqual'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(s1->$vec, s2->$vec)}

// struct option::Option<optional_aggregator::Integer> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+81
datatype $1_option_Option'$1_optional_aggregator_Integer' {
    $1_option_Option'$1_optional_aggregator_Integer'($vec: Vec ($1_optional_aggregator_Integer))
}
function {:inline} $Update'$1_option_Option'$1_optional_aggregator_Integer''_vec(s: $1_option_Option'$1_optional_aggregator_Integer', x: Vec ($1_optional_aggregator_Integer)): $1_option_Option'$1_optional_aggregator_Integer' {
    $1_option_Option'$1_optional_aggregator_Integer'(x)
}
function $IsValid'$1_option_Option'$1_optional_aggregator_Integer''(s: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $IsValid'vec'$1_optional_aggregator_Integer''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''(s1: $1_option_Option'$1_optional_aggregator_Integer', s2: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $IsEqual'vec'$1_optional_aggregator_Integer''(s1->$vec, s2->$vec)}

// struct option::Option<optional_aggregator::OptionalAggregator> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+81
datatype $1_option_Option'$1_optional_aggregator_OptionalAggregator' {
    $1_option_Option'$1_optional_aggregator_OptionalAggregator'($vec: Vec ($1_optional_aggregator_OptionalAggregator))
}
function {:inline} $Update'$1_option_Option'$1_optional_aggregator_OptionalAggregator''_vec(s: $1_option_Option'$1_optional_aggregator_OptionalAggregator', x: Vec ($1_optional_aggregator_OptionalAggregator)): $1_option_Option'$1_optional_aggregator_OptionalAggregator' {
    $1_option_Option'$1_optional_aggregator_OptionalAggregator'(x)
}
function $IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    $IsValid'vec'$1_optional_aggregator_OptionalAggregator''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s1: $1_option_Option'$1_optional_aggregator_OptionalAggregator', s2: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''(s1->$vec, s2->$vec)}

// struct option::Option<royalty::MutatorRef> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+81
datatype $1_option_Option'$4_royalty_MutatorRef' {
    $1_option_Option'$4_royalty_MutatorRef'($vec: Vec ($4_royalty_MutatorRef))
}
function {:inline} $Update'$1_option_Option'$4_royalty_MutatorRef''_vec(s: $1_option_Option'$4_royalty_MutatorRef', x: Vec ($4_royalty_MutatorRef)): $1_option_Option'$4_royalty_MutatorRef' {
    $1_option_Option'$4_royalty_MutatorRef'(x)
}
function $IsValid'$1_option_Option'$4_royalty_MutatorRef''(s: $1_option_Option'$4_royalty_MutatorRef'): bool {
    $IsValid'vec'$4_royalty_MutatorRef''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$4_royalty_MutatorRef''(s1: $1_option_Option'$4_royalty_MutatorRef', s2: $1_option_Option'$4_royalty_MutatorRef'): bool {
    $IsEqual'vec'$4_royalty_MutatorRef''(s1->$vec, s2->$vec)}

// struct option::Option<royalty::Royalty> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+81
datatype $1_option_Option'$4_royalty_Royalty' {
    $1_option_Option'$4_royalty_Royalty'($vec: Vec ($4_royalty_Royalty))
}
function {:inline} $Update'$1_option_Option'$4_royalty_Royalty''_vec(s: $1_option_Option'$4_royalty_Royalty', x: Vec ($4_royalty_Royalty)): $1_option_Option'$4_royalty_Royalty' {
    $1_option_Option'$4_royalty_Royalty'(x)
}
function $IsValid'$1_option_Option'$4_royalty_Royalty''(s: $1_option_Option'$4_royalty_Royalty'): bool {
    $IsValid'vec'$4_royalty_Royalty''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$4_royalty_Royalty''(s1: $1_option_Option'$4_royalty_Royalty', s2: $1_option_Option'$4_royalty_Royalty'): bool {
    $IsEqual'vec'$4_royalty_Royalty''(s1->$vec, s2->$vec)}

// struct option::Option<collection::ConcurrentSupply> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+81
datatype $1_option_Option'$4_collection_ConcurrentSupply' {
    $1_option_Option'$4_collection_ConcurrentSupply'($vec: Vec ($4_collection_ConcurrentSupply))
}
function {:inline} $Update'$1_option_Option'$4_collection_ConcurrentSupply''_vec(s: $1_option_Option'$4_collection_ConcurrentSupply', x: Vec ($4_collection_ConcurrentSupply)): $1_option_Option'$4_collection_ConcurrentSupply' {
    $1_option_Option'$4_collection_ConcurrentSupply'(x)
}
function $IsValid'$1_option_Option'$4_collection_ConcurrentSupply''(s: $1_option_Option'$4_collection_ConcurrentSupply'): bool {
    $IsValid'vec'$4_collection_ConcurrentSupply''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$4_collection_ConcurrentSupply''(s1: $1_option_Option'$4_collection_ConcurrentSupply', s2: $1_option_Option'$4_collection_ConcurrentSupply'): bool {
    $IsEqual'vec'$4_collection_ConcurrentSupply''(s1->$vec, s2->$vec)}

// struct option::Option<collection::MutatorRef> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+81
datatype $1_option_Option'$4_collection_MutatorRef' {
    $1_option_Option'$4_collection_MutatorRef'($vec: Vec ($4_collection_MutatorRef))
}
function {:inline} $Update'$1_option_Option'$4_collection_MutatorRef''_vec(s: $1_option_Option'$4_collection_MutatorRef', x: Vec ($4_collection_MutatorRef)): $1_option_Option'$4_collection_MutatorRef' {
    $1_option_Option'$4_collection_MutatorRef'(x)
}
function $IsValid'$1_option_Option'$4_collection_MutatorRef''(s: $1_option_Option'$4_collection_MutatorRef'): bool {
    $IsValid'vec'$4_collection_MutatorRef''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$4_collection_MutatorRef''(s1: $1_option_Option'$4_collection_MutatorRef', s2: $1_option_Option'$4_collection_MutatorRef'): bool {
    $IsEqual'vec'$4_collection_MutatorRef''(s1->$vec, s2->$vec)}

// struct option::Option<collection::FixedSupply> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\option.move:7:5+81
datatype $1_option_Option'$4_collection_FixedSupply' {
    $1_option_Option'$4_collection_FixedSupply'($vec: Vec ($4_collection_FixedSupply))
}
function {:inline} $Update'$1_option_Option'$4_collection_FixedSupply''_vec(s: $1_option_Option'$4_collection_FixedSupply', x: Vec ($4_collection_FixedSupply)): $1_option_Option'$4_collection_FixedSupply' {
    $1_option_Option'$4_collection_FixedSupply'(x)
}
function $IsValid'$1_option_Option'$4_collection_FixedSupply''(s: $1_option_Option'$4_collection_FixedSupply'): bool {
    $IsValid'vec'$4_collection_FixedSupply''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$4_collection_FixedSupply''(s1: $1_option_Option'$4_collection_FixedSupply', s2: $1_option_Option'$4_collection_FixedSupply'): bool {
    $IsEqual'vec'$4_collection_FixedSupply''(s1->$vec, s2->$vec)}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.spec.move:28:9+50
function  $1_string_spec_internal_check_utf8(v: Vec (int)): bool;
axiom (forall v: Vec (int) ::
(var $$res := $1_string_spec_internal_check_utf8(v);
$IsValid'bool'($$res)));

// struct string::String at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:13:5+70
datatype $1_string_String {
    $1_string_String($bytes: Vec (int))
}
function {:inline} $Update'$1_string_String'_bytes(s: $1_string_String, x: Vec (int)): $1_string_String {
    $1_string_String(x)
}
function $IsValid'$1_string_String'(s: $1_string_String): bool {
    $IsValid'vec'u8''(s->$bytes)
}
function {:inline} $IsEqual'$1_string_String'(s1: $1_string_String, s2: $1_string_String): bool {
    $IsEqual'vec'u8''(s1->$bytes, s2->$bytes)}

// fun string::append [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:48:5+98
procedure {:inline 1} $1_string_append(_$t0: $Mutation ($1_string_String), _$t1: $1_string_String) returns ($ret0: $Mutation ($1_string_String))
{
    // declare local variables
    var $t2: $Mutation (Vec (int));
    var $t3: Vec (int);
    var $t4: int;
    var $t0: $Mutation ($1_string_String);
    var $t1: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[s]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:48:5+1
    assume {:print "$at(15,1402,1403)"} true;
    $temp_0'$1_string_String' := $Dereference($t0);
    assume {:print "$track_local(2,0,0):", $temp_0'$1_string_String'} $temp_0'$1_string_String' == $temp_0'$1_string_String';

    // trace_local[r]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:48:5+1
    assume {:print "$track_local(2,0,1):", $t1} $t1 == $t1;

    // $t2 := borrow_field<string::String>.bytes($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:49:24+12
    assume {:print "$at(15,1472,1484)"} true;
    $t2 := $ChildMutation($t0, 0, $Dereference($t0)->$bytes);

    // $t3 := get_field<string::String>.bytes($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:49:38+7
    $t3 := $t1->$bytes;

    // vector::append<u8>($t2, $t3) on_abort goto L2 with $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:49:9+37
    call $t2 := $1_vector_append'u8'($t2, $t3);
    if ($abort_flag) {
        assume {:print "$at(15,1457,1494)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(2,0):", $t4} $t4 == $t4;
        goto L2;
    }

    // write_back[Reference($t0).bytes (vector<u8>)]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:49:9+37
    $t0 := $UpdateMutation($t0, $Update'$1_string_String'_bytes($Dereference($t0), $Dereference($t2)));

    // trace_local[s]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:49:9+37
    $temp_0'$1_string_String' := $Dereference($t0);
    assume {:print "$track_local(2,0,0):", $temp_0'$1_string_String'} $temp_0'$1_string_String' == $temp_0'$1_string_String';

    // trace_local[s]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:49:9+37
    $temp_0'$1_string_String' := $Dereference($t0);
    assume {:print "$track_local(2,0,0):", $temp_0'$1_string_String'} $temp_0'$1_string_String' == $temp_0'$1_string_String';

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:50:5+1
    assume {:print "$at(15,1499,1500)"} true;
L1:

    // return () at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:50:5+1
    assume {:print "$at(15,1499,1500)"} true;
    $ret0 := $t0;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:50:5+1
L2:

    // abort($t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:50:5+1
    assume {:print "$at(15,1499,1500)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun string::length [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:43:5+75
procedure {:inline 1} $1_string_length(_$t0: $1_string_String) returns ($ret0: int)
{
    // declare local variables
    var $t1: Vec (int);
    var $t2: int;
    var $t3: int;
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[s]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:43:5+1
    assume {:print "$at(15,1295,1296)"} true;
    assume {:print "$track_local(2,10,0):", $t0} $t0 == $t0;

    // $t1 := get_field<string::String>.bytes($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:44:24+8
    assume {:print "$at(15,1355,1363)"} true;
    $t1 := $t0->$bytes;

    // $t2 := vector::length<u8>($t1) on_abort goto L2 with $t3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:44:9+24
    call $t2 := $1_vector_length'u8'($t1);
    if ($abort_flag) {
        assume {:print "$at(15,1340,1364)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(2,10):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:44:9+24
    assume {:print "$track_return(2,10,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:45:5+1
    assume {:print "$at(15,1369,1370)"} true;
L1:

    // return $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:45:5+1
    assume {:print "$at(15,1369,1370)"} true;
    $ret0 := $t2;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:45:5+1
L2:

    // abort($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:45:5+1
    assume {:print "$at(15,1369,1370)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun string::bytes [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:33:5+66
procedure {:inline 1} $1_string_bytes(_$t0: $1_string_String) returns ($ret0: Vec (int))
{
    // declare local variables
    var $t1: Vec (int);
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[s]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:33:5+1
    assume {:print "$at(15,1039,1040)"} true;
    assume {:print "$track_local(2,2,0):", $t0} $t0 == $t0;

    // $t1 := get_field<string::String>.bytes($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:34:9+8
    assume {:print "$at(15,1091,1099)"} true;
    $t1 := $t0->$bytes;

    // trace_return[0]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:34:9+8
    assume {:print "$track_return(2,2,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:35:5+1
    assume {:print "$at(15,1104,1105)"} true;
L1:

    // return $t1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:35:5+1
    assume {:print "$at(15,1104,1105)"} true;
    $ret0 := $t1;
    return;

}

// fun string::utf8 [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:18:5+133
procedure {:inline 1} $1_string_utf8(_$t0: Vec (int)) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: $1_string_String;
    var $t0: Vec (int);
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[bytes]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:18:5+1
    assume {:print "$at(15,573,574)"} true;
    assume {:print "$track_local(2,13,0):", $t0} $t0 == $t0;

    // $t1 := opaque begin: string::internal_check_utf8($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:19:17+27
    assume {:print "$at(15,634,661)"} true;

    // assume WellFormed($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:19:17+27
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, string::spec_internal_check_utf8($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:19:17+27
    assume $IsEqual'bool'($t1, $1_string_spec_internal_check_utf8($t0));

    // $t1 := opaque end: string::internal_check_utf8($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:19:17+27

    // if ($t1) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:19:9+51
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:19:9+51
L1:

    // goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:19:9+51
    assume {:print "$at(15,626,677)"} true;
    goto L2;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:19:46+13
L0:

    // $t2 := 1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:19:46+13
    assume {:print "$at(15,663,676)"} true;
    $t2 := 1;
    assume $IsValid'u64'($t2);

    // trace_abort($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:19:9+51
    assume {:print "$at(15,626,677)"} true;
    assume {:print "$track_abort(2,13):", $t2} $t2 == $t2;

    // goto L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:19:9+51
    goto L4;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:20:16+5
    assume {:print "$at(15,694,699)"} true;
L2:

    // $t3 := pack string::String($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:20:9+13
    assume {:print "$at(15,687,700)"} true;
    $t3 := $1_string_String($t0);

    // trace_return[0]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:20:9+13
    assume {:print "$track_return(2,13,0):", $t3} $t3 == $t3;

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:21:5+1
    assume {:print "$at(15,705,706)"} true;
L3:

    // return $t3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:21:5+1
    assume {:print "$at(15,705,706)"} true;
    $ret0 := $t3;
    return;

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:21:5+1
L4:

    // abort($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\string.move:21:5+1
    assume {:print "$at(15,705,706)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:12:5+77
function {:inline} $1_signer_$address_of(s: $signer): int {
    $1_signer_$borrow_address(s)
}

// fun signer::address_of [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:12:5+77
procedure {:inline 1} $1_signer_address_of(_$t0: $signer) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t0: $signer;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[s]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:12:5+1
    assume {:print "$at(14,395,396)"} true;
    assume {:print "$track_local(3,0,0):", $t0} $t0 == $t0;

    // $t1 := signer::borrow_address($t0) on_abort goto L2 with $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:13:10+17
    assume {:print "$at(14,449,466)"} true;
    call $t1 := $1_signer_borrow_address($t0);
    if ($abort_flag) {
        assume {:print "$at(14,449,466)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(3,0):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:13:9+18
    assume {:print "$track_return(3,0,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:14:5+1
    assume {:print "$at(14,471,472)"} true;
L1:

    // return $t1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:14:5+1
    assume {:print "$at(14,471,472)"} true;
    $ret0 := $t1;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:14:5+1
L2:

    // abort($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\signer.move:14:5+1
    assume {:print "$at(14,471,472)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun error::already_exists [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:3+71
procedure {:inline 1} $1_error_already_exists(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:3+1
    assume {:print "$at(10,3585,3586)"} true;
    assume {:print "$track_local(4,1,0):", $t0} $t0 == $t0;

    // $t1 := 8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:54+14
    $t1 := 8;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:44+28
    assume {:print "$at(10,3626,3654)"} true;

    // assume WellFormed($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:44+28
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:44+28
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:44+28

    // trace_return[0]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:44+28
    assume {:print "$track_return(4,1,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:73+1
L1:

    // return $t3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:83:73+1
    assume {:print "$at(10,3655,3656)"} true;
    $ret0 := $t3;
    return;

}

// fun error::invalid_argument [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:76:3+76
procedure {:inline 1} $1_error_invalid_argument(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:76:3+1
    assume {:print "$at(10,3082,3083)"} true;
    assume {:print "$track_local(4,4,0):", $t0} $t0 == $t0;

    // $t1 := 1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:76:57+16
    $t1 := 1;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:76:47+30
    assume {:print "$at(10,3126,3156)"} true;

    // assume WellFormed($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:76:47+30
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:76:47+30
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:76:47+30

    // trace_return[0]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:76:47+30
    assume {:print "$track_return(4,4,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:76:78+1
L1:

    // return $t3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:76:78+1
    assume {:print "$at(10,3157,3158)"} true;
    $ret0 := $t3;
    return;

}

// fun error::invalid_state [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:78:3+70
procedure {:inline 1} $1_error_invalid_state(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:78:3+1
    assume {:print "$at(10,3232,3233)"} true;
    assume {:print "$track_local(4,5,0):", $t0} $t0 == $t0;

    // $t1 := 3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:78:54+13
    $t1 := 3;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:78:44+27
    assume {:print "$at(10,3273,3300)"} true;

    // assume WellFormed($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:78:44+27
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:78:44+27
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:78:44+27

    // trace_return[0]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:78:44+27
    assume {:print "$track_return(4,5,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:78:72+1
L1:

    // return $t3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:78:72+1
    assume {:print "$at(10,3301,3302)"} true;
    $ret0 := $t3;
    return;

}

// fun error::not_found [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:3+61
procedure {:inline 1} $1_error_not_found(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:3+1
    assume {:print "$at(10,3461,3462)"} true;
    assume {:print "$track_local(4,6,0):", $t0} $t0 == $t0;

    // $t1 := 6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:49+9
    $t1 := 6;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:39+23
    assume {:print "$at(10,3497,3520)"} true;

    // assume WellFormed($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:39+23
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:39+23
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:39+23

    // trace_return[0]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:39+23
    assume {:print "$track_return(4,6,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:63+1
L1:

    // return $t3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:81:63+1
    assume {:print "$at(10,3521,3522)"} true;
    $ret0 := $t3;
    return;

}

// fun error::out_of_range [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:3+68
procedure {:inline 1} $1_error_out_of_range(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:3+1
    assume {:print "$at(10,3161,3162)"} true;
    assume {:print "$track_local(4,8,0):", $t0} $t0 == $t0;

    // $t1 := 2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:53+12
    $t1 := 2;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:43+26
    assume {:print "$at(10,3201,3227)"} true;

    // assume WellFormed($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:43+26
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:43+26
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:43+26

    // trace_return[0]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:43+26
    assume {:print "$track_return(4,8,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:70+1
L1:

    // return $t3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:77:70+1
    assume {:print "$at(10,3228,3229)"} true;
    $ret0 := $t3;
    return;

}

// fun error::permission_denied [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:3+77
procedure {:inline 1} $1_error_permission_denied(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:3+1
    assume {:print "$at(10,3381,3382)"} true;
    assume {:print "$track_local(4,9,0):", $t0} $t0 == $t0;

    // $t1 := 5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:57+17
    $t1 := 5;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:47+31
    assume {:print "$at(10,3425,3456)"} true;

    // assume WellFormed($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:47+31
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:47+31
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:47+31

    // trace_return[0]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:47+31
    assume {:print "$track_return(4,9,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:79+1
L1:

    // return $t3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\error.move:80:79+1
    assume {:print "$at(10,3457,3458)"} true;
    $ret0 := $t3;
    return;

}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.spec.move:38:10+40
function  $1_features_spec_is_enabled(feature: int): bool;
axiom (forall feature: int ::
(var $$res := $1_features_spec_is_enabled(feature);
$IsValid'bool'($$res)));

// struct features::Features at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:343:5+61
datatype $1_features_Features {
    $1_features_Features($features: Vec (bv8))
}
function {:inline} $Update'$1_features_Features'_features(s: $1_features_Features, x: Vec (bv8)): $1_features_Features {
    $1_features_Features(x)
}
function $IsValid'$1_features_Features'(s: $1_features_Features): bool {
    $IsValid'vec'bv8''(s->$features)
}
function {:inline} $IsEqual'$1_features_Features'(s1: $1_features_Features, s2: $1_features_Features): bool {
    $IsEqual'vec'bv8''(s1->$features, s2->$features)}
var $1_features_Features_$memory: $Memory $1_features_Features;

// fun features::aggregator_v2_api_enabled [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:252:5+108
procedure {:inline 1} $1_features_aggregator_v2_api_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 30 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:253:20+17
    assume {:print "$at(8,10544,10561)"} true;
    $t0 := 30;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:253:9+29

    // assume WellFormed($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:253:9+29
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:253:9+29
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:253:9+29

    // trace_return[0]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:253:9+29
    assume {:print "$track_return(5,1,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:254:5+1
    assume {:print "$at(8,10567,10568)"} true;
L1:

    // return $t1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:254:5+1
    assume {:print "$at(8,10567,10568)"} true;
    $ret0 := $t1;
    return;

}

// fun features::concurrent_assets_enabled [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:294:5+220
procedure {:inline 1} $1_features_concurrent_assets_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: bool;
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t4: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t1 := 37 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:296:20+17
    assume {:print "$at(8,12154,12171)"} true;
    $t1 := 37;
    assume $IsValid'u64'($t1);

    // $t2 := opaque begin: features::is_enabled($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:296:9+29

    // assume WellFormed($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:296:9+29
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, features::spec_is_enabled($t1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:296:9+29
    assume $IsEqual'bool'($t2, $1_features_spec_is_enabled($t1));

    // $t2 := opaque end: features::is_enabled($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:296:9+29

    // if ($t2) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:296:9+60
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:296:42+27
L1:

    // $t0 := features::aggregator_v2_api_enabled() on_abort goto L4 with $t3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:296:42+27
    assume {:print "$at(8,12176,12203)"} true;
    call $t0 := $1_features_aggregator_v2_api_enabled();
    if ($abort_flag) {
        assume {:print "$at(8,12176,12203)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(5,13):", $t3} $t3 == $t3;
        goto L4;
    }

    // goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:296:9+60
    goto L2;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:296:9+60
L0:

    // $t4 := false at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:296:9+60
    assume {:print "$at(8,12143,12203)"} true;
    $t4 := false;
    assume $IsValid'bool'($t4);

    // $t0 := $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:296:9+60
    $t0 := $t4;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:296:9+60
L2:

    // trace_return[0]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:296:9+60
    assume {:print "$at(8,12143,12203)"} true;
    assume {:print "$track_return(5,13,0):", $t0} $t0 == $t0;

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:297:5+1
    assume {:print "$at(8,12208,12209)"} true;
L3:

    // return $t0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:297:5+1
    assume {:print "$at(8,12208,12209)"} true;
    $ret0 := $t0;
    return;

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:297:5+1
L4:

    // abort($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\../move-stdlib\sources\configs\features.move:297:5+1
    assume {:print "$at(8,12208,12209)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// struct type_info::TypeInfo at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\type_info.move:17:5+145
datatype $1_type_info_TypeInfo {
    $1_type_info_TypeInfo($account_address: int, $module_name: Vec (int), $struct_name: Vec (int))
}
function {:inline} $Update'$1_type_info_TypeInfo'_account_address(s: $1_type_info_TypeInfo, x: int): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(x, s->$module_name, s->$struct_name)
}
function {:inline} $Update'$1_type_info_TypeInfo'_module_name(s: $1_type_info_TypeInfo, x: Vec (int)): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(s->$account_address, x, s->$struct_name)
}
function {:inline} $Update'$1_type_info_TypeInfo'_struct_name(s: $1_type_info_TypeInfo, x: Vec (int)): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(s->$account_address, s->$module_name, x)
}
function $IsValid'$1_type_info_TypeInfo'(s: $1_type_info_TypeInfo): bool {
    $IsValid'address'(s->$account_address)
      && $IsValid'vec'u8''(s->$module_name)
      && $IsValid'vec'u8''(s->$struct_name)
}
function {:inline} $IsEqual'$1_type_info_TypeInfo'(s1: $1_type_info_TypeInfo, s2: $1_type_info_TypeInfo): bool {
    $IsEqual'address'(s1->$account_address, s2->$account_address)
    && $IsEqual'vec'u8''(s1->$module_name, s2->$module_name)
    && $IsEqual'vec'u8''(s1->$struct_name, s2->$struct_name)}

// struct guid::GUID at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\guid.move:7:5+50
datatype $1_guid_GUID {
    $1_guid_GUID($id: $1_guid_ID)
}
function {:inline} $Update'$1_guid_GUID'_id(s: $1_guid_GUID, x: $1_guid_ID): $1_guid_GUID {
    $1_guid_GUID(x)
}
function $IsValid'$1_guid_GUID'(s: $1_guid_GUID): bool {
    $IsValid'$1_guid_ID'(s->$id)
}
function {:inline} $IsEqual'$1_guid_GUID'(s1: $1_guid_GUID, s2: $1_guid_GUID): bool {
    s1 == s2
}

// struct guid::ID at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\guid.move:12:5+209
datatype $1_guid_ID {
    $1_guid_ID($creation_num: int, $addr: int)
}
function {:inline} $Update'$1_guid_ID'_creation_num(s: $1_guid_ID, x: int): $1_guid_ID {
    $1_guid_ID(x, s->$addr)
}
function {:inline} $Update'$1_guid_ID'_addr(s: $1_guid_ID, x: int): $1_guid_ID {
    $1_guid_ID(s->$creation_num, x)
}
function $IsValid'$1_guid_ID'(s: $1_guid_ID): bool {
    $IsValid'u64'(s->$creation_num)
      && $IsValid'address'(s->$addr)
}
function {:inline} $IsEqual'$1_guid_ID'(s1: $1_guid_ID, s2: $1_guid_ID): bool {
    s1 == s2
}

// fun guid::create [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\guid.move:23:5+286
procedure {:inline 1} $1_guid_create(_$t0: int, _$t1: $Mutation (int)) returns ($ret0: $1_guid_GUID, $ret1: $Mutation (int))
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $1_guid_ID;
    var $t8: $1_guid_GUID;
    var $t0: int;
    var $t1: $Mutation (int);
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[addr]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\guid.move:23:5+1
    assume {:print "$at(130,836,837)"} true;
    assume {:print "$track_local(13,0,0):", $t0} $t0 == $t0;

    // trace_local[creation_num_ref]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\guid.move:23:5+1
    $temp_0'u64' := $Dereference($t1);
    assume {:print "$track_local(13,0,1):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // $t3 := read_ref($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\guid.move:24:28+17
    assume {:print "$at(130,940,957)"} true;
    $t3 := $Dereference($t1);

    // trace_local[creation_num]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\guid.move:24:13+12
    assume {:print "$track_local(13,0,2):", $t3} $t3 == $t3;

    // $t4 := 1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\guid.move:25:44+1
    assume {:print "$at(130,1002,1003)"} true;
    $t4 := 1;
    assume $IsValid'u64'($t4);

    // $t5 := +($t3, $t4) on_abort goto L2 with $t6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\guid.move:25:42+1
    call $t5 := $AddU64($t3, $t4);
    if ($abort_flag) {
        assume {:print "$at(130,1000,1001)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(13,0):", $t6} $t6 == $t6;
        goto L2;
    }

    // write_ref($t1, $t5) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\guid.move:25:9+36
    $t1 := $UpdateMutation($t1, $t5);

    // $t7 := pack guid::ID($t3, $t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\guid.move:27:17+70
    assume {:print "$at(130,1036,1106)"} true;
    $t7 := $1_guid_ID($t3, $t0);

    // $t8 := pack guid::GUID($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\guid.move:26:9+103
    assume {:print "$at(130,1013,1116)"} true;
    $t8 := $1_guid_GUID($t7);

    // trace_return[0]($t8) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\guid.move:26:9+103
    assume {:print "$track_return(13,0,0):", $t8} $t8 == $t8;

    // trace_local[creation_num_ref]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\guid.move:26:9+103
    $temp_0'u64' := $Dereference($t1);
    assume {:print "$track_local(13,0,1):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\guid.move:32:5+1
    assume {:print "$at(130,1121,1122)"} true;
L1:

    // return $t8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\guid.move:32:5+1
    assume {:print "$at(130,1121,1122)"} true;
    $ret0 := $t8;
    $ret1 := $t1;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\guid.move:32:5+1
L2:

    // abort($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\guid.move:32:5+1
    assume {:print "$at(130,1121,1122)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'bool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'bool'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u8'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u8'(bytes);
$IsValid'u8'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u64'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u64'(bytes);
$IsValid'u64'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u128'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u128'(bytes);
$IsValid'u128'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u256'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u256'(bytes);
$IsValid'u256'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'address'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'address'(bytes);
$IsValid'address'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'signer'(bytes: Vec (int)): $signer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'signer'(bytes);
$IsValid'signer'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u8''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u8''(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u64''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u64''(bytes);
$IsValid'vec'u64''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'address''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'address''(bytes);
$IsValid'vec'address''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'vec'u8'''(bytes: Vec (int)): Vec (Vec (int));
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'vec'u8'''(bytes);
$IsValid'vec'vec'u8'''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_string_String''(bytes: Vec (int)): Vec ($1_string_String);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_string_String''(bytes);
$IsValid'vec'$1_string_String''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(bytes: Vec (int)): Vec ($1_aggregator_Aggregator);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(bytes);
$IsValid'vec'$1_aggregator_Aggregator''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(bytes: Vec (int)): Vec ($1_aggregator_v2_AggregatorSnapshot'u64');
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(bytes);
$IsValid'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(bytes: Vec (int)): Vec ($1_optional_aggregator_Integer);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(bytes);
$IsValid'vec'$1_optional_aggregator_Integer''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): Vec ($1_optional_aggregator_OptionalAggregator);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'vec'$1_optional_aggregator_OptionalAggregator''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$4_royalty_MutatorRef''(bytes: Vec (int)): Vec ($4_royalty_MutatorRef);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$4_royalty_MutatorRef''(bytes);
$IsValid'vec'$4_royalty_MutatorRef''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$4_royalty_Royalty''(bytes: Vec (int)): Vec ($4_royalty_Royalty);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$4_royalty_Royalty''(bytes);
$IsValid'vec'$4_royalty_Royalty''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$4_collection_ConcurrentSupply''(bytes: Vec (int)): Vec ($4_collection_ConcurrentSupply);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$4_collection_ConcurrentSupply''(bytes);
$IsValid'vec'$4_collection_ConcurrentSupply''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$4_collection_MutatorRef''(bytes: Vec (int)): Vec ($4_collection_MutatorRef);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$4_collection_MutatorRef''(bytes);
$IsValid'vec'$4_collection_MutatorRef''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$4_collection_FixedSupply''(bytes: Vec (int)): Vec ($4_collection_FixedSupply);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$4_collection_FixedSupply''(bytes);
$IsValid'vec'$4_collection_FixedSupply''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'#0''(bytes: Vec (int)): Vec (#0);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'#0''(bytes);
$IsValid'vec'#0''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'u64''(bytes: Vec (int)): $1_option_Option'u64';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'u64''(bytes);
$IsValid'$1_option_Option'u64''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'address''(bytes: Vec (int)): $1_option_Option'address';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'address''(bytes);
$IsValid'$1_option_Option'address''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_string_String''(bytes: Vec (int)): $1_option_Option'$1_string_String';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_string_String''(bytes);
$IsValid'$1_option_Option'$1_string_String''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(bytes: Vec (int)): $1_option_Option'$1_aggregator_Aggregator';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(bytes);
$IsValid'$1_option_Option'$1_aggregator_Aggregator''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''(bytes: Vec (int)): $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''(bytes);
$IsValid'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(bytes: Vec (int)): $1_option_Option'$1_optional_aggregator_Integer';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(bytes);
$IsValid'$1_option_Option'$1_optional_aggregator_Integer''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): $1_option_Option'$1_optional_aggregator_OptionalAggregator';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$4_royalty_MutatorRef''(bytes: Vec (int)): $1_option_Option'$4_royalty_MutatorRef';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$4_royalty_MutatorRef''(bytes);
$IsValid'$1_option_Option'$4_royalty_MutatorRef''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$4_royalty_Royalty''(bytes: Vec (int)): $1_option_Option'$4_royalty_Royalty';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$4_royalty_Royalty''(bytes);
$IsValid'$1_option_Option'$4_royalty_Royalty''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$4_collection_ConcurrentSupply''(bytes: Vec (int)): $1_option_Option'$4_collection_ConcurrentSupply';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$4_collection_ConcurrentSupply''(bytes);
$IsValid'$1_option_Option'$4_collection_ConcurrentSupply''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$4_collection_MutatorRef''(bytes: Vec (int)): $1_option_Option'$4_collection_MutatorRef';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$4_collection_MutatorRef''(bytes);
$IsValid'$1_option_Option'$4_collection_MutatorRef''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$4_collection_FixedSupply''(bytes: Vec (int)): $1_option_Option'$4_collection_FixedSupply';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$4_collection_FixedSupply''(bytes);
$IsValid'$1_option_Option'$4_collection_FixedSupply''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_string_String'(bytes: Vec (int)): $1_string_String;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_string_String'(bytes);
$IsValid'$1_string_String'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_features_Features'(bytes: Vec (int)): $1_features_Features;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_features_Features'(bytes);
$IsValid'$1_features_Features'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_type_info_TypeInfo'(bytes: Vec (int)): $1_type_info_TypeInfo;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_type_info_TypeInfo'(bytes);
$IsValid'$1_type_info_TypeInfo'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_table_Table'address_u64''(bytes: Vec (int)): Table int (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_table_Table'address_u64''(bytes);
$IsValid'$1_table_Table'address_u64''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_guid_GUID'(bytes: Vec (int)): $1_guid_GUID;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_guid_GUID'(bytes);
$IsValid'$1_guid_GUID'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_guid_ID'(bytes: Vec (int)): $1_guid_ID;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_guid_ID'(bytes);
$IsValid'$1_guid_ID'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_account_CoinRegisterEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_account_KeyRotationEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_coin_DepositEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_coin_DepositEvent''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_coin_WithdrawEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_object_TransferEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_object_TransferEvent''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_BurnEvent''(bytes: Vec (int)): $1_event_EventHandle'$4_collection_BurnEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_BurnEvent''(bytes);
$IsValid'$1_event_EventHandle'$4_collection_BurnEvent''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MintEvent''(bytes: Vec (int)): $1_event_EventHandle'$4_collection_MintEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MintEvent''(bytes);
$IsValid'$1_event_EventHandle'$4_collection_MintEvent''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MutationEvent''(bytes: Vec (int)): $1_event_EventHandle'$4_collection_MutationEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$4_collection_MutationEvent''(bytes);
$IsValid'$1_event_EventHandle'$4_collection_MutationEvent''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$4_token_MutationEvent''(bytes: Vec (int)): $1_event_EventHandle'$4_token_MutationEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$4_token_MutationEvent''(bytes);
$IsValid'$1_event_EventHandle'$4_token_MutationEvent''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent''(bytes: Vec (int)): $1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent''(bytes);
$IsValid'$1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_Account'(bytes: Vec (int)): $1_account_Account;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_Account'(bytes);
$IsValid'$1_account_Account'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes: Vec (int)): $1_account_CapabilityOffer'$1_account_RotationCapability';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes);
$IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes: Vec (int)): $1_account_CapabilityOffer'$1_account_SignerCapability';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes);
$IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_SignerCapability'(bytes: Vec (int)): $1_account_SignerCapability;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_SignerCapability'(bytes);
$IsValid'$1_account_SignerCapability'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aggregator_Aggregator'(bytes: Vec (int)): $1_aggregator_Aggregator;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aggregator_Aggregator'(bytes);
$IsValid'$1_aggregator_Aggregator'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(bytes: Vec (int)): $1_aggregator_v2_Aggregator'u64';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(bytes);
$IsValid'$1_aggregator_v2_Aggregator'u64''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aggregator_v2_AggregatorSnapshot'u64''(bytes: Vec (int)): $1_aggregator_v2_AggregatorSnapshot'u64';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aggregator_v2_AggregatorSnapshot'u64''(bytes);
$IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aggregator_v2_AggregatorSnapshot'$1_string_String''(bytes: Vec (int)): $1_aggregator_v2_AggregatorSnapshot'$1_string_String';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aggregator_v2_AggregatorSnapshot'$1_string_String''(bytes);
$IsValid'$1_aggregator_v2_AggregatorSnapshot'$1_string_String''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(bytes: Vec (int)): $1_optional_aggregator_Integer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(bytes);
$IsValid'$1_optional_aggregator_Integer'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(bytes: Vec (int)): $1_optional_aggregator_OptionalAggregator;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(bytes);
$IsValid'$1_optional_aggregator_OptionalAggregator'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_Coin'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_DepositEvent'(bytes: Vec (int)): $1_coin_DepositEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_DepositEvent'(bytes);
$IsValid'$1_coin_DepositEvent'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(bytes: Vec (int)): $1_coin_WithdrawEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(bytes);
$IsValid'$1_coin_WithdrawEvent'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(bytes: Vec (int)): $1_aptos_coin_AptosCoin;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(bytes);
$IsValid'$1_aptos_coin_AptosCoin'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(bytes: Vec (int)): $1_chain_status_GenesisEndMarker;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(bytes);
$IsValid'$1_chain_status_GenesisEndMarker'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(bytes: Vec (int)): $1_timestamp_CurrentTimeMicroseconds;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(bytes);
$IsValid'$1_timestamp_CurrentTimeMicroseconds'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(bytes: Vec (int)): $1_reconfiguration_Configuration;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(bytes);
$IsValid'$1_reconfiguration_Configuration'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_ConstructorRef'(bytes: Vec (int)): $1_object_ConstructorRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_ConstructorRef'(bytes);
$IsValid'$1_object_ConstructorRef'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_ExtendRef'(bytes: Vec (int)): $1_object_ExtendRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_ExtendRef'(bytes);
$IsValid'$1_object_ExtendRef'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Object'$4_collection_Collection''(bytes: Vec (int)): $1_object_Object'$4_collection_Collection';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Object'$4_collection_Collection''(bytes);
$IsValid'$1_object_Object'$4_collection_Collection''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Object'$4_token_Token''(bytes: Vec (int)): $1_object_Object'$4_token_Token';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Object'$4_token_Token''(bytes);
$IsValid'$1_object_Object'$4_token_Token''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Object'$4_aptos_token_AptosCollection''(bytes: Vec (int)): $1_object_Object'$4_aptos_token_AptosCollection';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Object'$4_aptos_token_AptosCollection''(bytes);
$IsValid'$1_object_Object'$4_aptos_token_AptosCollection''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_ObjectCore'(bytes: Vec (int)): $1_object_ObjectCore;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_ObjectCore'(bytes);
$IsValid'$1_object_ObjectCore'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TransferEvent'(bytes: Vec (int)): $1_object_TransferEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TransferEvent'(bytes);
$IsValid'$1_object_TransferEvent'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TransferRef'(bytes: Vec (int)): $1_object_TransferRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TransferRef'(bytes);
$IsValid'$1_object_TransferRef'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_royalty_MutatorRef'(bytes: Vec (int)): $4_royalty_MutatorRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_royalty_MutatorRef'(bytes);
$IsValid'$4_royalty_MutatorRef'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_royalty_Royalty'(bytes: Vec (int)): $4_royalty_Royalty;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_royalty_Royalty'(bytes);
$IsValid'$4_royalty_Royalty'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_collection_ConcurrentSupply'(bytes: Vec (int)): $4_collection_ConcurrentSupply;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_collection_ConcurrentSupply'(bytes);
$IsValid'$4_collection_ConcurrentSupply'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_collection_MutatorRef'(bytes: Vec (int)): $4_collection_MutatorRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_collection_MutatorRef'(bytes);
$IsValid'$4_collection_MutatorRef'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_collection_Collection'(bytes: Vec (int)): $4_collection_Collection;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_collection_Collection'(bytes);
$IsValid'$4_collection_Collection'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_collection_ConcurrentMintEvent'(bytes: Vec (int)): $4_collection_ConcurrentMintEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_collection_ConcurrentMintEvent'(bytes);
$IsValid'$4_collection_ConcurrentMintEvent'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_collection_FixedSupply'(bytes: Vec (int)): $4_collection_FixedSupply;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_collection_FixedSupply'(bytes);
$IsValid'$4_collection_FixedSupply'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_collection_MintEvent'(bytes: Vec (int)): $4_collection_MintEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_collection_MintEvent'(bytes);
$IsValid'$4_collection_MintEvent'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_collection_UnlimitedSupply'(bytes: Vec (int)): $4_collection_UnlimitedSupply;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_collection_UnlimitedSupply'(bytes);
$IsValid'$4_collection_UnlimitedSupply'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_token_ConcurrentTokenIdentifiers'(bytes: Vec (int)): $4_token_ConcurrentTokenIdentifiers;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_token_ConcurrentTokenIdentifiers'(bytes);
$IsValid'$4_token_ConcurrentTokenIdentifiers'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_token_Token'(bytes: Vec (int)): $4_token_Token;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_token_Token'(bytes);
$IsValid'$4_token_Token'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4_aptos_token_AptosCollection'(bytes: Vec (int)): $4_aptos_token_AptosCollection;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4_aptos_token_AptosCollection'(bytes);
$IsValid'$4_aptos_token_AptosCollection'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'(bytes: Vec (int)): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'(bytes);
$IsValid'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo'(bytes: Vec (int)): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo'(bytes);
$IsValid'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'#0'(bytes: Vec (int)): #0;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'#0'(bytes);
$IsValid'#0'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'bool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'bool'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u8'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u8'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u64'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u64'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u128'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u128'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u256'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u256'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'address'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'address'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'signer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'signer'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'u8''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'u8''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'address''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'address''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'vec'u8'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'vec'u8'''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_string_String''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_string_String''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_aggregator_v2_AggregatorSnapshot'u64'''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$4_royalty_MutatorRef''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$4_royalty_MutatorRef''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$4_royalty_Royalty''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$4_royalty_Royalty''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$4_collection_ConcurrentSupply''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$4_collection_ConcurrentSupply''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$4_collection_MutatorRef''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$4_collection_MutatorRef''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$4_collection_FixedSupply''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$4_collection_FixedSupply''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'address''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'address''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_string_String''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_string_String''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$4_royalty_MutatorRef''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$4_royalty_MutatorRef''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$4_royalty_Royalty''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$4_royalty_Royalty''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$4_collection_ConcurrentSupply''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$4_collection_ConcurrentSupply''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$4_collection_MutatorRef''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$4_collection_MutatorRef''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$4_collection_FixedSupply''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$4_collection_FixedSupply''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_string_String'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_string_String'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_features_Features'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_features_Features'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_type_info_TypeInfo'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_type_info_TypeInfo'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_table_Table'address_u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_table_Table'address_u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_guid_GUID'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_guid_GUID'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_guid_ID'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_guid_ID'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_BurnEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_BurnEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MintEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MintEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MutationEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$4_collection_MutationEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$4_token_MutationEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$4_token_MutationEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_Account'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_Account'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_SignerCapability'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_SignerCapability'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aggregator_Aggregator'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aggregator_Aggregator'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aggregator_v2_AggregatorSnapshot'u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aggregator_v2_AggregatorSnapshot'u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aggregator_v2_AggregatorSnapshot'$1_string_String''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aggregator_v2_AggregatorSnapshot'$1_string_String''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_optional_aggregator_Integer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_optional_aggregator_Integer'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_DepositEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_DepositEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_WithdrawEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_WithdrawEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_ConstructorRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_ConstructorRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_ExtendRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_ExtendRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Object'$4_collection_Collection''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Object'$4_collection_Collection''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Object'$4_token_Token''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Object'$4_token_Token''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Object'$4_aptos_token_AptosCollection''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Object'$4_aptos_token_AptosCollection''(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_ObjectCore'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_ObjectCore'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TransferEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TransferEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TransferRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TransferRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_royalty_MutatorRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_royalty_MutatorRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_royalty_Royalty'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_royalty_Royalty'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_collection_ConcurrentSupply'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_collection_ConcurrentSupply'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_collection_MutatorRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_collection_MutatorRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_collection_Collection'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_collection_Collection'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_collection_ConcurrentMintEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_collection_ConcurrentMintEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_collection_FixedSupply'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_collection_FixedSupply'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_collection_MintEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_collection_MintEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_collection_UnlimitedSupply'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_collection_UnlimitedSupply'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_token_ConcurrentTokenIdentifiers'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_token_ConcurrentTokenIdentifiers'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_token_Token'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_token_Token'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4_aptos_token_AptosCollection'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4_aptos_token_AptosCollection'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo'(bytes);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'#0'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'#0'(bytes);
$IsValid'bool'($$res)));

// struct event::EventHandle<account::CoinRegisterEvent> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:34:5+224
datatype $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_CoinRegisterEvent''_counter(s: $1_event_EventHandle'$1_account_CoinRegisterEvent', x: int): $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_CoinRegisterEvent''_guid(s: $1_event_EventHandle'$1_account_CoinRegisterEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s: $1_event_EventHandle'$1_account_CoinRegisterEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s1: $1_event_EventHandle'$1_account_CoinRegisterEvent', s2: $1_event_EventHandle'$1_account_CoinRegisterEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<account::KeyRotationEvent> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:34:5+224
datatype $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_KeyRotationEvent''_counter(s: $1_event_EventHandle'$1_account_KeyRotationEvent', x: int): $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_KeyRotationEvent''_guid(s: $1_event_EventHandle'$1_account_KeyRotationEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''(s: $1_event_EventHandle'$1_account_KeyRotationEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''(s1: $1_event_EventHandle'$1_account_KeyRotationEvent', s2: $1_event_EventHandle'$1_account_KeyRotationEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<coin::DepositEvent> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:34:5+224
datatype $1_event_EventHandle'$1_coin_DepositEvent' {
    $1_event_EventHandle'$1_coin_DepositEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_DepositEvent''_counter(s: $1_event_EventHandle'$1_coin_DepositEvent', x: int): $1_event_EventHandle'$1_coin_DepositEvent' {
    $1_event_EventHandle'$1_coin_DepositEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_DepositEvent''_guid(s: $1_event_EventHandle'$1_coin_DepositEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_coin_DepositEvent' {
    $1_event_EventHandle'$1_coin_DepositEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_coin_DepositEvent''(s: $1_event_EventHandle'$1_coin_DepositEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_coin_DepositEvent''(s1: $1_event_EventHandle'$1_coin_DepositEvent', s2: $1_event_EventHandle'$1_coin_DepositEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<coin::WithdrawEvent> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:34:5+224
datatype $1_event_EventHandle'$1_coin_WithdrawEvent' {
    $1_event_EventHandle'$1_coin_WithdrawEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_WithdrawEvent''_counter(s: $1_event_EventHandle'$1_coin_WithdrawEvent', x: int): $1_event_EventHandle'$1_coin_WithdrawEvent' {
    $1_event_EventHandle'$1_coin_WithdrawEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_WithdrawEvent''_guid(s: $1_event_EventHandle'$1_coin_WithdrawEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_coin_WithdrawEvent' {
    $1_event_EventHandle'$1_coin_WithdrawEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''(s: $1_event_EventHandle'$1_coin_WithdrawEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_coin_WithdrawEvent''(s1: $1_event_EventHandle'$1_coin_WithdrawEvent', s2: $1_event_EventHandle'$1_coin_WithdrawEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<reconfiguration::NewEpochEvent> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:34:5+224
datatype $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''_counter(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', x: int): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''_guid(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s1: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', s2: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<object::TransferEvent> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:34:5+224
datatype $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_object_TransferEvent''_counter(s: $1_event_EventHandle'$1_object_TransferEvent', x: int): $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_object_TransferEvent''_guid(s: $1_event_EventHandle'$1_object_TransferEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_object_TransferEvent''(s: $1_event_EventHandle'$1_object_TransferEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_object_TransferEvent''(s1: $1_event_EventHandle'$1_object_TransferEvent', s2: $1_event_EventHandle'$1_object_TransferEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<collection::BurnEvent> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:34:5+224
datatype $1_event_EventHandle'$4_collection_BurnEvent' {
    $1_event_EventHandle'$4_collection_BurnEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_BurnEvent''_counter(s: $1_event_EventHandle'$4_collection_BurnEvent', x: int): $1_event_EventHandle'$4_collection_BurnEvent' {
    $1_event_EventHandle'$4_collection_BurnEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_BurnEvent''_guid(s: $1_event_EventHandle'$4_collection_BurnEvent', x: $1_guid_GUID): $1_event_EventHandle'$4_collection_BurnEvent' {
    $1_event_EventHandle'$4_collection_BurnEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$4_collection_BurnEvent''(s: $1_event_EventHandle'$4_collection_BurnEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$4_collection_BurnEvent''(s1: $1_event_EventHandle'$4_collection_BurnEvent', s2: $1_event_EventHandle'$4_collection_BurnEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<collection::MintEvent> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:34:5+224
datatype $1_event_EventHandle'$4_collection_MintEvent' {
    $1_event_EventHandle'$4_collection_MintEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_MintEvent''_counter(s: $1_event_EventHandle'$4_collection_MintEvent', x: int): $1_event_EventHandle'$4_collection_MintEvent' {
    $1_event_EventHandle'$4_collection_MintEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_MintEvent''_guid(s: $1_event_EventHandle'$4_collection_MintEvent', x: $1_guid_GUID): $1_event_EventHandle'$4_collection_MintEvent' {
    $1_event_EventHandle'$4_collection_MintEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$4_collection_MintEvent''(s: $1_event_EventHandle'$4_collection_MintEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$4_collection_MintEvent''(s1: $1_event_EventHandle'$4_collection_MintEvent', s2: $1_event_EventHandle'$4_collection_MintEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<collection::MutationEvent> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:34:5+224
datatype $1_event_EventHandle'$4_collection_MutationEvent' {
    $1_event_EventHandle'$4_collection_MutationEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_MutationEvent''_counter(s: $1_event_EventHandle'$4_collection_MutationEvent', x: int): $1_event_EventHandle'$4_collection_MutationEvent' {
    $1_event_EventHandle'$4_collection_MutationEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$4_collection_MutationEvent''_guid(s: $1_event_EventHandle'$4_collection_MutationEvent', x: $1_guid_GUID): $1_event_EventHandle'$4_collection_MutationEvent' {
    $1_event_EventHandle'$4_collection_MutationEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$4_collection_MutationEvent''(s: $1_event_EventHandle'$4_collection_MutationEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$4_collection_MutationEvent''(s1: $1_event_EventHandle'$4_collection_MutationEvent', s2: $1_event_EventHandle'$4_collection_MutationEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<token::MutationEvent> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:34:5+224
datatype $1_event_EventHandle'$4_token_MutationEvent' {
    $1_event_EventHandle'$4_token_MutationEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$4_token_MutationEvent''_counter(s: $1_event_EventHandle'$4_token_MutationEvent', x: int): $1_event_EventHandle'$4_token_MutationEvent' {
    $1_event_EventHandle'$4_token_MutationEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$4_token_MutationEvent''_guid(s: $1_event_EventHandle'$4_token_MutationEvent', x: $1_guid_GUID): $1_event_EventHandle'$4_token_MutationEvent' {
    $1_event_EventHandle'$4_token_MutationEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$4_token_MutationEvent''(s: $1_event_EventHandle'$4_token_MutationEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$4_token_MutationEvent''(s1: $1_event_EventHandle'$4_token_MutationEvent', s2: $1_event_EventHandle'$4_token_MutationEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<machineV0::UpdateMachineEvent> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:34:5+224
datatype $1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent' {
    $1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent''_counter(s: $1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent', x: int): $1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent' {
    $1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent''_guid(s: $1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent', x: $1_guid_GUID): $1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent' {
    $1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent''(s: $1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent''(s1: $1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent', s2: $1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent'): bool {
    s1 == s2
}

// fun event::new_event_handle<account::CoinRegisterEvent> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:43:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_account_CoinRegisterEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_account_CoinRegisterEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_account_CoinRegisterEvent'': $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:43:5+1
    assume {:print "$at(122,1543,1544)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:45:22+1
    assume {:print "$at(122,1672,1673)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:44:9+68
    assume {:print "$at(122,1634,1702)"} true;
    $t2 := $1_event_EventHandle'$1_account_CoinRegisterEvent'($t1, $t0);

    // trace_return[0]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:44:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:48:5+1
    assume {:print "$at(122,1707,1708)"} true;
L1:

    // return $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:48:5+1
    assume {:print "$at(122,1707,1708)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<account::KeyRotationEvent> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:43:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_account_KeyRotationEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_account_KeyRotationEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_account_KeyRotationEvent'': $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:43:5+1
    assume {:print "$at(122,1543,1544)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:45:22+1
    assume {:print "$at(122,1672,1673)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:44:9+68
    assume {:print "$at(122,1634,1702)"} true;
    $t2 := $1_event_EventHandle'$1_account_KeyRotationEvent'($t1, $t0);

    // trace_return[0]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:44:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:48:5+1
    assume {:print "$at(122,1707,1708)"} true;
L1:

    // return $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:48:5+1
    assume {:print "$at(122,1707,1708)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<object::TransferEvent> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:43:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_object_TransferEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_object_TransferEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_object_TransferEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_object_TransferEvent'': $1_event_EventHandle'$1_object_TransferEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:43:5+1
    assume {:print "$at(122,1543,1544)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:45:22+1
    assume {:print "$at(122,1672,1673)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:44:9+68
    assume {:print "$at(122,1634,1702)"} true;
    $t2 := $1_event_EventHandle'$1_object_TransferEvent'($t1, $t0);

    // trace_return[0]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:44:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:48:5+1
    assume {:print "$at(122,1707,1708)"} true;
L1:

    // return $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:48:5+1
    assume {:print "$at(122,1707,1708)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<collection::BurnEvent> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:43:5+165
procedure {:inline 1} $1_event_new_event_handle'$4_collection_BurnEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$4_collection_BurnEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$4_collection_BurnEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$4_collection_BurnEvent'': $1_event_EventHandle'$4_collection_BurnEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:43:5+1
    assume {:print "$at(122,1543,1544)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:45:22+1
    assume {:print "$at(122,1672,1673)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:44:9+68
    assume {:print "$at(122,1634,1702)"} true;
    $t2 := $1_event_EventHandle'$4_collection_BurnEvent'($t1, $t0);

    // trace_return[0]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:44:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:48:5+1
    assume {:print "$at(122,1707,1708)"} true;
L1:

    // return $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:48:5+1
    assume {:print "$at(122,1707,1708)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<collection::MintEvent> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:43:5+165
procedure {:inline 1} $1_event_new_event_handle'$4_collection_MintEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$4_collection_MintEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$4_collection_MintEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$4_collection_MintEvent'': $1_event_EventHandle'$4_collection_MintEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:43:5+1
    assume {:print "$at(122,1543,1544)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:45:22+1
    assume {:print "$at(122,1672,1673)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:44:9+68
    assume {:print "$at(122,1634,1702)"} true;
    $t2 := $1_event_EventHandle'$4_collection_MintEvent'($t1, $t0);

    // trace_return[0]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:44:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:48:5+1
    assume {:print "$at(122,1707,1708)"} true;
L1:

    // return $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:48:5+1
    assume {:print "$at(122,1707,1708)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<collection::MutationEvent> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:43:5+165
procedure {:inline 1} $1_event_new_event_handle'$4_collection_MutationEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$4_collection_MutationEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$4_collection_MutationEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$4_collection_MutationEvent'': $1_event_EventHandle'$4_collection_MutationEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:43:5+1
    assume {:print "$at(122,1543,1544)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:45:22+1
    assume {:print "$at(122,1672,1673)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:44:9+68
    assume {:print "$at(122,1634,1702)"} true;
    $t2 := $1_event_EventHandle'$4_collection_MutationEvent'($t1, $t0);

    // trace_return[0]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:44:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:48:5+1
    assume {:print "$at(122,1707,1708)"} true;
L1:

    // return $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:48:5+1
    assume {:print "$at(122,1707,1708)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<token::MutationEvent> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:43:5+165
procedure {:inline 1} $1_event_new_event_handle'$4_token_MutationEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$4_token_MutationEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$4_token_MutationEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$4_token_MutationEvent'': $1_event_EventHandle'$4_token_MutationEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:43:5+1
    assume {:print "$at(122,1543,1544)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:45:22+1
    assume {:print "$at(122,1672,1673)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:44:9+68
    assume {:print "$at(122,1634,1702)"} true;
    $t2 := $1_event_EventHandle'$4_token_MutationEvent'($t1, $t0);

    // trace_return[0]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:44:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:48:5+1
    assume {:print "$at(122,1707,1708)"} true;
L1:

    // return $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:48:5+1
    assume {:print "$at(122,1707,1708)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<machineV0::UpdateMachineEvent> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:43:5+165
procedure {:inline 1} $1_event_new_event_handle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent'': $1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:43:5+1
    assume {:print "$at(122,1543,1544)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:45:22+1
    assume {:print "$at(122,1672,1673)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:44:9+68
    assume {:print "$at(122,1634,1702)"} true;
    $t2 := $1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent'($t1, $t0);

    // trace_return[0]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:44:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:48:5+1
    assume {:print "$at(122,1707,1708)"} true;
L1:

    // return $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\event.move:48:5+1
    assume {:print "$at(122,1707,1708)"} true;
    $ret0 := $t2;
    return;

}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:447:10+77
function  $1_account_spec_create_resource_address(source: int, seed: Vec (int)): int;
axiom (forall source: int, seed: Vec (int) ::
(var $$res := $1_account_spec_create_resource_address(source, seed);
$IsValid'address'($$res)));

// struct account::Account at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:27:5+401
datatype $1_account_Account {
    $1_account_Account($authentication_key: Vec (int), $sequence_number: int, $guid_creation_num: int, $coin_register_events: $1_event_EventHandle'$1_account_CoinRegisterEvent', $key_rotation_events: $1_event_EventHandle'$1_account_KeyRotationEvent', $rotation_capability_offer: $1_account_CapabilityOffer'$1_account_RotationCapability', $signer_capability_offer: $1_account_CapabilityOffer'$1_account_SignerCapability')
}
function {:inline} $Update'$1_account_Account'_authentication_key(s: $1_account_Account, x: Vec (int)): $1_account_Account {
    $1_account_Account(x, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_sequence_number(s: $1_account_Account, x: int): $1_account_Account {
    $1_account_Account(s->$authentication_key, x, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_guid_creation_num(s: $1_account_Account, x: int): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, x, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_coin_register_events(s: $1_account_Account, x: $1_event_EventHandle'$1_account_CoinRegisterEvent'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, x, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_key_rotation_events(s: $1_account_Account, x: $1_event_EventHandle'$1_account_KeyRotationEvent'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, x, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_rotation_capability_offer(s: $1_account_Account, x: $1_account_CapabilityOffer'$1_account_RotationCapability'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, x, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_signer_capability_offer(s: $1_account_Account, x: $1_account_CapabilityOffer'$1_account_SignerCapability'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, x)
}
function $IsValid'$1_account_Account'(s: $1_account_Account): bool {
    $IsValid'vec'u8''(s->$authentication_key)
      && $IsValid'u64'(s->$sequence_number)
      && $IsValid'u64'(s->$guid_creation_num)
      && $IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s->$coin_register_events)
      && $IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''(s->$key_rotation_events)
      && $IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''(s->$rotation_capability_offer)
      && $IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''(s->$signer_capability_offer)
}
function {:inline} $IsEqual'$1_account_Account'(s1: $1_account_Account, s2: $1_account_Account): bool {
    $IsEqual'vec'u8''(s1->$authentication_key, s2->$authentication_key)
    && $IsEqual'u64'(s1->$sequence_number, s2->$sequence_number)
    && $IsEqual'u64'(s1->$guid_creation_num, s2->$guid_creation_num)
    && $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s1->$coin_register_events, s2->$coin_register_events)
    && $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''(s1->$key_rotation_events, s2->$key_rotation_events)
    && $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''(s1->$rotation_capability_offer, s2->$rotation_capability_offer)
    && $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''(s1->$signer_capability_offer, s2->$signer_capability_offer)}
var $1_account_Account_$memory: $Memory $1_account_Account;

// struct account::CapabilityOffer<account::RotationCapability> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:46:5+68
datatype $1_account_CapabilityOffer'$1_account_RotationCapability' {
    $1_account_CapabilityOffer'$1_account_RotationCapability'($for: $1_option_Option'address')
}
function {:inline} $Update'$1_account_CapabilityOffer'$1_account_RotationCapability''_for(s: $1_account_CapabilityOffer'$1_account_RotationCapability', x: $1_option_Option'address'): $1_account_CapabilityOffer'$1_account_RotationCapability' {
    $1_account_CapabilityOffer'$1_account_RotationCapability'(x)
}
function $IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''(s: $1_account_CapabilityOffer'$1_account_RotationCapability'): bool {
    $IsValid'$1_option_Option'address''(s->$for)
}
function {:inline} $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''(s1: $1_account_CapabilityOffer'$1_account_RotationCapability', s2: $1_account_CapabilityOffer'$1_account_RotationCapability'): bool {
    $IsEqual'$1_option_Option'address''(s1->$for, s2->$for)}

// struct account::CapabilityOffer<account::SignerCapability> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:46:5+68
datatype $1_account_CapabilityOffer'$1_account_SignerCapability' {
    $1_account_CapabilityOffer'$1_account_SignerCapability'($for: $1_option_Option'address')
}
function {:inline} $Update'$1_account_CapabilityOffer'$1_account_SignerCapability''_for(s: $1_account_CapabilityOffer'$1_account_SignerCapability', x: $1_option_Option'address'): $1_account_CapabilityOffer'$1_account_SignerCapability' {
    $1_account_CapabilityOffer'$1_account_SignerCapability'(x)
}
function $IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''(s: $1_account_CapabilityOffer'$1_account_SignerCapability'): bool {
    $IsValid'$1_option_Option'address''(s->$for)
}
function {:inline} $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''(s1: $1_account_CapabilityOffer'$1_account_SignerCapability', s2: $1_account_CapabilityOffer'$1_account_SignerCapability'): bool {
    $IsEqual'$1_option_Option'address''(s1->$for, s2->$for)}

// struct account::CoinRegisterEvent at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:42:5+77
datatype $1_account_CoinRegisterEvent {
    $1_account_CoinRegisterEvent($type_info: $1_type_info_TypeInfo)
}
function {:inline} $Update'$1_account_CoinRegisterEvent'_type_info(s: $1_account_CoinRegisterEvent, x: $1_type_info_TypeInfo): $1_account_CoinRegisterEvent {
    $1_account_CoinRegisterEvent(x)
}
function $IsValid'$1_account_CoinRegisterEvent'(s: $1_account_CoinRegisterEvent): bool {
    $IsValid'$1_type_info_TypeInfo'(s->$type_info)
}
function {:inline} $IsEqual'$1_account_CoinRegisterEvent'(s1: $1_account_CoinRegisterEvent, s2: $1_account_CoinRegisterEvent): bool {
    $IsEqual'$1_type_info_TypeInfo'(s1->$type_info, s2->$type_info)}

// struct account::KeyRotationEvent at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:37:5+135
datatype $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent($old_authentication_key: Vec (int), $new_authentication_key: Vec (int))
}
function {:inline} $Update'$1_account_KeyRotationEvent'_old_authentication_key(s: $1_account_KeyRotationEvent, x: Vec (int)): $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent(x, s->$new_authentication_key)
}
function {:inline} $Update'$1_account_KeyRotationEvent'_new_authentication_key(s: $1_account_KeyRotationEvent, x: Vec (int)): $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent(s->$old_authentication_key, x)
}
function $IsValid'$1_account_KeyRotationEvent'(s: $1_account_KeyRotationEvent): bool {
    $IsValid'vec'u8''(s->$old_authentication_key)
      && $IsValid'vec'u8''(s->$new_authentication_key)
}
function {:inline} $IsEqual'$1_account_KeyRotationEvent'(s1: $1_account_KeyRotationEvent, s2: $1_account_KeyRotationEvent): bool {
    $IsEqual'vec'u8''(s1->$old_authentication_key, s2->$old_authentication_key)
    && $IsEqual'vec'u8''(s1->$new_authentication_key, s2->$new_authentication_key)}

// struct account::RotationCapability at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:48:5+62
datatype $1_account_RotationCapability {
    $1_account_RotationCapability($account: int)
}
function {:inline} $Update'$1_account_RotationCapability'_account(s: $1_account_RotationCapability, x: int): $1_account_RotationCapability {
    $1_account_RotationCapability(x)
}
function $IsValid'$1_account_RotationCapability'(s: $1_account_RotationCapability): bool {
    $IsValid'address'(s->$account)
}
function {:inline} $IsEqual'$1_account_RotationCapability'(s1: $1_account_RotationCapability, s2: $1_account_RotationCapability): bool {
    s1 == s2
}

// struct account::SignerCapability at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:50:5+60
datatype $1_account_SignerCapability {
    $1_account_SignerCapability($account: int)
}
function {:inline} $Update'$1_account_SignerCapability'_account(s: $1_account_SignerCapability, x: int): $1_account_SignerCapability {
    $1_account_SignerCapability(x)
}
function $IsValid'$1_account_SignerCapability'(s: $1_account_SignerCapability): bool {
    $IsValid'address'(s->$account)
}
function {:inline} $IsEqual'$1_account_SignerCapability'(s1: $1_account_SignerCapability, s2: $1_account_SignerCapability): bool {
    s1 == s2
}

// fun account::new_event_handle<machineV0::UpdateMachineEvent> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:697:5+157
procedure {:inline 1} $1_account_new_event_handle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent'': $1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:504:9+39
    assume {:print "$at(83,24284,24323)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<account::Account>($t1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:505:9+36
    assume {:print "$at(83,24332,24368)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:697:5+1
    assume {:print "$at(82,39402,39403)"} true;
    assume {:print "$track_local(18,21,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:489:9+46
    assume {:print "$at(83,23683,23729)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:504:9+39
    assume {:print "$at(83,24284,24323)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<account::Account>($t4)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:505:9+36
    assume {:print "$at(83,24332,24368)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:698:33+20
    assume {:print "$at(82,39532,39552)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(82,39532,39552)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,21):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:698:9+45
    call $t8 := $1_event_new_event_handle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(82,39508,39553)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,21):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:698:9+45
    assume {:print "$track_return(18,21,0):", $t8} $t8 == $t8;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:699:5+1
    assume {:print "$at(82,39558,39559)"} true;
L1:

    // return $t8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:699:5+1
    assume {:print "$at(82,39558,39559)"} true;
    $ret0 := $t8;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:699:5+1
L2:

    // abort($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:699:5+1
    assume {:print "$at(82,39558,39559)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::create_account_unchecked [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:198:5+1182
procedure {:inline 1} $1_account_create_account_unchecked(_$t0: int) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: Vec (int);
    var $t2: $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $t3: int;
    var $t4: $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $t5: $signer;
    var $t6: Vec (int);
    var $t7: $signer;
    var $t8: Vec (int);
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: $Mutation (int);
    var $t17: $1_guid_GUID;
    var $t18: $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $t19: $Mutation (int);
    var $t20: $1_guid_GUID;
    var $t21: $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $t22: int;
    var $t23: int;
    var $t24: $1_option_Option'address';
    var $t25: $1_account_CapabilityOffer'$1_account_RotationCapability';
    var $t26: $1_option_Option'address';
    var $t27: $1_account_CapabilityOffer'$1_account_SignerCapability';
    var $t28: $1_account_Account;
    var $t0: int;
    var $temp_0'$1_event_EventHandle'$1_account_CoinRegisterEvent'': $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $temp_0'$1_event_EventHandle'$1_account_KeyRotationEvent'': $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t6, bcs::$to_bytes<address>($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:54:9+45
    assume {:print "$at(83,2155,2200)"} true;
    assume ($t6 == $1_bcs_$to_bytes'address'($t0));

    // trace_local[new_address]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:198:5+1
    assume {:print "$at(82,10394,10395)"} true;
    assume {:print "$track_local(18,3,0):", $t0} $t0 == $t0;

    // $t7 := opaque begin: create_signer::create_signer($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:199:27+26
    assume {:print "$at(82,10481,10507)"} true;

    // assume WellFormed($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:199:27+26
    assume $IsValid'signer'($t7) && $1_signer_is_txn_signer($t7) && $1_signer_is_txn_signer_addr($t7->$addr);

    // assume Eq<address>(signer::$address_of($t7), $t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:199:27+26
    assume $IsEqual'address'($1_signer_$address_of($t7), $t0);

    // $t7 := opaque end: create_signer::create_signer($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:199:27+26

    // trace_local[new_account]($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:199:13+11
    assume {:print "$track_local(18,3,5):", $t7} $t7 == $t7;

    // $t8 := bcs::to_bytes<address>($t0) on_abort goto L4 with $t9 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:200:34+27
    assume {:print "$at(82,10542,10569)"} true;
    call $t8 := $1_bcs_to_bytes'address'($t0);
    if ($abort_flag) {
        assume {:print "$at(82,10542,10569)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_local[authentication_key]($t8) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:200:13+18
    assume {:print "$track_local(18,3,1):", $t8} $t8 == $t8;

    // $t10 := vector::length<u8>($t8) on_abort goto L4 with $t9 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:202:13+35
    assume {:print "$at(82,10600,10635)"} true;
    call $t10 := $1_vector_length'u8'($t8);
    if ($abort_flag) {
        assume {:print "$at(82,10600,10635)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // $t11 := 32 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:202:52+2
    $t11 := 32;
    assume $IsValid'u64'($t11);

    // $t12 := ==($t10, $t11) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:202:49+2
    $t12 := $IsEqual'u64'($t10, $t11);

    // if ($t12) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:201:9+140
    assume {:print "$at(82,10579,10719)"} true;
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:201:9+140
L1:

    // goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:201:9+140
    assume {:print "$at(82,10579,10719)"} true;
    goto L2;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:203:37+29
    assume {:print "$at(82,10679,10708)"} true;
L0:

    // $t13 := 4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:203:37+29
    assume {:print "$at(82,10679,10708)"} true;
    $t13 := 4;
    assume $IsValid'u64'($t13);

    // $t14 := error::invalid_argument($t13) on_abort goto L4 with $t9 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:203:13+54
    call $t14 := $1_error_invalid_argument($t13);
    if ($abort_flag) {
        assume {:print "$at(82,10655,10709)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_abort($t14) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:201:9+140
    assume {:print "$at(82,10579,10719)"} true;
    assume {:print "$track_abort(18,3):", $t14} $t14 == $t14;

    // $t9 := move($t14) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:201:9+140
    $t9 := $t14;

    // goto L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:201:9+140
    goto L4;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:206:33+1
    assume {:print "$at(82,10754,10755)"} true;
L2:

    // $t15 := 0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:206:33+1
    assume {:print "$at(82,10754,10755)"} true;
    $t15 := 0;
    assume $IsValid'u64'($t15);

    // $t3 := $t15 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:206:13+17
    $t3 := $t15;

    // trace_local[guid_creation_num]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:206:13+17
    assume {:print "$track_local(18,3,3):", $t3} $t3 == $t3;

    // $t16 := borrow_local($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:208:55+22
    assume {:print "$at(82,10812,10834)"} true;
    $t16 := $Mutation($Local(3), EmptyVec(), $t3);

    // $t17 := guid::create($t0, $t16) on_abort goto L4 with $t9 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:208:29+49
    call $t17,$t16 := $1_guid_create($t0, $t16);
    if ($abort_flag) {
        assume {:print "$at(82,10786,10835)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // write_back[LocalRoot($t3)@]($t16) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:208:29+49
    $t3 := $Dereference($t16);

    // trace_local[guid_creation_num]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:208:29+49
    assume {:print "$track_local(18,3,3):", $t3} $t3 == $t3;

    // $t18 := event::new_event_handle<account::CoinRegisterEvent>($t17) on_abort goto L4 with $t9 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:209:36+57
    assume {:print "$at(82,10872,10929)"} true;
    call $t18 := $1_event_new_event_handle'$1_account_CoinRegisterEvent'($t17);
    if ($abort_flag) {
        assume {:print "$at(82,10872,10929)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_local[coin_register_events]($t18) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:209:13+20
    assume {:print "$track_local(18,3,2):", $t18} $t18 == $t18;

    // $t19 := borrow_local($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:211:59+22
    assume {:print "$at(82,10990,11012)"} true;
    $t19 := $Mutation($Local(3), EmptyVec(), $t3);

    // $t20 := guid::create($t0, $t19) on_abort goto L4 with $t9 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:211:33+49
    call $t20,$t19 := $1_guid_create($t0, $t19);
    if ($abort_flag) {
        assume {:print "$at(82,10964,11013)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // write_back[LocalRoot($t3)@]($t19) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:211:33+49
    $t3 := $Dereference($t19);

    // trace_local[guid_creation_num]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:211:33+49
    assume {:print "$track_local(18,3,3):", $t3} $t3 == $t3;

    // $t21 := event::new_event_handle<account::KeyRotationEvent>($t20) on_abort goto L4 with $t9 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:212:35+60
    assume {:print "$at(82,11049,11109)"} true;
    call $t21 := $1_event_new_event_handle'$1_account_KeyRotationEvent'($t20);
    if ($abort_flag) {
        assume {:print "$at(82,11049,11109)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_local[key_rotation_events]($t21) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:212:13+19
    assume {:print "$track_local(18,3,4):", $t21} $t21 == $t21;

    // $t22 := 0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:218:34+1
    assume {:print "$at(82,11246,11247)"} true;
    $t22 := 0;
    assume $IsValid'u64'($t22);

    // $t23 := move($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:219:17+17
    assume {:print "$at(82,11265,11282)"} true;
    $t23 := $t3;

    // $t24 := opaque begin: option::none<address>() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:222:67+14
    assume {:print "$at(82,11425,11439)"} true;

    // assume And(WellFormed($t24), Le(Len<address>(select option::Option.vec($t24)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:222:67+14
    assume ($IsValid'$1_option_Option'address''($t24) && (LenVec($t24->$vec) <= 1));

    // assume Eq<option::Option<address>>($t24, option::spec_none<address>()) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:222:67+14
    assume $IsEqual'$1_option_Option'address''($t24, $1_option_spec_none'address'());

    // $t24 := opaque end: option::none<address>() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:222:67+14

    // $t25 := pack account::CapabilityOffer<account::RotationCapability>($t24) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:222:44+39
    $t25 := $1_account_CapabilityOffer'$1_account_RotationCapability'($t24);

    // $t26 := opaque begin: option::none<address>() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:223:65+14
    assume {:print "$at(82,11507,11521)"} true;

    // assume And(WellFormed($t26), Le(Len<address>(select option::Option.vec($t26)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:223:65+14
    assume ($IsValid'$1_option_Option'address''($t26) && (LenVec($t26->$vec) <= 1));

    // assume Eq<option::Option<address>>($t26, option::spec_none<address>()) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:223:65+14
    assume $IsEqual'$1_option_Option'address''($t26, $1_option_spec_none'address'());

    // $t26 := opaque end: option::none<address>() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:223:65+14

    // $t27 := pack account::CapabilityOffer<account::SignerCapability>($t26) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:223:42+39
    $t27 := $1_account_CapabilityOffer'$1_account_SignerCapability'($t26);

    // $t28 := pack account::Account($t8, $t22, $t23, $t18, $t21, $t25, $t27) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:216:13+371
    assume {:print "$at(82,11167,11538)"} true;
    $t28 := $1_account_Account($t8, $t22, $t23, $t18, $t21, $t25, $t27);

    // move_to<account::Account>($t28, $t7) on_abort goto L4 with $t9 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:214:9+7
    assume {:print "$at(82,11120,11127)"} true;
    if ($ResourceExists($1_account_Account_$memory, $t7->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $t7->$addr, $t28);
    }
    if ($abort_flag) {
        assume {:print "$at(82,11120,11127)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_return[0]($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:227:9+11
    assume {:print "$at(82,11559,11570)"} true;
    assume {:print "$track_return(18,3,0):", $t7} $t7 == $t7;

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:228:5+1
    assume {:print "$at(82,11575,11576)"} true;
L3:

    // return $t7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:228:5+1
    assume {:print "$at(82,11575,11576)"} true;
    $ret0 := $t7;
    return;

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:228:5+1
L4:

    // abort($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:228:5+1
    assume {:print "$at(82,11575,11576)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun account::create_guid [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:682:5+436
procedure {:inline 1} $1_account_create_guid(_$t0: $signer) returns ($ret0: $1_guid_GUID)
{
    // declare local variables
    var $t1: $Mutation ($1_account_Account);
    var $t2: int;
    var $t3: $1_guid_GUID;
    var $t4: int;
    var $t5: int;
    var $t6: $1_account_Account;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation ($1_account_Account);
    var $t10: $Mutation (int);
    var $t11: $1_guid_GUID;
    var $t12: int;
    var $t13: int;
    var $t14: bool;
    var $t15: int;
    var $t16: int;
    var $t0: $signer;
    var $1_account_Account_$modifies: [int]bool;
    var $temp_0'$1_account_Account': $1_account_Account;
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:489:9+46
    assume {:print "$at(83,23683,23729)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, signer::$address_of($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:504:9+39
    assume {:print "$at(83,24284,24323)"} true;
    assume ($t5 == $1_signer_$address_of($t0));

    // assume Identical($t6, global<account::Account>($t5)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:505:9+36
    assume {:print "$at(83,24332,24368)"} true;
    assume ($t6 == $ResourceValue($1_account_Account_$memory, $t5));

    // trace_local[account_signer]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:682:5+1
    assume {:print "$at(82,38766,38767)"} true;
    assume {:print "$track_local(18,6,0):", $t0} $t0 == $t0;

    // $t7 := signer::address_of($t0) on_abort goto L4 with $t8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:683:20+34
    assume {:print "$at(82,38864,38898)"} true;
    call $t7 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(82,38864,38898)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,6):", $t8} $t8 == $t8;
        goto L4;
    }

    // trace_local[addr]($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:683:13+4
    assume {:print "$track_local(18,6,2):", $t7} $t7 == $t7;

    // $t9 := borrow_global<account::Account>($t7) on_abort goto L4 with $t8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:684:23+17
    assume {:print "$at(82,38922,38939)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t7)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t7), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t7));
    }
    if ($abort_flag) {
        assume {:print "$at(82,38922,38939)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,6):", $t8} $t8 == $t8;
        goto L4;
    }

    // trace_local[account]($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:684:13+7
    $temp_0'$1_account_Account' := $Dereference($t9);
    assume {:print "$track_local(18,6,1):", $temp_0'$1_account_Account'} $temp_0'$1_account_Account' == $temp_0'$1_account_Account';

    // $t10 := borrow_field<account::Account>.guid_creation_num($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:685:39+30
    assume {:print "$at(82,38994,39024)"} true;
    $t10 := $ChildMutation($t9, 2, $Dereference($t9)->$guid_creation_num);

    // $t11 := guid::create($t7, $t10) on_abort goto L4 with $t8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:685:20+50
    call $t11,$t10 := $1_guid_create($t7, $t10);
    if ($abort_flag) {
        assume {:print "$at(82,38975,39025)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,6):", $t8} $t8 == $t8;
        goto L4;
    }

    // write_back[Reference($t9).guid_creation_num (u64)]($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:685:20+50
    $t9 := $UpdateMutation($t9, $Update'$1_account_Account'_guid_creation_num($Dereference($t9), $Dereference($t10)));

    // trace_local[guid]($t11) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:685:13+4
    assume {:print "$track_local(18,6,3):", $t11} $t11 == $t11;

    // $t12 := get_field<account::Account>.guid_creation_num($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:687:13+25
    assume {:print "$at(82,39056,39081)"} true;
    $t12 := $Dereference($t9)->$guid_creation_num;

    // pack_ref_deep($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:687:13+25

    // write_back[account::Account@]($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:687:13+25
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // $t13 := 1125899906842624 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:687:41+21
    $t13 := 1125899906842624;
    assume $IsValid'u64'($t13);

    // $t14 := <($t12, $t13) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:687:39+1
    call $t14 := $Lt($t12, $t13);

    // if ($t14) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:686:9+147
    assume {:print "$at(82,39035,39182)"} true;
    if ($t14) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:686:9+147
L1:

    // goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:686:9+147
    assume {:print "$at(82,39035,39182)"} true;
    goto L2;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:688:33+31
    assume {:print "$at(82,39139,39170)"} true;
L0:

    // $t15 := 20 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:688:33+31
    assume {:print "$at(82,39139,39170)"} true;
    $t15 := 20;
    assume $IsValid'u64'($t15);

    // $t16 := error::out_of_range($t15) on_abort goto L4 with $t8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:688:13+52
    call $t16 := $1_error_out_of_range($t15);
    if ($abort_flag) {
        assume {:print "$at(82,39119,39171)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,6):", $t8} $t8 == $t8;
        goto L4;
    }

    // trace_abort($t16) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:686:9+147
    assume {:print "$at(82,39035,39182)"} true;
    assume {:print "$track_abort(18,6):", $t16} $t16 == $t16;

    // $t8 := move($t16) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:686:9+147
    $t8 := $t16;

    // goto L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:686:9+147
    goto L4;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:690:9+4
    assume {:print "$at(82,39192,39196)"} true;
L2:

    // trace_return[0]($t11) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:690:9+4
    assume {:print "$at(82,39192,39196)"} true;
    assume {:print "$track_return(18,6,0):", $t11} $t11 == $t11;

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:691:5+1
    assume {:print "$at(82,39201,39202)"} true;
L3:

    // return $t11 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:691:5+1
    assume {:print "$at(82,39201,39202)"} true;
    $ret0 := $t11;
    return;

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:691:5+1
L4:

    // abort($t8) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:691:5+1
    assume {:print "$at(82,39201,39202)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun account::create_resource_account [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:630:5+1378
procedure {:inline 1} $1_account_create_resource_account(_$t0: $signer, _$t1: Vec (int)) returns ($ret0: $signer, $ret1: $1_account_SignerCapability)
{
    // declare local variables
    var $t2: int;
    var $t3: $signer;
    var $t4: $1_account_Account;
    var $t5: $Mutation ($1_account_Account);
    var $t6: $signer;
    var $t7: int;
    var $t8: $1_account_SignerCapability;
    var $t9: int;
    var $t10: int;
    var $t11: $1_account_Account;
    var $t12: Vec (int);
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: bool;
    var $t17: $1_account_Account;
    var $t18: $1_account_CapabilityOffer'$1_account_SignerCapability';
    var $t19: $1_option_Option'address';
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: bool;
    var $t26: int;
    var $t27: int;
    var $t28: Vec (int);
    var $t29: Vec (int);
    var $t30: int;
    var $t31: $Mutation ($1_account_Account);
    var $t32: $1_option_Option'address';
    var $t33: $Mutation ($1_account_CapabilityOffer'$1_account_SignerCapability');
    var $t34: $Mutation ($1_option_Option'address');
    var $t35: $1_account_SignerCapability;
    var $t0: $signer;
    var $t1: Vec (int);
    var $temp_0'$1_account_Account': $1_account_Account;
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t9, signer::$address_of($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:450:9+45
    assume {:print "$at(83,22000,22045)"} true;
    assume ($t9 == $1_signer_$address_of($t0));

    // assume Identical($t10, account::spec_create_resource_address($t9, $t1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:451:9+68
    assume {:print "$at(83,22054,22122)"} true;
    assume ($t10 == $1_account_spec_create_resource_address($t9, $t1));

    // assume Identical($t11, global<account::Account>($t10)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:524:9+45
    assume {:print "$at(83,25038,25083)"} true;
    assume ($t11 == $ResourceValue($1_account_Account_$memory, $t10));

    // assume Identical($t12, bcs::$to_bytes<address>($t10)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:54:9+45
    assume {:print "$at(83,2155,2200)"} true;
    assume ($t12 == $1_bcs_$to_bytes'address'($t10));

    // trace_local[source]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:630:5+1
    assume {:print "$at(82,36461,36462)"} true;
    assume {:print "$track_local(18,7,0):", $t0} $t0 == $t0;

    // trace_local[seed]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:630:5+1
    assume {:print "$track_local(18,7,1):", $t1} $t1 == $t1;

    // $t13 := signer::address_of($t0) on_abort goto L10 with $t14 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:631:54+26
    assume {:print "$at(82,36631,36657)"} true;
    call $t13 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(82,36631,36657)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // $t15 := opaque begin: account::create_resource_address($t13, $t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:631:29+58

    // assume WellFormed($t15) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:631:29+58
    assume $IsValid'address'($t15);

    // assume Eq<address>($t15, account::spec_create_resource_address($t13, $t1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:631:29+58
    assume $IsEqual'address'($t15, $1_account_spec_create_resource_address($t13, $t1));

    // $t15 := opaque end: account::create_resource_address($t13, $t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:631:29+58

    // trace_local[resource_addr]($t15) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:631:13+13
    assume {:print "$track_local(18,7,7):", $t15} $t15 == $t15;

    // $t16 := account::exists_at($t15) on_abort goto L10 with $t14 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:632:28+24
    assume {:print "$at(82,36693,36717)"} true;
    call $t16 := $1_account_exists_at($t15);
    if ($abort_flag) {
        assume {:print "$at(82,36693,36717)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // if ($t16) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:632:24+532
    if ($t16) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:633:50+13
    assume {:print "$at(82,36770,36783)"} true;
L1:

    // $t17 := get_global<account::Account>($t15) on_abort goto L10 with $t14 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:633:27+13
    assume {:print "$at(82,36747,36760)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t15)) {
        call $ExecFailureAbort();
    } else {
        $t17 := $ResourceValue($1_account_Account_$memory, $t15);
    }
    if ($abort_flag) {
        assume {:print "$at(82,36747,36760)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // trace_local[account]($t17) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:633:17+7
    assume {:print "$track_local(18,7,4):", $t17} $t17 == $t17;

    // $t18 := get_field<account::Account>.signer_capability_offer($t17) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:635:34+31
    assume {:print "$at(82,36840,36871)"} true;
    $t18 := $t17->$signer_capability_offer;

    // $t19 := get_field<account::CapabilityOffer<account::SignerCapability>>.for($t18) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:635:33+36
    $t19 := $t18->$for;

    // $t20 := opaque begin: option::is_none<address>($t19) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:635:17+53

    // assume WellFormed($t20) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:635:17+53
    assume $IsValid'bool'($t20);

    // assume Eq<bool>($t20, option::spec_is_none<address>($t19)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:635:17+53
    assume $IsEqual'bool'($t20, $1_option_spec_is_none'address'($t19));

    // $t20 := opaque end: option::is_none<address>($t19) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:635:17+53

    // if ($t20) goto L3 else goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:634:13+159
    assume {:print "$at(82,36798,36957)"} true;
    if ($t20) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:634:13+159
L3:

    // goto L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:634:13+159
    assume {:print "$at(82,36798,36957)"} true;
    goto L4;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:634:13+159
L2:

    // $t21 := 15 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:636:39+25
    assume {:print "$at(82,36916,36941)"} true;
    $t21 := 15;
    assume $IsValid'u64'($t21);

    // $t22 := error::already_exists($t21) on_abort goto L10 with $t14 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:636:17+48
    call $t22 := $1_error_already_exists($t21);
    if ($abort_flag) {
        assume {:print "$at(82,36894,36942)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // trace_abort($t22) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:634:13+159
    assume {:print "$at(82,36798,36957)"} true;
    assume {:print "$track_abort(18,7):", $t22} $t22 == $t22;

    // $t14 := move($t22) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:634:13+159
    $t14 := $t22;

    // goto L10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:634:13+159
    goto L10;

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:639:17+7
    assume {:print "$at(82,36996,37003)"} true;
L4:

    // $t23 := get_field<account::Account>.sequence_number($t17) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:639:17+23
    assume {:print "$at(82,36996,37019)"} true;
    $t23 := $t17->$sequence_number;

    // $t24 := 0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:639:44+1
    $t24 := 0;
    assume $IsValid'u64'($t24);

    // $t25 := ==($t23, $t24) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:639:41+2
    $t25 := $IsEqual'u64'($t23, $t24);

    // if ($t25) goto L6 else goto L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:638:13+129
    assume {:print "$at(82,36971,37100)"} true;
    if ($t25) { goto L6; } else { goto L5; }

    // label L6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:638:13+129
L6:

    // goto L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:638:13+129
    assume {:print "$at(82,36971,37100)"} true;
    goto L7;

    // label L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:640:38+21
    assume {:print "$at(82,37063,37084)"} true;
L5:

    // $t26 := 16 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:640:38+21
    assume {:print "$at(82,37063,37084)"} true;
    $t26 := 16;
    assume $IsValid'u64'($t26);

    // $t27 := error::invalid_state($t26) on_abort goto L10 with $t14 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:640:17+43
    call $t27 := $1_error_invalid_state($t26);
    if ($abort_flag) {
        assume {:print "$at(82,37042,37085)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // trace_abort($t27) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:638:13+129
    assume {:print "$at(82,36971,37100)"} true;
    assume {:print "$track_abort(18,7):", $t27} $t27 == $t27;

    // $t14 := move($t27) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:638:13+129
    $t14 := $t27;

    // goto L10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:638:13+129
    goto L10;

    // label L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:642:27+13
    assume {:print "$at(82,37128,37141)"} true;
L7:

    // $t3 := opaque begin: create_signer::create_signer($t15) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:642:13+28
    assume {:print "$at(82,37114,37142)"} true;

    // assume WellFormed($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:642:13+28
    assume $IsValid'signer'($t3) && $1_signer_is_txn_signer($t3) && $1_signer_is_txn_signer_addr($t3->$addr);

    // assume Eq<address>(signer::$address_of($t3), $t15) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:642:13+28
    assume $IsEqual'address'($1_signer_$address_of($t3), $t15);

    // $t3 := opaque end: create_signer::create_signer($t15) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:642:13+28

    // goto L8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:632:24+532
    assume {:print "$at(82,36689,37221)"} true;
    goto L8;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:644:38+13
    assume {:print "$at(82,37197,37210)"} true;
L0:

    // assume Identical($t28, bcs::$to_bytes<address>($t15)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:54:9+45
    assume {:print "$at(83,2155,2200)"} true;
    assume ($t28 == $1_bcs_$to_bytes'address'($t15));

    // $t3 := account::create_account_unchecked($t15) on_abort goto L10 with $t14 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:644:13+39
    assume {:print "$at(82,37172,37211)"} true;
    call $t3 := $1_account_create_account_unchecked($t15);
    if ($abort_flag) {
        assume {:print "$at(82,37172,37211)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // label L8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:632:24+532
    assume {:print "$at(82,36689,37221)"} true;
L8:

    // trace_local[resource]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:632:13+8
    assume {:print "$at(82,36678,36686)"} true;
    assume {:print "$track_local(18,7,6):", $t3} $t3 == $t3;

    // $t29 := [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:650:55+13
    assume {:print "$at(82,37576,37589)"} true;
    $t29 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(0, 0, 0, 0), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0));
    assume $IsValid'vec'u8''($t29);

    // assume Identical($t30, signer::$address_of($t3)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:89:9+39
    assume {:print "$at(83,3568,3607)"} true;
    assume ($t30 == $1_signer_$address_of($t3));

    // account::rotate_authentication_key_internal($t3, $t29) on_abort goto L10 with $t14 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:650:9+60
    assume {:print "$at(82,37530,37590)"} true;
    call $1_account_rotate_authentication_key_internal($t3, $t29);
    if ($abort_flag) {
        assume {:print "$at(82,37530,37590)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // $t31 := borrow_global<account::Account>($t15) on_abort goto L10 with $t14 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:652:23+17
    assume {:print "$at(82,37615,37632)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t15)) {
        call $ExecFailureAbort();
    } else {
        $t31 := $Mutation($Global($t15), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t15));
    }
    if ($abort_flag) {
        assume {:print "$at(82,37615,37632)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // trace_local[account#3]($t31) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:652:13+7
    $temp_0'$1_account_Account' := $Dereference($t31);
    assume {:print "$track_local(18,7,5):", $temp_0'$1_account_Account'} $temp_0'$1_account_Account' == $temp_0'$1_account_Account';

    // $t32 := opaque begin: option::some<address>($t15) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:653:47+27
    assume {:print "$at(82,37704,37731)"} true;

    // assume And(WellFormed($t32), Le(Len<address>(select option::Option.vec($t32)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:653:47+27
    assume ($IsValid'$1_option_Option'address''($t32) && (LenVec($t32->$vec) <= 1));

    // assume Eq<option::Option<address>>($t32, option::spec_some<address>($t15)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:653:47+27
    assume $IsEqual'$1_option_Option'address''($t32, $1_option_spec_some'address'($t15));

    // $t32 := opaque end: option::some<address>($t15) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:653:47+27

    // $t33 := borrow_field<account::Account>.signer_capability_offer($t31) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:653:9+31
    $t33 := $ChildMutation($t31, 6, $Dereference($t31)->$signer_capability_offer);

    // $t34 := borrow_field<account::CapabilityOffer<account::SignerCapability>>.for($t33) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:653:9+35
    $t34 := $ChildMutation($t33, 0, $Dereference($t33)->$for);

    // write_ref($t34, $t32) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:653:9+65
    $t34 := $UpdateMutation($t34, $t32);

    // write_back[Reference($t33).for (option::Option<address>)]($t34) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:653:9+65
    $t33 := $UpdateMutation($t33, $Update'$1_account_CapabilityOffer'$1_account_SignerCapability''_for($Dereference($t33), $Dereference($t34)));

    // write_back[Reference($t31).signer_capability_offer (account::CapabilityOffer<account::SignerCapability>)]($t33) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:653:9+65
    $t31 := $UpdateMutation($t31, $Update'$1_account_Account'_signer_capability_offer($Dereference($t31), $Dereference($t33)));

    // pack_ref_deep($t31) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:653:9+65

    // write_back[account::Account@]($t31) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:653:9+65
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t31),
        $Dereference($t31));

    // $t35 := pack account::SignerCapability($t15) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:654:26+43
    assume {:print "$at(82,37758,37801)"} true;
    $t35 := $1_account_SignerCapability($t15);

    // trace_local[signer_cap]($t35) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:654:13+10
    assume {:print "$track_local(18,7,8):", $t35} $t35 == $t35;

    // trace_return[0]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:655:9+22
    assume {:print "$at(82,37811,37833)"} true;
    assume {:print "$track_return(18,7,0):", $t3} $t3 == $t3;

    // trace_return[1]($t35) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:655:9+22
    assume {:print "$track_return(18,7,1):", $t35} $t35 == $t35;

    // label L9 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:656:5+1
    assume {:print "$at(82,37838,37839)"} true;
L9:

    // return ($t3, $t35) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:656:5+1
    assume {:print "$at(82,37838,37839)"} true;
    $ret0 := $t3;
    $ret1 := $t35;
    return;

    // label L10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:656:5+1
L10:

    // abort($t14) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:656:5+1
    assume {:print "$at(82,37838,37839)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

}

// fun account::create_signer_with_capability [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:735:5+156
procedure {:inline 1} $1_account_create_signer_with_capability(_$t0: $1_account_SignerCapability) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: $signer;
    var $t0: $1_account_SignerCapability;
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, select account::SignerCapability.account($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:518:9+30
    assume {:print "$at(83,24860,24890)"} true;
    assume ($t1 == $t0->$account);

    // trace_local[capability]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:735:5+1
    assume {:print "$at(82,41007,41008)"} true;
    assume {:print "$track_local(18,9,0):", $t0} $t0 == $t0;

    // $t2 := get_field<account::SignerCapability>.account($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:736:20+19
    assume {:print "$at(82,41108,41127)"} true;
    $t2 := $t0->$account;

    // $t3 := opaque begin: create_signer::create_signer($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:737:9+20
    assume {:print "$at(82,41137,41157)"} true;

    // assume WellFormed($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:737:9+20
    assume $IsValid'signer'($t3) && $1_signer_is_txn_signer($t3) && $1_signer_is_txn_signer_addr($t3->$addr);

    // assume Eq<address>(signer::$address_of($t3), $t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:737:9+20
    assume $IsEqual'address'($1_signer_$address_of($t3), $t2);

    // $t3 := opaque end: create_signer::create_signer($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:737:9+20

    // trace_return[0]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:737:9+20
    assume {:print "$track_return(18,9,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:738:5+1
    assume {:print "$at(82,41162,41163)"} true;
L1:

    // return $t3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:738:5+1
    assume {:print "$at(82,41162,41163)"} true;
    $ret0 := $t3;
    return;

}

// fun account::exists_at [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:231:5+79
procedure {:inline 1} $1_account_exists_at(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[addr]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:231:5+1
    assume {:print "$at(82,11594,11595)"} true;
    assume {:print "$track_local(18,10,0):", $t0} $t0 == $t0;

    // $t1 := exists<account::Account>($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:232:9+6
    assume {:print "$at(82,11646,11652)"} true;
    $t1 := $ResourceExists($1_account_Account_$memory, $t0);

    // trace_return[0]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:232:9+21
    assume {:print "$track_return(18,10,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:233:5+1
    assume {:print "$at(82,11672,11673)"} true;
L1:

    // return $t1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:233:5+1
    assume {:print "$at(82,11672,11673)"} true;
    $ret0 := $t1;
    return;

}

// fun account::rotate_authentication_key_internal [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:263:5+516
procedure {:inline 1} $1_account_rotate_authentication_key_internal(_$t0: $signer, _$t1: Vec (int)) returns ()
{
    // declare local variables
    var $t2: $Mutation ($1_account_Account);
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: $Mutation ($1_account_Account);
    var $t16: $Mutation (Vec (int));
    var $t0: $signer;
    var $t1: Vec (int);
    var $1_account_Account_$modifies: [int]bool;
    var $temp_0'$1_account_Account': $1_account_Account;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:89:9+39
    assume {:print "$at(83,3568,3607)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // trace_local[account]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:263:5+1
    assume {:print "$at(82,12652,12653)"} true;
    assume {:print "$track_local(18,30,0):", $t0} $t0 == $t0;

    // trace_local[new_auth_key]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:263:5+1
    assume {:print "$track_local(18,30,1):", $t1} $t1 == $t1;

    // $t5 := signer::address_of($t0) on_abort goto L7 with $t6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:264:20+27
    assume {:print "$at(82,12788,12815)"} true;
    call $t5 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(82,12788,12815)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,30):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_local[addr]($t5) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:264:13+4
    assume {:print "$track_local(18,30,3):", $t5} $t5 == $t5;

    // $t7 := account::exists_at($t5) on_abort goto L7 with $t6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:265:17+15
    assume {:print "$at(82,12833,12848)"} true;
    call $t7 := $1_account_exists_at($t5);
    if ($abort_flag) {
        assume {:print "$at(82,12833,12848)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,30):", $t6} $t6 == $t6;
        goto L7;
    }

    // if ($t7) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:265:9+67
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:265:9+67
L1:

    // goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:265:9+67
    assume {:print "$at(82,12825,12892)"} true;
    goto L2;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:265:51+23
L0:

    // $t8 := 2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:265:51+23
    assume {:print "$at(82,12867,12890)"} true;
    $t8 := 2;
    assume $IsValid'u64'($t8);

    // $t9 := error::not_found($t8) on_abort goto L7 with $t6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:265:34+41
    call $t9 := $1_error_not_found($t8);
    if ($abort_flag) {
        assume {:print "$at(82,12850,12891)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,30):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_abort($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:265:9+67
    assume {:print "$at(82,12825,12892)"} true;
    assume {:print "$track_abort(18,30):", $t9} $t9 == $t9;

    // $t6 := move($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:265:9+67
    $t6 := $t9;

    // goto L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:265:9+67
    goto L7;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:267:28+13
    assume {:print "$at(82,12938,12951)"} true;
L2:

    // $t10 := vector::length<u8>($t1) on_abort goto L7 with $t6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:267:13+29
    assume {:print "$at(82,12923,12952)"} true;
    call $t10 := $1_vector_length'u8'($t1);
    if ($abort_flag) {
        assume {:print "$at(82,12923,12952)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,30):", $t6} $t6 == $t6;
        goto L7;
    }

    // $t11 := 32 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:267:46+2
    $t11 := 32;
    assume $IsValid'u64'($t11);

    // $t12 := ==($t10, $t11) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:267:43+2
    $t12 := $IsEqual'u64'($t10, $t11);

    // if ($t12) goto L4 else goto L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:266:9+134
    assume {:print "$at(82,12902,13036)"} true;
    if ($t12) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:266:9+134
L4:

    // goto L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:266:9+134
    assume {:print "$at(82,12902,13036)"} true;
    goto L5;

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:268:37+29
    assume {:print "$at(82,12996,13025)"} true;
L3:

    // $t13 := 4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:268:37+29
    assume {:print "$at(82,12996,13025)"} true;
    $t13 := 4;
    assume $IsValid'u64'($t13);

    // $t14 := error::invalid_argument($t13) on_abort goto L7 with $t6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:268:13+54
    call $t14 := $1_error_invalid_argument($t13);
    if ($abort_flag) {
        assume {:print "$at(82,12972,13026)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,30):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_abort($t14) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:266:9+134
    assume {:print "$at(82,12902,13036)"} true;
    assume {:print "$track_abort(18,30):", $t14} $t14 == $t14;

    // $t6 := move($t14) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:266:9+134
    $t6 := $t14;

    // goto L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:266:9+134
    goto L7;

    // label L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:270:59+4
    assume {:print "$at(82,13096,13100)"} true;
L5:

    // $t15 := borrow_global<account::Account>($t5) on_abort goto L7 with $t6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:270:32+17
    assume {:print "$at(82,13069,13086)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t15 := $Mutation($Global($t5), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t5));
    }
    if ($abort_flag) {
        assume {:print "$at(82,13069,13086)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,30):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_local[account_resource]($t15) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:270:13+16
    $temp_0'$1_account_Account' := $Dereference($t15);
    assume {:print "$track_local(18,30,2):", $temp_0'$1_account_Account'} $temp_0'$1_account_Account' == $temp_0'$1_account_Account';

    // $t16 := borrow_field<account::Account>.authentication_key($t15) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:271:9+35
    assume {:print "$at(82,13111,13146)"} true;
    $t16 := $ChildMutation($t15, 0, $Dereference($t15)->$authentication_key);

    // write_ref($t16, $t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:271:9+50
    $t16 := $UpdateMutation($t16, $t1);

    // write_back[Reference($t15).authentication_key (vector<u8>)]($t16) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:271:9+50
    $t15 := $UpdateMutation($t15, $Update'$1_account_Account'_authentication_key($Dereference($t15), $Dereference($t16)));

    // pack_ref_deep($t15) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:271:9+50

    // write_back[account::Account@]($t15) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:271:9+50
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t15),
        $Dereference($t15));

    // label L6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:272:5+1
    assume {:print "$at(82,13167,13168)"} true;
L6:

    // return () at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:272:5+1
    assume {:print "$at(82,13167,13168)"} true;
    return;

    // label L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:272:5+1
L7:

    // abort($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.move:272:5+1
    assume {:print "$at(82,13167,13168)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// struct aggregator_v2::Aggregator<u64> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:41:5+111
datatype $1_aggregator_v2_Aggregator'u64' {
    $1_aggregator_v2_Aggregator'u64'($value: int, $max_value: int)
}
function {:inline} $Update'$1_aggregator_v2_Aggregator'u64''_value(s: $1_aggregator_v2_Aggregator'u64', x: int): $1_aggregator_v2_Aggregator'u64' {
    $1_aggregator_v2_Aggregator'u64'(x, s->$max_value)
}
function {:inline} $Update'$1_aggregator_v2_Aggregator'u64''_max_value(s: $1_aggregator_v2_Aggregator'u64', x: int): $1_aggregator_v2_Aggregator'u64' {
    $1_aggregator_v2_Aggregator'u64'(s->$value, x)
}
function $IsValid'$1_aggregator_v2_Aggregator'u64''(s: $1_aggregator_v2_Aggregator'u64'): bool {
    $IsValid'u64'(s->$value)
      && $IsValid'u64'(s->$max_value)
}
function {:inline} $IsEqual'$1_aggregator_v2_Aggregator'u64''(s1: $1_aggregator_v2_Aggregator'u64', s2: $1_aggregator_v2_Aggregator'u64'): bool {
    s1 == s2
}

// struct aggregator_v2::AggregatorSnapshot<u64> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:49:5+82
datatype $1_aggregator_v2_AggregatorSnapshot'u64' {
    $1_aggregator_v2_AggregatorSnapshot'u64'($value: int)
}
function {:inline} $Update'$1_aggregator_v2_AggregatorSnapshot'u64''_value(s: $1_aggregator_v2_AggregatorSnapshot'u64', x: int): $1_aggregator_v2_AggregatorSnapshot'u64' {
    $1_aggregator_v2_AggregatorSnapshot'u64'(x)
}
function $IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''(s: $1_aggregator_v2_AggregatorSnapshot'u64'): bool {
    $IsValid'u64'(s->$value)
}
function {:inline} $IsEqual'$1_aggregator_v2_AggregatorSnapshot'u64''(s1: $1_aggregator_v2_AggregatorSnapshot'u64', s2: $1_aggregator_v2_AggregatorSnapshot'u64'): bool {
    s1 == s2
}

// struct aggregator_v2::AggregatorSnapshot<string::String> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:49:5+82
datatype $1_aggregator_v2_AggregatorSnapshot'$1_string_String' {
    $1_aggregator_v2_AggregatorSnapshot'$1_string_String'($value: $1_string_String)
}
function {:inline} $Update'$1_aggregator_v2_AggregatorSnapshot'$1_string_String''_value(s: $1_aggregator_v2_AggregatorSnapshot'$1_string_String', x: $1_string_String): $1_aggregator_v2_AggregatorSnapshot'$1_string_String' {
    $1_aggregator_v2_AggregatorSnapshot'$1_string_String'(x)
}
function $IsValid'$1_aggregator_v2_AggregatorSnapshot'$1_string_String''(s: $1_aggregator_v2_AggregatorSnapshot'$1_string_String'): bool {
    $IsValid'$1_string_String'(s->$value)
}
function {:inline} $IsEqual'$1_aggregator_v2_AggregatorSnapshot'$1_string_String''(s1: $1_aggregator_v2_AggregatorSnapshot'$1_string_String', s2: $1_aggregator_v2_AggregatorSnapshot'$1_string_String'): bool {
    $IsEqual'$1_string_String'(s1->$value, s2->$value)}

// fun aggregator_v2::add<u64> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:77:5+182
procedure {:inline 1} $1_aggregator_v2_add'u64'(_$t0: $Mutation ($1_aggregator_v2_Aggregator'u64'), _$t1: int) returns ($ret0: $Mutation ($1_aggregator_v2_Aggregator'u64'))
{
    // declare local variables
    var $t2: bool;
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t0: $Mutation ($1_aggregator_v2_Aggregator'u64');
    var $t1: int;
    var $temp_0'$1_aggregator_v2_Aggregator'u64'': $1_aggregator_v2_Aggregator'u64';
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[aggregator]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:77:5+1
    assume {:print "$at(90,3937,3938)"} true;
    $temp_0'$1_aggregator_v2_Aggregator'u64'' := $Dereference($t0);
    assume {:print "$track_local(21,0,0):", $temp_0'$1_aggregator_v2_Aggregator'u64''} $temp_0'$1_aggregator_v2_Aggregator'u64'' == $temp_0'$1_aggregator_v2_Aggregator'u64'';

    // trace_local[value]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:77:5+1
    assume {:print "$track_local(21,0,1):", $t1} $t1 == $t1;

    // $t2 := opaque begin: aggregator_v2::try_add<#0>($t0, $t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:17+26
    assume {:print "$at(90,4042,4068)"} true;

    // $t3 := havoc[val]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:17+26
    havoc $t3;

    // if ($t3) goto L7 else goto L6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:17+26
    if ($t3) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:17+26
L7:

    // trace_abort($t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:17+26
    assume {:print "$at(90,4042,4068)"} true;
    assume {:print "$track_abort(21,0):", $t4} $t4 == $t4;

    // goto L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:17+26
    goto L5;

    // label L6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:17+26
L6:

    // $t0 := havoc[mut]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:17+26
    assume {:print "$at(90,4042,4068)"} true;
    havoc $temp_0'$1_aggregator_v2_Aggregator'u64'';
    $t0 := $UpdateMutation($t0, $temp_0'$1_aggregator_v2_Aggregator'u64'');

    // assume WellFormed($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:17+26
    assume $IsValid'$1_aggregator_v2_Aggregator'u64''($Dereference($t0));

    // assume WellFormed($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:17+26
    assume $IsValid'bool'($t2);

    // $t2 := opaque end: aggregator_v2::try_add<#0>($t0, $t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:17+26

    // if ($t2) goto L1 else goto L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:9+78
    if ($t2) { goto L1; } else { goto L3; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:9+78
L1:

    // goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:9+78
    assume {:print "$at(90,4034,4112)"} true;
    goto L2;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:65+20
L0:

    // $t5 := 1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:65+20
    assume {:print "$at(90,4090,4110)"} true;
    $t5 := 1;
    assume $IsValid'u64'($t5);

    // $t6 := error::out_of_range($t5) on_abort goto L5 with $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:45+41
    call $t6 := $1_error_out_of_range($t5);
    if ($abort_flag) {
        assume {:print "$at(90,4070,4111)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(21,0):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_abort($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:9+78
    assume {:print "$at(90,4034,4112)"} true;
    assume {:print "$track_abort(21,0):", $t6} $t6 == $t6;

    // $t4 := move($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:9+78
    $t4 := $t6;

    // goto L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:9+78
    goto L5;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:87+1
L2:

    // trace_local[aggregator]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:87+1
    assume {:print "$at(90,4112,4113)"} true;
    $temp_0'$1_aggregator_v2_Aggregator'u64'' := $Dereference($t0);
    assume {:print "$track_local(21,0,0):", $temp_0'$1_aggregator_v2_Aggregator'u64''} $temp_0'$1_aggregator_v2_Aggregator'u64'' == $temp_0'$1_aggregator_v2_Aggregator'u64'';

    // goto L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:78:87+1
    goto L4;

    // label L3 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L3:

    // destroy($t0) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L0 at <internal>:1:1+10
    goto L0;

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:79:5+1
    assume {:print "$at(90,4118,4119)"} true;
L4:

    // return () at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:79:5+1
    assume {:print "$at(90,4118,4119)"} true;
    $ret0 := $t0;
    return;

    // label L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:79:5+1
L5:

    // abort($t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator_v2\aggregator_v2.move:79:5+1
    assume {:print "$at(90,4118,4119)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// struct optional_aggregator::Integer at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator\optional_aggregator.move:20:5+74
datatype $1_optional_aggregator_Integer {
    $1_optional_aggregator_Integer($value: int, $limit: int)
}
function {:inline} $Update'$1_optional_aggregator_Integer'_value(s: $1_optional_aggregator_Integer, x: int): $1_optional_aggregator_Integer {
    $1_optional_aggregator_Integer(x, s->$limit)
}
function {:inline} $Update'$1_optional_aggregator_Integer'_limit(s: $1_optional_aggregator_Integer, x: int): $1_optional_aggregator_Integer {
    $1_optional_aggregator_Integer(s->$value, x)
}
function $IsValid'$1_optional_aggregator_Integer'(s: $1_optional_aggregator_Integer): bool {
    $IsValid'u128'(s->$value)
      && $IsValid'u128'(s->$limit)
}
function {:inline} $IsEqual'$1_optional_aggregator_Integer'(s1: $1_optional_aggregator_Integer, s2: $1_optional_aggregator_Integer): bool {
    s1 == s2
}

// struct optional_aggregator::OptionalAggregator at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aggregator\optional_aggregator.move:64:5+175
datatype $1_optional_aggregator_OptionalAggregator {
    $1_optional_aggregator_OptionalAggregator($aggregator: $1_option_Option'$1_aggregator_Aggregator', $integer: $1_option_Option'$1_optional_aggregator_Integer')
}
function {:inline} $Update'$1_optional_aggregator_OptionalAggregator'_aggregator(s: $1_optional_aggregator_OptionalAggregator, x: $1_option_Option'$1_aggregator_Aggregator'): $1_optional_aggregator_OptionalAggregator {
    $1_optional_aggregator_OptionalAggregator(x, s->$integer)
}
function {:inline} $Update'$1_optional_aggregator_OptionalAggregator'_integer(s: $1_optional_aggregator_OptionalAggregator, x: $1_option_Option'$1_optional_aggregator_Integer'): $1_optional_aggregator_OptionalAggregator {
    $1_optional_aggregator_OptionalAggregator(s->$aggregator, x)
}
function $IsValid'$1_optional_aggregator_OptionalAggregator'(s: $1_optional_aggregator_OptionalAggregator): bool {
    $IsValid'$1_option_Option'$1_aggregator_Aggregator''(s->$aggregator)
      && $IsValid'$1_option_Option'$1_optional_aggregator_Integer''(s->$integer)
}
function {:inline} $IsEqual'$1_optional_aggregator_OptionalAggregator'(s1: $1_optional_aggregator_OptionalAggregator, s2: $1_optional_aggregator_OptionalAggregator): bool {
    $IsEqual'$1_option_Option'$1_aggregator_Aggregator''(s1->$aggregator, s2->$aggregator)
    && $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''(s1->$integer, s2->$integer)}

// struct coin::Coin<aptos_coin::AptosCoin> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:74:5+112
datatype $1_coin_Coin'$1_aptos_coin_AptosCoin' {
    $1_coin_Coin'$1_aptos_coin_AptosCoin'($value: int)
}
function {:inline} $Update'$1_coin_Coin'$1_aptos_coin_AptosCoin''_value(s: $1_coin_Coin'$1_aptos_coin_AptosCoin', x: int): $1_coin_Coin'$1_aptos_coin_AptosCoin' {
    $1_coin_Coin'$1_aptos_coin_AptosCoin'(x)
}
function $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''(s: $1_coin_Coin'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'u64'(s->$value)
}
function {:inline} $IsEqual'$1_coin_Coin'$1_aptos_coin_AptosCoin''(s1: $1_coin_Coin'$1_aptos_coin_AptosCoin', s2: $1_coin_Coin'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}

// struct coin::CoinInfo<aptos_coin::AptosCoin> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:109:5+564
datatype $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($name: $1_string_String, $symbol: $1_string_String, $decimals: int, $supply: $1_option_Option'$1_optional_aggregator_OptionalAggregator')
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_name(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: $1_string_String): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(x, s->$symbol, s->$decimals, s->$supply)
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_symbol(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: $1_string_String): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s->$name, x, s->$decimals, s->$supply)
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_decimals(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: int): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s->$name, s->$symbol, x, s->$supply)
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_supply(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s->$name, s->$symbol, s->$decimals, x)
}
function $IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'$1_string_String'(s->$name)
      && $IsValid'$1_string_String'(s->$symbol)
      && $IsValid'u8'(s->$decimals)
      && $IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s->$supply)
}
function {:inline} $IsEqual'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(s1: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', s2: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'): bool {
    $IsEqual'$1_string_String'(s1->$name, s2->$name)
    && $IsEqual'$1_string_String'(s1->$symbol, s2->$symbol)
    && $IsEqual'u8'(s1->$decimals, s2->$decimals)
    && $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s1->$supply, s2->$supply)}
var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';

// struct coin::CoinStore<aptos_coin::AptosCoin> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:92:5+206
datatype $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'($coin: $1_coin_Coin'$1_aptos_coin_AptosCoin', $frozen: bool, $deposit_events: $1_event_EventHandle'$1_coin_DepositEvent', $withdraw_events: $1_event_EventHandle'$1_coin_WithdrawEvent')
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_coin(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: $1_coin_Coin'$1_aptos_coin_AptosCoin'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'(x, s->$frozen, s->$deposit_events, s->$withdraw_events)
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_frozen(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: bool): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s->$coin, x, s->$deposit_events, s->$withdraw_events)
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_deposit_events(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: $1_event_EventHandle'$1_coin_DepositEvent'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s->$coin, s->$frozen, x, s->$withdraw_events)
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_withdraw_events(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: $1_event_EventHandle'$1_coin_WithdrawEvent'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s->$coin, s->$frozen, s->$deposit_events, x)
}
function $IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''(s->$coin)
      && $IsValid'bool'(s->$frozen)
      && $IsValid'$1_event_EventHandle'$1_coin_DepositEvent''(s->$deposit_events)
      && $IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''(s->$withdraw_events)
}
function {:inline} $IsEqual'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(s1: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', s2: $1_coin_CoinStore'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}
var $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_CoinStore'$1_aptos_coin_AptosCoin';

// struct coin::DepositEvent at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:123:5+64
datatype $1_coin_DepositEvent {
    $1_coin_DepositEvent($amount: int)
}
function {:inline} $Update'$1_coin_DepositEvent'_amount(s: $1_coin_DepositEvent, x: int): $1_coin_DepositEvent {
    $1_coin_DepositEvent(x)
}
function $IsValid'$1_coin_DepositEvent'(s: $1_coin_DepositEvent): bool {
    $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_coin_DepositEvent'(s1: $1_coin_DepositEvent, s2: $1_coin_DepositEvent): bool {
    s1 == s2
}

// struct coin::WithdrawEvent at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:128:5+65
datatype $1_coin_WithdrawEvent {
    $1_coin_WithdrawEvent($amount: int)
}
function {:inline} $Update'$1_coin_WithdrawEvent'_amount(s: $1_coin_WithdrawEvent, x: int): $1_coin_WithdrawEvent {
    $1_coin_WithdrawEvent(x)
}
function $IsValid'$1_coin_WithdrawEvent'(s: $1_coin_WithdrawEvent): bool {
    $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_coin_WithdrawEvent'(s1: $1_coin_WithdrawEvent, s2: $1_coin_WithdrawEvent): bool {
    s1 == s2
}

// struct coin::Ghost$supply<aptos_coin::AptosCoin> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:4:9+29
datatype $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin' {
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'($v: int)
}
function {:inline} $Update'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''_v(s: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin', x: int): $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin' {
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(x)
}
function $IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(s: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'num'(s->$v)
}
function {:inline} $IsEqual'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(s1: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin', s2: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}
var $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';

// struct coin::Ghost$aggregate_supply<aptos_coin::AptosCoin> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:5:9+39
datatype $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin' {
    $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'($v: int)
}
function {:inline} $Update'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''_v(s: $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin', x: int): $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin' {
    $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'(x)
}
function $IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(s: $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'num'(s->$v)
}
function {:inline} $IsEqual'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(s1: $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin', s2: $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}
var $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin';

// fun coin::extract<aptos_coin::AptosCoin> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:393:5+434
procedure {:inline 1} $1_coin_extract'$1_aptos_coin_AptosCoin'(_$t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'), _$t1: int) returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin', $ret1: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'))
{
    // declare local variables
    var $t2: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t3: int;
    var $t4: bool;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $t9: int;
    var $t10: $Mutation ($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin');
    var $t11: int;
    var $t12: int;
    var $t13: $Mutation (int);
    var $t14: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $t15: int;
    var $t16: $Mutation ($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin');
    var $t17: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t1: int;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t2, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:32:9+99
    assume {:print "$at(107,1664,1763)"} true;
    assume ($t2 == $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply);

    // trace_local[coin]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:393:5+1
    assume {:print "$at(106,14869,14870)"} true;
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(24,13,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // trace_local[amount]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:393:5+1
    assume {:print "$track_local(24,13,1):", $t1} $t1 == $t1;

    // $t3 := get_field<coin::Coin<#0>>.value($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:394:17+10
    assume {:print "$at(106,14972,14982)"} true;
    $t3 := $Dereference($t0)->$value;

    // $t4 := >=($t3, $t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:394:28+2
    call $t4 := $Ge($t3, $t1);

    // if ($t4) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:394:9+77
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:394:9+77
L1:

    // goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:394:9+77
    assume {:print "$at(106,14964,15041)"} true;
    goto L2;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:394:9+77
L0:

    // destroy($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:394:9+77
    assume {:print "$at(106,14964,15041)"} true;

    // $t5 := 6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:394:63+21
    $t5 := 6;
    assume $IsValid'u64'($t5);

    // $t6 := error::invalid_argument($t5) on_abort goto L4 with $t7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:394:39+46
    call $t6 := $1_error_invalid_argument($t5);
    if ($abort_flag) {
        assume {:print "$at(106,14994,15040)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(24,13):", $t7} $t7 == $t7;
        goto L4;
    }

    // trace_abort($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:394:9+77
    assume {:print "$at(106,14964,15041)"} true;
    assume {:print "$track_abort(24,13):", $t6} $t6 == $t6;

    // $t7 := move($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:394:9+77
    $t7 := $t6;

    // goto L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:394:9+77
    goto L4;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:395:9+81
    assume {:print "$at(106,15051,15132)"} true;
L2:

    // assume Identical($t8, pack coin::Ghost$supply<#0>(Sub(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), $t1))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:396:13+52
    assume {:print "$at(106,15070,15122)"} true;
    assume ($t8 == $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v - $t1)));

    // assume Identical($t9, 0x0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:396:13+52
    assume ($t9 == 0);

    // $t10 := borrow_global<coin::Ghost$supply<#0>>($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:396:13+52
    if (!$ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $Mutation($Global($t9), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t9));
    }

    // write_ref($t10, $t8) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:396:13+52
    $t10 := $UpdateMutation($t10, $t8);

    // write_back[coin::Ghost$supply<#0>@]($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:396:13+52
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t10),
        $Dereference($t10));

    // $t11 := get_field<coin::Coin<#0>>.value($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:398:22+10
    assume {:print "$at(106,15155,15165)"} true;
    $t11 := $Dereference($t0)->$value;

    // $t12 := -($t11, $t1) on_abort goto L4 with $t7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:398:33+1
    call $t12 := $Sub($t11, $t1);
    if ($abort_flag) {
        assume {:print "$at(106,15166,15167)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(24,13):", $t7} $t7 == $t7;
        goto L4;
    }

    // $t13 := borrow_field<coin::Coin<#0>>.value($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:398:9+10
    $t13 := $ChildMutation($t0, 0, $Dereference($t0)->$value);

    // write_ref($t13, $t12) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:398:9+32
    $t13 := $UpdateMutation($t13, $t12);

    // write_back[Reference($t0).value (u64)]($t13) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:398:9+32
    $t0 := $UpdateMutation($t0, $Update'$1_coin_Coin'$1_aptos_coin_AptosCoin''_value($Dereference($t0), $Dereference($t13)));

    // trace_local[coin]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:398:9+32
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(24,13,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // assume Identical($t14, pack coin::Ghost$supply<#0>(Add(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), $t1))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:400:13+52
    assume {:print "$at(106,15203,15255)"} true;
    assume ($t14 == $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v + $t1)));

    // assume Identical($t15, 0x0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:400:13+52
    assume ($t15 == 0);

    // $t16 := borrow_global<coin::Ghost$supply<#0>>($t15) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:400:13+52
    if (!$ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t15)) {
        call $ExecFailureAbort();
    } else {
        $t16 := $Mutation($Global($t15), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t15));
    }

    // write_ref($t16, $t14) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:400:13+52
    $t16 := $UpdateMutation($t16, $t14);

    // write_back[coin::Ghost$supply<#0>@]($t16) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:400:13+52
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t16),
        $Dereference($t16));

    // $t17 := pack coin::Coin<#0>($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:402:9+22
    assume {:print "$at(106,15275,15297)"} true;
    $t17 := $1_coin_Coin'$1_aptos_coin_AptosCoin'($t1);

    // trace_return[0]($t17) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:402:9+22
    assume {:print "$track_return(24,13,0):", $t17} $t17 == $t17;

    // trace_local[coin]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:402:9+22
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(24,13,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:403:5+1
    assume {:print "$at(106,15302,15303)"} true;
L3:

    // return $t17 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:403:5+1
    assume {:print "$at(106,15302,15303)"} true;
    $ret0 := $t17;
    $ret1 := $t0;
    return;

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:403:5+1
L4:

    // abort($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:403:5+1
    assume {:print "$at(106,15302,15303)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun coin::deposit<aptos_coin::AptosCoin> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:348:5+621
procedure {:inline 1} $1_coin_deposit'$1_aptos_coin_AptosCoin'(_$t0: int, _$t1: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns ()
{
    // declare local variables
    var $t2: $Mutation ($1_coin_CoinStore'$1_aptos_coin_AptosCoin');
    var $t3: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t4: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t5: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: $Mutation ($1_coin_CoinStore'$1_aptos_coin_AptosCoin');
    var $t11: bool;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: $Mutation ($1_event_EventHandle'$1_coin_DepositEvent');
    var $t16: int;
    var $t17: $1_coin_DepositEvent;
    var $t18: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t19: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t0: int;
    var $t1: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'': $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t3, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:32:9+99
    assume {:print "$at(107,1664,1763)"} true;
    assume ($t3 == $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply);

    // assume Identical($t4, global<coin::CoinStore<#0>>($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:197:9+59
    assume {:print "$at(107,8462,8521)"} true;
    assume ($t4 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0));

    // trace_local[account_addr]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:348:5+1
    assume {:print "$at(106,13036,13037)"} true;
    assume {:print "$track_local(24,7,0):", $t0} $t0 == $t0;

    // trace_local[coin]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:348:5+1
    assume {:print "$track_local(24,7,1):", $t1} $t1 == $t1;

    // assume Identical($t5, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:32:9+99
    assume {:print "$at(107,1664,1763)"} true;
    assume ($t5 == $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply);

    // $t6 := coin::is_account_registered<#0>($t0) on_abort goto L7 with $t7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:350:13+45
    assume {:print "$at(106,13160,13205)"} true;
    call $t6 := $1_coin_is_account_registered'$1_aptos_coin_AptosCoin'($t0);
    if ($abort_flag) {
        assume {:print "$at(106,13160,13205)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(24,7):", $t7} $t7 == $t7;
        goto L7;
    }

    // if ($t6) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:349:9+134
    assume {:print "$at(106,13139,13273)"} true;
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:349:9+134
L1:

    // goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:349:9+134
    assume {:print "$at(106,13139,13273)"} true;
    goto L2;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:351:30+25
    assume {:print "$at(106,13236,13261)"} true;
L0:

    // $t8 := 5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:351:30+25
    assume {:print "$at(106,13236,13261)"} true;
    $t8 := 5;
    assume $IsValid'u64'($t8);

    // $t9 := error::not_found($t8) on_abort goto L7 with $t7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:351:13+43
    call $t9 := $1_error_not_found($t8);
    if ($abort_flag) {
        assume {:print "$at(106,13219,13262)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(24,7):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_abort($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:349:9+134
    assume {:print "$at(106,13139,13273)"} true;
    assume {:print "$track_abort(24,7):", $t9} $t9 == $t9;

    // $t7 := move($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:349:9+134
    $t7 := $t9;

    // goto L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:349:9+134
    goto L7;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:354:65+12
    assume {:print "$at(106,13340,13352)"} true;
L2:

    // $t10 := borrow_global<coin::CoinStore<#0>>($t0) on_abort goto L7 with $t7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:354:26+17
    assume {:print "$at(106,13301,13318)"} true;
    if (!$ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(106,13301,13318)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(24,7):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_local[coin_store]($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:354:13+10
    $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'' := $Dereference($t10);
    assume {:print "$track_local(24,7,2):", $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'';

    // $t11 := get_field<coin::CoinStore<#0>>.frozen($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:356:14+17
    assume {:print "$at(106,13385,13402)"} true;
    $t11 := $Dereference($t10)->$frozen;

    // $t12 := !($t11) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:356:13+1
    call $t12 := $Not($t11);

    // if ($t12) goto L4 else goto L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:355:9+97
    assume {:print "$at(106,13363,13460)"} true;
    if ($t12) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:355:9+97
L4:

    // goto L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:355:9+97
    assume {:print "$at(106,13363,13460)"} true;
    goto L5;

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:355:9+97
L3:

    // destroy($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:355:9+97
    assume {:print "$at(106,13363,13460)"} true;

    // $t13 := 10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:357:38+7
    assume {:print "$at(106,13441,13448)"} true;
    $t13 := 10;
    assume $IsValid'u64'($t13);

    // $t14 := error::permission_denied($t13) on_abort goto L7 with $t7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:357:13+33
    call $t14 := $1_error_permission_denied($t13);
    if ($abort_flag) {
        assume {:print "$at(106,13416,13449)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(24,7):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_abort($t14) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:355:9+97
    assume {:print "$at(106,13363,13460)"} true;
    assume {:print "$track_abort(24,7):", $t14} $t14 == $t14;

    // $t7 := move($t14) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:355:9+97
    $t7 := $t14;

    // goto L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:355:9+97
    goto L7;

    // label L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:361:18+10
    assume {:print "$at(106,13521,13531)"} true;
L5:

    // $t15 := borrow_field<coin::CoinStore<#0>>.deposit_events($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:361:13+30
    assume {:print "$at(106,13516,13546)"} true;
    $t15 := $ChildMutation($t10, 2, $Dereference($t10)->$deposit_events);

    // $t16 := get_field<coin::Coin<#0>>.value($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:362:36+10
    assume {:print "$at(106,13583,13593)"} true;
    $t16 := $t1->$value;

    // $t17 := pack coin::DepositEvent($t16) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:362:13+35
    $t17 := $1_coin_DepositEvent($t16);

    // opaque begin: event::emit_event<coin::DepositEvent>($t15, $t17) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:360:9+135
    assume {:print "$at(106,13471,13606)"} true;

    // opaque end: event::emit_event<coin::DepositEvent>($t15, $t17) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:360:9+135

    // write_back[Reference($t10).deposit_events (event::EventHandle<coin::DepositEvent>)]($t15) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:360:9+135
    $t10 := $UpdateMutation($t10, $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_deposit_events($Dereference($t10), $Dereference($t15)));

    // $t18 := borrow_field<coin::CoinStore<#0>>.coin($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:365:15+20
    assume {:print "$at(106,13623,13643)"} true;
    $t18 := $ChildMutation($t10, 0, $Dereference($t10)->$coin);

    // assume Identical($t19, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:32:9+99
    assume {:print "$at(107,1664,1763)"} true;
    assume ($t19 == $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply);

    // coin::merge<#0>($t18, $t1) on_abort goto L7 with $t7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:365:9+33
    assume {:print "$at(106,13617,13650)"} true;
    call $t18 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t18, $t1);
    if ($abort_flag) {
        assume {:print "$at(106,13617,13650)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(24,7):", $t7} $t7 == $t7;
        goto L7;
    }

    // write_back[Reference($t10).coin (coin::Coin<#0>)]($t18) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:365:9+33
    $t10 := $UpdateMutation($t10, $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_coin($Dereference($t10), $Dereference($t18)));

    // write_back[coin::CoinStore<#0>@]($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:365:9+33
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t10),
        $Dereference($t10));

    // label L6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:366:5+1
    assume {:print "$at(106,13656,13657)"} true;
L6:

    // return () at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:366:5+1
    assume {:print "$at(106,13656,13657)"} true;
    return;

    // label L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:366:5+1
L7:

    // abort($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:366:5+1
    assume {:print "$at(106,13656,13657)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun coin::is_account_registered<aptos_coin::AptosCoin> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:266:5+129
procedure {:inline 1} $1_coin_is_account_registered'$1_aptos_coin_AptosCoin'(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t2: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:32:9+99
    assume {:print "$at(107,1664,1763)"} true;
    assume ($t1 == $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply);

    // trace_local[account_addr]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:266:5+1
    assume {:print "$at(106,9762,9763)"} true;
    assume {:print "$track_local(24,22,0):", $t0} $t0 == $t0;

    // $t2 := exists<coin::CoinStore<#0>>($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:267:9+6
    assume {:print "$at(106,9844,9850)"} true;
    $t2 := $ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0);

    // trace_return[0]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:267:9+41
    assume {:print "$track_return(24,22,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:268:5+1
    assume {:print "$at(106,9890,9891)"} true;
L1:

    // return $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:268:5+1
    assume {:print "$at(106,9890,9891)"} true;
    $ret0 := $t2;
    return;

}

// fun coin::merge<aptos_coin::AptosCoin> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:527:5+469
procedure {:inline 1} $1_coin_merge'$1_aptos_coin_AptosCoin'(_$t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'), _$t1: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns ($ret0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'))
{
    // declare local variables
    var $t2: int;
    var $t3: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t4: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $t5: int;
    var $t6: $Mutation ($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin');
    var $t7: int;
    var $t8: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $t9: int;
    var $t10: $Mutation ($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin');
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: $Mutation (int);
    var $t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t1: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t3, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:32:9+99
    assume {:print "$at(107,1664,1763)"} true;
    assume ($t3 == $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply);

    // trace_local[dst_coin]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:527:5+1
    assume {:print "$at(106,20263,20264)"} true;
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(24,26,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // trace_local[source_coin]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:527:5+1
    assume {:print "$track_local(24,26,1):", $t1} $t1 == $t1;

    // assume Le(Add(select coin::Coin.value($t0), select coin::Coin.value($t1)), 18446744073709551615) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:529:13+53
    assume {:print "$at(106,20379,20432)"} true;
    assume (($Dereference($t0)->$value + $t1->$value) <= 18446744073709551615);

    // assume Identical($t4, pack coin::Ghost$supply<#0>(Sub(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), select coin::Coin.value($t1)))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:532:13+63
    assume {:print "$at(106,20471,20534)"} true;
    assume ($t4 == $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v - $t1->$value)));

    // assume Identical($t5, 0x0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:532:13+63
    assume ($t5 == 0);

    // $t6 := borrow_global<coin::Ghost$supply<#0>>($t5) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:532:13+63
    if (!$ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $Mutation($Global($t5), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t5));
    }

    // write_ref($t6, $t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:532:13+63
    $t6 := $UpdateMutation($t6, $t4);

    // write_back[coin::Ghost$supply<#0>@]($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:532:13+63
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t6),
        $Dereference($t6));

    // $t7 := unpack coin::Coin<#0>($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:534:13+14
    assume {:print "$at(106,20558,20572)"} true;
    $t7 := $t1->$value;

    // trace_local[value]($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:534:20+5
    assume {:print "$track_local(24,26,2):", $t7} $t7 == $t7;

    // assume Identical($t8, pack coin::Ghost$supply<#0>(Add(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), $t7))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:536:13+51
    assume {:print "$at(106,20615,20666)"} true;
    assume ($t8 == $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)->$v + $t7)));

    // assume Identical($t9, 0x0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:536:13+51
    assume ($t9 == 0);

    // $t10 := borrow_global<coin::Ghost$supply<#0>>($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:536:13+51
    if (!$ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $Mutation($Global($t9), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t9));
    }

    // write_ref($t10, $t8) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:536:13+51
    $t10 := $UpdateMutation($t10, $t8);

    // write_back[coin::Ghost$supply<#0>@]($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:536:13+51
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t10),
        $Dereference($t10));

    // $t11 := get_field<coin::Coin<#0>>.value($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:538:26+14
    assume {:print "$at(106,20703,20717)"} true;
    $t11 := $Dereference($t0)->$value;

    // $t12 := +($t11, $t7) on_abort goto L2 with $t13 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:538:41+1
    call $t12 := $AddU64($t11, $t7);
    if ($abort_flag) {
        assume {:print "$at(106,20718,20719)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(24,26):", $t13} $t13 == $t13;
        goto L2;
    }

    // $t14 := borrow_field<coin::Coin<#0>>.value($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:538:9+14
    $t14 := $ChildMutation($t0, 0, $Dereference($t0)->$value);

    // write_ref($t14, $t12) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:538:9+39
    $t14 := $UpdateMutation($t14, $t12);

    // write_back[Reference($t0).value (u64)]($t14) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:538:9+39
    $t0 := $UpdateMutation($t0, $Update'$1_coin_Coin'$1_aptos_coin_AptosCoin''_value($Dereference($t0), $Dereference($t14)));

    // trace_local[dst_coin]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:538:9+39
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(24,26,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // trace_local[dst_coin]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:538:48+1
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(24,26,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:539:5+1
    assume {:print "$at(106,20731,20732)"} true;
L1:

    // return () at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:539:5+1
    assume {:print "$at(106,20731,20732)"} true;
    $ret0 := $t0;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:539:5+1
L2:

    // abort($t13) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:539:5+1
    assume {:print "$at(106,20731,20732)"} true;
    $abort_code := $t13;
    $abort_flag := true;
    return;

}

// fun coin::transfer<aptos_coin::AptosCoin> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:591:5+214
procedure {:inline 1} $1_coin_transfer'$1_aptos_coin_AptosCoin'(_$t0: $signer, _$t1: int, _$t2: int) returns ()
{
    // declare local variables
    var $t3: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t4: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t5: int;
    var $t6: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t7: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t8: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t9: int;
    var $t10: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t11: int;
    var $t12: int;
    var $t13: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t14: int;
    var $t15: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t16: int;
    var $t17: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t18: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // assume Identical($t4, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:32:9+99
    assume {:print "$at(107,1664,1763)"} true;
    assume ($t4 == $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply);

    // assume Identical($t5, signer::$address_of($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:375:9+49
    assume {:print "$at(107,16245,16294)"} true;
    assume ($t5 == $1_signer_$address_of($t0));

    // assume Identical($t6, global<coin::CoinStore<#0>>($t5)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:376:9+69
    assume {:print "$at(107,16303,16372)"} true;
    assume ($t6 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t5));

    // assume Identical($t7, global<coin::CoinStore<#0>>($t1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:378:9+52
    assume {:print "$at(107,16469,16521)"} true;
    assume ($t7 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t1));

    // trace_local[from]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:591:5+1
    assume {:print "$at(106,22877,22878)"} true;
    assume {:print "$track_local(24,33,0):", $t0} $t0 == $t0;

    // trace_local[to]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:591:5+1
    assume {:print "$track_local(24,33,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:591:5+1
    assume {:print "$track_local(24,33,2):", $t2} $t2 == $t2;

    // assume Identical($t8, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:32:9+99
    assume {:print "$at(107,1664,1763)"} true;
    assume ($t8 == $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply);

    // assume Identical($t9, signer::$address_of($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:400:9+47
    assume {:print "$at(107,17476,17523)"} true;
    assume ($t9 == $1_signer_$address_of($t0));

    // assume Identical($t10, global<coin::CoinStore<#0>>($t9)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:401:9+59
    assume {:print "$at(107,17532,17591)"} true;
    assume ($t10 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t9));

    // assume Identical($t11, select coin::Coin.value(select coin::CoinStore.coin($t10))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:402:9+36
    assume {:print "$at(107,17600,17636)"} true;
    assume ($t11 == $t10->$coin->$value);

    // assume Identical($t12, signer::$address_of($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:410:9+47
    assume {:print "$at(107,17930,17977)"} true;
    assume ($t12 == $1_signer_$address_of($t0));

    // assume Identical($t13, global<coin::CoinStore<#0>>($t12)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:411:9+59
    assume {:print "$at(107,17986,18045)"} true;
    assume ($t13 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t12));

    // assume Identical($t14, select coin::Coin.value(select coin::CoinStore.coin($t13))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:412:9+36
    assume {:print "$at(107,18054,18090)"} true;
    assume ($t14 == $t13->$coin->$value);

    // $t15 := coin::withdraw<#0>($t0, $t2) on_abort goto L2 with $t16 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:596:20+32
    assume {:print "$at(106,23025,23057)"} true;
    call $t15 := $1_coin_withdraw'$1_aptos_coin_AptosCoin'($t0, $t2);
    if ($abort_flag) {
        assume {:print "$at(106,23025,23057)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(24,33):", $t16} $t16 == $t16;
        goto L2;
    }

    // trace_local[coin]($t15) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:596:13+4
    assume {:print "$track_local(24,33,3):", $t15} $t15 == $t15;

    // assume Identical($t17, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:32:9+99
    assume {:print "$at(107,1664,1763)"} true;
    assume ($t17 == $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply);

    // assume Identical($t18, global<coin::CoinStore<#0>>($t1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:197:9+59
    assume {:print "$at(107,8462,8521)"} true;
    assume ($t18 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t1));

    // coin::deposit<#0>($t1, $t15) on_abort goto L2 with $t16 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:597:9+17
    assume {:print "$at(106,23067,23084)"} true;
    call $1_coin_deposit'$1_aptos_coin_AptosCoin'($t1, $t15);
    if ($abort_flag) {
        assume {:print "$at(106,23067,23084)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(24,33):", $t16} $t16 == $t16;
        goto L2;
    }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:598:5+1
    assume {:print "$at(106,23090,23091)"} true;
L1:

    // return () at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:598:5+1
    assume {:print "$at(106,23090,23091)"} true;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:598:5+1
L2:

    // abort($t16) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:598:5+1
    assume {:print "$at(106,23090,23091)"} true;
    $abort_code := $t16;
    $abort_flag := true;
    return;

}

// fun coin::withdraw<aptos_coin::AptosCoin> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:606:5+697
procedure {:inline 1} $1_coin_withdraw'$1_aptos_coin_AptosCoin'(_$t0: $signer, _$t1: int) returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin')
{
    // declare local variables
    var $t2: int;
    var $t3: $Mutation ($1_coin_CoinStore'$1_aptos_coin_AptosCoin');
    var $t4: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t5: int;
    var $t6: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t7: int;
    var $t8: int;
    var $t9: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t14: bool;
    var $t15: int;
    var $t16: int;
    var $t17: $Mutation ($1_coin_CoinStore'$1_aptos_coin_AptosCoin');
    var $t18: bool;
    var $t19: bool;
    var $t20: int;
    var $t21: int;
    var $t22: $Mutation ($1_event_EventHandle'$1_coin_WithdrawEvent');
    var $t23: $1_coin_WithdrawEvent;
    var $t24: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t25: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t26: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $signer;
    var $t1: int;
    var $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'': $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t4, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:32:9+99
    assume {:print "$at(107,1664,1763)"} true;
    assume ($t4 == $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply);

    // assume Identical($t5, signer::$address_of($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:400:9+47
    assume {:print "$at(107,17476,17523)"} true;
    assume ($t5 == $1_signer_$address_of($t0));

    // assume Identical($t6, global<coin::CoinStore<#0>>($t5)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:401:9+59
    assume {:print "$at(107,17532,17591)"} true;
    assume ($t6 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t5));

    // assume Identical($t7, select coin::Coin.value(select coin::CoinStore.coin($t6))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:402:9+36
    assume {:print "$at(107,17600,17636)"} true;
    assume ($t7 == $t6->$coin->$value);

    // assume Identical($t8, signer::$address_of($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:410:9+47
    assume {:print "$at(107,17930,17977)"} true;
    assume ($t8 == $1_signer_$address_of($t0));

    // assume Identical($t9, global<coin::CoinStore<#0>>($t8)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:411:9+59
    assume {:print "$at(107,17986,18045)"} true;
    assume ($t9 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t8));

    // assume Identical($t10, select coin::Coin.value(select coin::CoinStore.coin($t9))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:412:9+36
    assume {:print "$at(107,18054,18090)"} true;
    assume ($t10 == $t9->$coin->$value);

    // trace_local[account]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:606:5+1
    assume {:print "$at(106,23311,23312)"} true;
    assume {:print "$track_local(24,37,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:606:5+1
    assume {:print "$track_local(24,37,1):", $t1} $t1 == $t1;

    // $t11 := signer::address_of($t0) on_abort goto L7 with $t12 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:610:28+27
    assume {:print "$at(106,23459,23486)"} true;
    call $t11 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(106,23459,23486)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(24,37):", $t12} $t12 == $t12;
        goto L7;
    }

    // trace_local[account_addr]($t11) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:610:13+12
    assume {:print "$track_local(24,37,2):", $t11} $t11 == $t11;

    // assume Identical($t13, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:32:9+99
    assume {:print "$at(107,1664,1763)"} true;
    assume ($t13 == $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply);

    // $t14 := coin::is_account_registered<#0>($t11) on_abort goto L7 with $t12 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:612:13+45
    assume {:print "$at(106,23517,23562)"} true;
    call $t14 := $1_coin_is_account_registered'$1_aptos_coin_AptosCoin'($t11);
    if ($abort_flag) {
        assume {:print "$at(106,23517,23562)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(24,37):", $t12} $t12 == $t12;
        goto L7;
    }

    // if ($t14) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:611:9+134
    assume {:print "$at(106,23496,23630)"} true;
    if ($t14) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:611:9+134
L1:

    // goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:611:9+134
    assume {:print "$at(106,23496,23630)"} true;
    goto L2;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:613:30+25
    assume {:print "$at(106,23593,23618)"} true;
L0:

    // $t15 := 5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:613:30+25
    assume {:print "$at(106,23593,23618)"} true;
    $t15 := 5;
    assume $IsValid'u64'($t15);

    // $t16 := error::not_found($t15) on_abort goto L7 with $t12 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:613:13+43
    call $t16 := $1_error_not_found($t15);
    if ($abort_flag) {
        assume {:print "$at(106,23576,23619)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(24,37):", $t12} $t12 == $t12;
        goto L7;
    }

    // trace_abort($t16) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:611:9+134
    assume {:print "$at(106,23496,23630)"} true;
    assume {:print "$track_abort(24,37):", $t16} $t16 == $t16;

    // $t12 := move($t16) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:611:9+134
    $t12 := $t16;

    // goto L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:611:9+134
    goto L7;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:616:65+12
    assume {:print "$at(106,23697,23709)"} true;
L2:

    // $t17 := borrow_global<coin::CoinStore<#0>>($t11) on_abort goto L7 with $t12 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:616:26+17
    assume {:print "$at(106,23658,23675)"} true;
    if (!$ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t11)) {
        call $ExecFailureAbort();
    } else {
        $t17 := $Mutation($Global($t11), EmptyVec(), $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t11));
    }
    if ($abort_flag) {
        assume {:print "$at(106,23658,23675)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(24,37):", $t12} $t12 == $t12;
        goto L7;
    }

    // trace_local[coin_store]($t17) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:616:13+10
    $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'' := $Dereference($t17);
    assume {:print "$track_local(24,37,3):", $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'';

    // $t18 := get_field<coin::CoinStore<#0>>.frozen($t17) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:618:14+17
    assume {:print "$at(106,23742,23759)"} true;
    $t18 := $Dereference($t17)->$frozen;

    // $t19 := !($t18) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:618:13+1
    call $t19 := $Not($t18);

    // if ($t19) goto L4 else goto L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:617:9+97
    assume {:print "$at(106,23720,23817)"} true;
    if ($t19) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:617:9+97
L4:

    // goto L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:617:9+97
    assume {:print "$at(106,23720,23817)"} true;
    goto L5;

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:617:9+97
L3:

    // destroy($t17) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:617:9+97
    assume {:print "$at(106,23720,23817)"} true;

    // $t20 := 10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:619:38+7
    assume {:print "$at(106,23798,23805)"} true;
    $t20 := 10;
    assume $IsValid'u64'($t20);

    // $t21 := error::permission_denied($t20) on_abort goto L7 with $t12 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:619:13+33
    call $t21 := $1_error_permission_denied($t20);
    if ($abort_flag) {
        assume {:print "$at(106,23773,23806)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(24,37):", $t12} $t12 == $t12;
        goto L7;
    }

    // trace_abort($t21) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:617:9+97
    assume {:print "$at(106,23720,23817)"} true;
    assume {:print "$track_abort(24,37):", $t21} $t21 == $t21;

    // $t12 := move($t21) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:617:9+97
    $t12 := $t21;

    // goto L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:617:9+97
    goto L7;

    // label L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:623:18+10
    assume {:print "$at(106,23879,23889)"} true;
L5:

    // $t22 := borrow_field<coin::CoinStore<#0>>.withdraw_events($t17) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:623:13+31
    assume {:print "$at(106,23874,23905)"} true;
    $t22 := $ChildMutation($t17, 3, $Dereference($t17)->$withdraw_events);

    // $t23 := pack coin::WithdrawEvent($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:624:13+24
    assume {:print "$at(106,23919,23943)"} true;
    $t23 := $1_coin_WithdrawEvent($t1);

    // opaque begin: event::emit_event<coin::WithdrawEvent>($t22, $t23) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:622:9+126
    assume {:print "$at(106,23828,23954)"} true;

    // opaque end: event::emit_event<coin::WithdrawEvent>($t22, $t23) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:622:9+126

    // write_back[Reference($t17).withdraw_events (event::EventHandle<coin::WithdrawEvent>)]($t22) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:622:9+126
    $t17 := $UpdateMutation($t17, $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_withdraw_events($Dereference($t17), $Dereference($t22)));

    // $t24 := borrow_field<coin::CoinStore<#0>>.coin($t17) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:627:17+20
    assume {:print "$at(106,23973,23993)"} true;
    $t24 := $ChildMutation($t17, 0, $Dereference($t17)->$coin);

    // assume Identical($t25, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:32:9+99
    assume {:print "$at(107,1664,1763)"} true;
    assume ($t25 == $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply);

    // $t26 := coin::extract<#0>($t24, $t1) on_abort goto L7 with $t12 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:627:9+37
    assume {:print "$at(106,23965,24002)"} true;
    call $t26,$t24 := $1_coin_extract'$1_aptos_coin_AptosCoin'($t24, $t1);
    if ($abort_flag) {
        assume {:print "$at(106,23965,24002)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(24,37):", $t12} $t12 == $t12;
        goto L7;
    }

    // write_back[Reference($t17).coin (coin::Coin<#0>)]($t24) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:627:9+37
    $t17 := $UpdateMutation($t17, $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_coin($Dereference($t17), $Dereference($t24)));

    // write_back[coin::CoinStore<#0>@]($t17) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:627:9+37
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t17),
        $Dereference($t17));

    // trace_return[0]($t26) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:627:9+37
    assume {:print "$track_return(24,37,0):", $t26} $t26 == $t26;

    // label L6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:628:5+1
    assume {:print "$at(106,24007,24008)"} true;
L6:

    // return $t26 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:628:5+1
    assume {:print "$at(106,24007,24008)"} true;
    $ret0 := $t26;
    return;

    // label L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:628:5+1
L7:

    // abort($t12) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.move:628:5+1
    assume {:print "$at(106,24007,24008)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// struct aptos_coin::AptosCoin at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\aptos_coin.move:22:5+27
datatype $1_aptos_coin_AptosCoin {
    $1_aptos_coin_AptosCoin($dummy_field: bool)
}
function {:inline} $Update'$1_aptos_coin_AptosCoin'_dummy_field(s: $1_aptos_coin_AptosCoin, x: bool): $1_aptos_coin_AptosCoin {
    $1_aptos_coin_AptosCoin(x)
}
function $IsValid'$1_aptos_coin_AptosCoin'(s: $1_aptos_coin_AptosCoin): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_aptos_coin_AptosCoin'(s1: $1_aptos_coin_AptosCoin, s2: $1_aptos_coin_AptosCoin): bool {
    s1 == s2
}
var $1_aptos_coin_AptosCoin_$memory: $Memory $1_aptos_coin_AptosCoin;

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\chain_status.move:35:5+90
function {:inline} $1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory: $Memory $1_chain_status_GenesisEndMarker): bool {
    $ResourceExists($1_chain_status_GenesisEndMarker_$memory, 1)
}

// struct chain_status::GenesisEndMarker at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\chain_status.move:12:5+34
datatype $1_chain_status_GenesisEndMarker {
    $1_chain_status_GenesisEndMarker($dummy_field: bool)
}
function {:inline} $Update'$1_chain_status_GenesisEndMarker'_dummy_field(s: $1_chain_status_GenesisEndMarker, x: bool): $1_chain_status_GenesisEndMarker {
    $1_chain_status_GenesisEndMarker(x)
}
function $IsValid'$1_chain_status_GenesisEndMarker'(s: $1_chain_status_GenesisEndMarker): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_chain_status_GenesisEndMarker'(s1: $1_chain_status_GenesisEndMarker, s2: $1_chain_status_GenesisEndMarker): bool {
    s1 == s2
}
var $1_chain_status_GenesisEndMarker_$memory: $Memory $1_chain_status_GenesisEndMarker;

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\timestamp.spec.move:23:10+111
function {:inline} $1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory: $Memory $1_timestamp_CurrentTimeMicroseconds): int {
    $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, 1)->$microseconds
}

// struct timestamp::CurrentTimeMicroseconds at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\timestamp.move:12:5+73
datatype $1_timestamp_CurrentTimeMicroseconds {
    $1_timestamp_CurrentTimeMicroseconds($microseconds: int)
}
function {:inline} $Update'$1_timestamp_CurrentTimeMicroseconds'_microseconds(s: $1_timestamp_CurrentTimeMicroseconds, x: int): $1_timestamp_CurrentTimeMicroseconds {
    $1_timestamp_CurrentTimeMicroseconds(x)
}
function $IsValid'$1_timestamp_CurrentTimeMicroseconds'(s: $1_timestamp_CurrentTimeMicroseconds): bool {
    $IsValid'u64'(s->$microseconds)
}
function {:inline} $IsEqual'$1_timestamp_CurrentTimeMicroseconds'(s1: $1_timestamp_CurrentTimeMicroseconds, s2: $1_timestamp_CurrentTimeMicroseconds): bool {
    s1 == s2
}
var $1_timestamp_CurrentTimeMicroseconds_$memory: $Memory $1_timestamp_CurrentTimeMicroseconds;

// fun timestamp::now_microseconds [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\timestamp.move:61:5+153
procedure {:inline 1} $1_timestamp_now_microseconds() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: $1_timestamp_CurrentTimeMicroseconds;
    var $t2: int;
    var $t3: int;
    var $temp_0'u64': int;

    // bytecode translation starts here
    // $t0 := 0x1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\timestamp.move:62:48+16
    assume {:print "$at(155,2511,2527)"} true;
    $t0 := 1;
    assume $IsValid'address'($t0);

    // $t1 := get_global<timestamp::CurrentTimeMicroseconds>($t0) on_abort goto L2 with $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\timestamp.move:62:9+13
    if (!$ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t1 := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(155,2472,2485)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(29,0):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := get_field<timestamp::CurrentTimeMicroseconds>.microseconds($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\timestamp.move:62:9+69
    $t3 := $t1->$microseconds;

    // trace_return[0]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\timestamp.move:62:9+69
    assume {:print "$track_return(29,0,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\timestamp.move:63:5+1
    assume {:print "$at(155,2546,2547)"} true;
L1:

    // return $t3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\timestamp.move:63:5+1
    assume {:print "$at(155,2546,2547)"} true;
    $ret0 := $t3;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\timestamp.move:63:5+1
L2:

    // abort($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\timestamp.move:63:5+1
    assume {:print "$at(155,2546,2547)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun timestamp::now_seconds [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\timestamp.move:67:5+123
procedure {:inline 1} $1_timestamp_now_seconds() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $temp_0'u64': int;

    // bytecode translation starts here
    // $t0 := timestamp::now_microseconds() on_abort goto L2 with $t1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\timestamp.move:68:9+18
    assume {:print "$at(155,2680,2698)"} true;
    call $t0 := $1_timestamp_now_microseconds();
    if ($abort_flag) {
        assume {:print "$at(155,2680,2698)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(29,1):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := 1000000 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\timestamp.move:68:30+23
    $t2 := 1000000;
    assume $IsValid'u64'($t2);

    // $t3 := /($t0, $t2) on_abort goto L2 with $t1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\timestamp.move:68:28+1
    call $t3 := $Div($t0, $t2);
    if ($abort_flag) {
        assume {:print "$at(155,2699,2700)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(29,1):", $t1} $t1 == $t1;
        goto L2;
    }

    // trace_return[0]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\timestamp.move:68:9+44
    assume {:print "$track_return(29,1,0):", $t3} $t3 == $t3;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\timestamp.move:69:5+1
    assume {:print "$at(155,2729,2730)"} true;
L1:

    // return $t3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\timestamp.move:69:5+1
    assume {:print "$at(155,2729,2730)"} true;
    $ret0 := $t3;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\timestamp.move:69:5+1
L2:

    // abort($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\timestamp.move:69:5+1
    assume {:print "$at(155,2729,2730)"} true;
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\hash.spec.move:7:9+50
function  $1_aptos_hash_spec_keccak256(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_keccak256(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\hash.spec.move:12:9+58
function  $1_aptos_hash_spec_sha2_512_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_sha2_512_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\hash.spec.move:17:9+58
function  $1_aptos_hash_spec_sha3_512_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_sha3_512_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\hash.spec.move:22:9+59
function  $1_aptos_hash_spec_ripemd160_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_ripemd160_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\hash.spec.move:27:9+61
function  $1_aptos_hash_spec_blake2b_256_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_blake2b_256_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\reconfiguration.move:154:5+155
function {:inline} $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory: $Memory $1_reconfiguration_Configuration): int {
    $ResourceValue($1_reconfiguration_Configuration_$memory, 1)->$last_reconfiguration_time
}

// struct reconfiguration::Configuration at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\reconfiguration.move:33:5+306
datatype $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration($epoch: int, $last_reconfiguration_time: int, $events: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent')
}
function {:inline} $Update'$1_reconfiguration_Configuration'_epoch(s: $1_reconfiguration_Configuration, x: int): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration(x, s->$last_reconfiguration_time, s->$events)
}
function {:inline} $Update'$1_reconfiguration_Configuration'_last_reconfiguration_time(s: $1_reconfiguration_Configuration, x: int): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration(s->$epoch, x, s->$events)
}
function {:inline} $Update'$1_reconfiguration_Configuration'_events(s: $1_reconfiguration_Configuration, x: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration(s->$epoch, s->$last_reconfiguration_time, x)
}
function $IsValid'$1_reconfiguration_Configuration'(s: $1_reconfiguration_Configuration): bool {
    $IsValid'u64'(s->$epoch)
      && $IsValid'u64'(s->$last_reconfiguration_time)
      && $IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s->$events)
}
function {:inline} $IsEqual'$1_reconfiguration_Configuration'(s1: $1_reconfiguration_Configuration, s2: $1_reconfiguration_Configuration): bool {
    s1 == s2
}
var $1_reconfiguration_Configuration_$memory: $Memory $1_reconfiguration_Configuration;

// struct reconfiguration::NewEpochEvent at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\reconfiguration.move:28:5+64
datatype $1_reconfiguration_NewEpochEvent {
    $1_reconfiguration_NewEpochEvent($epoch: int)
}
function {:inline} $Update'$1_reconfiguration_NewEpochEvent'_epoch(s: $1_reconfiguration_NewEpochEvent, x: int): $1_reconfiguration_NewEpochEvent {
    $1_reconfiguration_NewEpochEvent(x)
}
function $IsValid'$1_reconfiguration_NewEpochEvent'(s: $1_reconfiguration_NewEpochEvent): bool {
    $IsValid'u64'(s->$epoch)
}
function {:inline} $IsEqual'$1_reconfiguration_NewEpochEvent'(s1: $1_reconfiguration_NewEpochEvent, s2: $1_reconfiguration_NewEpochEvent): bool {
    s1 == s2
}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.spec.move:54:10+120
function  $1_string_utils_spec_native_format'u64'(s: int, type_tag: bool, canonicalize: bool, single_line: bool, include_int_types: bool): $1_string_String;
axiom (forall s: int, type_tag: bool, canonicalize: bool, single_line: bool, include_int_types: bool ::
(var $$res := $1_string_utils_spec_native_format'u64'(s, type_tag, canonicalize, single_line, include_int_types);
$IsValid'$1_string_String'($$res)));

// fun string_utils::to_string<u64> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:17:5+98
procedure {:inline 1} $1_string_utils_to_string'u64'(_$t0: int) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t1: bool;
    var $t2: bool;
    var $t3: bool;
    var $t4: bool;
    var $t5: $1_string_String;
    var $t0: int;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[s]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:17:5+1
    assume {:print "$at(74,930,931)"} true;
    assume {:print "$track_local(54,9,0):", $t0} $t0 == $t0;

    // $t1 := false at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:26+5
    assume {:print "$at(74,996,1001)"} true;
    $t1 := false;
    assume $IsValid'bool'($t1);

    // $t2 := false at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:33+5
    $t2 := false;
    assume $IsValid'bool'($t2);

    // $t3 := true at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:40+4
    $t3 := true;
    assume $IsValid'bool'($t3);

    // $t4 := false at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:46+5
    $t4 := false;
    assume $IsValid'bool'($t4);

    // $t5 := opaque begin: string_utils::native_format<#0>($t0, $t1, $t2, $t3, $t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:9+43

    // assume WellFormed($t5) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:9+43
    assume $IsValid'$1_string_String'($t5);

    // assume Eq<string::String>($t5, string_utils::spec_native_format<#0>($t0, $t1, $t2, $t3, $t4)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:9+43
    assume $IsEqual'$1_string_String'($t5, $1_string_utils_spec_native_format'u64'($t0, $t1, $t2, $t3, $t4));

    // $t5 := opaque end: string_utils::native_format<#0>($t0, $t1, $t2, $t3, $t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:9+43

    // trace_return[0]($t5) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:18:9+43
    assume {:print "$track_return(54,9,0):", $t5} $t5 == $t5;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:19:5+1
    assume {:print "$at(74,1027,1028)"} true;
L1:

    // return $t5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\../aptos-stdlib\sources\string_utils.move:19:5+1
    assume {:print "$at(74,1027,1028)"} true;
    $ret0 := $t5;
    return;

}

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:8:10+50
function  $1_object_spec_exists_at'$4_collection_Collection'(object: int): bool;
axiom (forall object: int ::
(var $$res := $1_object_spec_exists_at'$4_collection_Collection'(object);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:8:10+50
function  $1_object_spec_exists_at'$4_token_Token'(object: int): bool;
axiom (forall object: int ::
(var $$res := $1_object_spec_exists_at'$4_token_Token'(object);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:8:10+50
function  $1_object_spec_exists_at'$4_aptos_token_AptosCollection'(object: int): bool;
axiom (forall object: int ::
(var $$res := $1_object_spec_exists_at'$4_aptos_token_AptosCollection'(object);
$IsValid'bool'($$res)));

// spec fun at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:467:10+75
function  $1_object_spec_create_object_address(source: int, seed: Vec (int)): int;
axiom (forall source: int, seed: Vec (int) ::
(var $$res := $1_object_spec_create_object_address(source, seed);
$IsValid'address'($$res)));

// struct object::ConstructorRef at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:126:5+167
datatype $1_object_ConstructorRef {
    $1_object_ConstructorRef($self: int, $can_delete: bool)
}
function {:inline} $Update'$1_object_ConstructorRef'_self(s: $1_object_ConstructorRef, x: int): $1_object_ConstructorRef {
    $1_object_ConstructorRef(x, s->$can_delete)
}
function {:inline} $Update'$1_object_ConstructorRef'_can_delete(s: $1_object_ConstructorRef, x: bool): $1_object_ConstructorRef {
    $1_object_ConstructorRef(s->$self, x)
}
function $IsValid'$1_object_ConstructorRef'(s: $1_object_ConstructorRef): bool {
    $IsValid'address'(s->$self)
      && $IsValid'bool'(s->$can_delete)
}
function {:inline} $IsEqual'$1_object_ConstructorRef'(s1: $1_object_ConstructorRef, s2: $1_object_ConstructorRef): bool {
    s1 == s2
}

// struct object::ExtendRef at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:138:5+63
datatype $1_object_ExtendRef {
    $1_object_ExtendRef($self: int)
}
function {:inline} $Update'$1_object_ExtendRef'_self(s: $1_object_ExtendRef, x: int): $1_object_ExtendRef {
    $1_object_ExtendRef(x)
}
function $IsValid'$1_object_ExtendRef'(s: $1_object_ExtendRef): bool {
    $IsValid'address'(s->$self)
}
function {:inline} $IsEqual'$1_object_ExtendRef'(s1: $1_object_ExtendRef, s2: $1_object_ExtendRef): bool {
    s1 == s2
}

// struct object::Object<collection::Collection> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:121:5+78
datatype $1_object_Object'$4_collection_Collection' {
    $1_object_Object'$4_collection_Collection'($inner: int)
}
function {:inline} $Update'$1_object_Object'$4_collection_Collection''_inner(s: $1_object_Object'$4_collection_Collection', x: int): $1_object_Object'$4_collection_Collection' {
    $1_object_Object'$4_collection_Collection'(x)
}
function $IsValid'$1_object_Object'$4_collection_Collection''(s: $1_object_Object'$4_collection_Collection'): bool {
    $IsValid'address'(s->$inner)
}
function {:inline} $IsEqual'$1_object_Object'$4_collection_Collection''(s1: $1_object_Object'$4_collection_Collection', s2: $1_object_Object'$4_collection_Collection'): bool {
    s1 == s2
}

// struct object::Object<token::Token> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:121:5+78
datatype $1_object_Object'$4_token_Token' {
    $1_object_Object'$4_token_Token'($inner: int)
}
function {:inline} $Update'$1_object_Object'$4_token_Token''_inner(s: $1_object_Object'$4_token_Token', x: int): $1_object_Object'$4_token_Token' {
    $1_object_Object'$4_token_Token'(x)
}
function $IsValid'$1_object_Object'$4_token_Token''(s: $1_object_Object'$4_token_Token'): bool {
    $IsValid'address'(s->$inner)
}
function {:inline} $IsEqual'$1_object_Object'$4_token_Token''(s1: $1_object_Object'$4_token_Token', s2: $1_object_Object'$4_token_Token'): bool {
    s1 == s2
}

// struct object::Object<aptos_token::AptosCollection> at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:121:5+78
datatype $1_object_Object'$4_aptos_token_AptosCollection' {
    $1_object_Object'$4_aptos_token_AptosCollection'($inner: int)
}
function {:inline} $Update'$1_object_Object'$4_aptos_token_AptosCollection''_inner(s: $1_object_Object'$4_aptos_token_AptosCollection', x: int): $1_object_Object'$4_aptos_token_AptosCollection' {
    $1_object_Object'$4_aptos_token_AptosCollection'(x)
}
function $IsValid'$1_object_Object'$4_aptos_token_AptosCollection''(s: $1_object_Object'$4_aptos_token_AptosCollection'): bool {
    $IsValid'address'(s->$inner)
}
function {:inline} $IsEqual'$1_object_Object'$4_aptos_token_AptosCollection''(s1: $1_object_Object'$4_aptos_token_AptosCollection', s2: $1_object_Object'$4_aptos_token_AptosCollection'): bool {
    s1 == s2
}

// struct object::ObjectCore at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:94:5+551
datatype $1_object_ObjectCore {
    $1_object_ObjectCore($guid_creation_num: int, $owner: int, $allow_ungated_transfer: bool, $transfer_events: $1_event_EventHandle'$1_object_TransferEvent')
}
function {:inline} $Update'$1_object_ObjectCore'_guid_creation_num(s: $1_object_ObjectCore, x: int): $1_object_ObjectCore {
    $1_object_ObjectCore(x, s->$owner, s->$allow_ungated_transfer, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_owner(s: $1_object_ObjectCore, x: int): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, x, s->$allow_ungated_transfer, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_allow_ungated_transfer(s: $1_object_ObjectCore, x: bool): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, s->$owner, x, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_transfer_events(s: $1_object_ObjectCore, x: $1_event_EventHandle'$1_object_TransferEvent'): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, s->$owner, s->$allow_ungated_transfer, x)
}
function $IsValid'$1_object_ObjectCore'(s: $1_object_ObjectCore): bool {
    $IsValid'u64'(s->$guid_creation_num)
      && $IsValid'address'(s->$owner)
      && $IsValid'bool'(s->$allow_ungated_transfer)
      && $IsValid'$1_event_EventHandle'$1_object_TransferEvent''(s->$transfer_events)
}
function {:inline} $IsEqual'$1_object_ObjectCore'(s1: $1_object_ObjectCore, s2: $1_object_ObjectCore): bool {
    s1 == s2
}
var $1_object_ObjectCore_$memory: $Memory $1_object_ObjectCore;

// struct object::TransferEvent at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:160:5+113
datatype $1_object_TransferEvent {
    $1_object_TransferEvent($object: int, $from: int, $to: int)
}
function {:inline} $Update'$1_object_TransferEvent'_object(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(x, s->$from, s->$to)
}
function {:inline} $Update'$1_object_TransferEvent'_from(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(s->$object, x, s->$to)
}
function {:inline} $Update'$1_object_TransferEvent'_to(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(s->$object, s->$from, x)
}
function $IsValid'$1_object_TransferEvent'(s: $1_object_TransferEvent): bool {
    $IsValid'address'(s->$object)
      && $IsValid'address'(s->$from)
      && $IsValid'address'(s->$to)
}
function {:inline} $IsEqual'$1_object_TransferEvent'(s1: $1_object_TransferEvent, s2: $1_object_TransferEvent): bool {
    s1 == s2
}

// struct object::TransferRef at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:143:5+65
datatype $1_object_TransferRef {
    $1_object_TransferRef($self: int)
}
function {:inline} $Update'$1_object_TransferRef'_self(s: $1_object_TransferRef, x: int): $1_object_TransferRef {
    $1_object_TransferRef(x)
}
function $IsValid'$1_object_TransferRef'(s: $1_object_TransferRef): bool {
    $IsValid'address'(s->$self)
}
function {:inline} $IsEqual'$1_object_TransferRef'(s1: $1_object_TransferRef, s2: $1_object_TransferRef): bool {
    s1 == s2
}

// fun object::new_event_handle<collection::BurnEvent> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:361:5+180
procedure {:inline 1} $1_object_new_event_handle'$4_collection_BurnEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$4_collection_BurnEvent')
{
    // declare local variables
    var $t1: $1_object_ObjectCore;
    var $t2: $1_guid_GUID;
    var $t3: $1_object_ObjectCore;
    var $t4: $1_guid_GUID;
    var $t5: int;
    var $t6: $1_event_EventHandle'$4_collection_BurnEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$4_collection_BurnEvent'': $1_event_EventHandle'$4_collection_BurnEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, global<object::ObjectCore>(signer::$address_of($t0))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:305:9+65
    assume {:print "$at(136,11825,11890)"} true;
    assume ($t1 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // assume Identical($t2, pack guid::GUID(pack guid::ID(select object::ObjectCore.guid_creation_num($t1), signer::$address_of($t0)))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:308:9+185
    assume {:print "$at(136,11963,12148)"} true;
    assume ($t2 == $1_guid_GUID($1_guid_ID($t1->$guid_creation_num, $1_signer_$address_of($t0))));

    // trace_local[object]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:361:5+1
    assume {:print "$at(135,15916,15917)"} true;
    assume {:print "$track_local(56,33,0):", $t0} $t0 == $t0;

    // assume Identical($t3, global<object::ObjectCore>(signer::$address_of($t0))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:289:9+65
    assume {:print "$at(136,11290,11355)"} true;
    assume ($t3 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // $t4 := object::create_guid($t0) on_abort goto L2 with $t5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:364:33+19
    assume {:print "$at(135,16070,16089)"} true;
    call $t4 := $1_object_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(135,16070,16089)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(56,33):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t6 := event::new_event_handle<#0>($t4) on_abort goto L2 with $t5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:364:9+44
    call $t6 := $1_event_new_event_handle'$4_collection_BurnEvent'($t4);
    if ($abort_flag) {
        assume {:print "$at(135,16046,16090)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(56,33):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_return[0]($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:364:9+44
    assume {:print "$track_return(56,33,0):", $t6} $t6 == $t6;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:365:5+1
    assume {:print "$at(135,16095,16096)"} true;
L1:

    // return $t6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:365:5+1
    assume {:print "$at(135,16095,16096)"} true;
    $ret0 := $t6;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:365:5+1
L2:

    // abort($t5) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:365:5+1
    assume {:print "$at(135,16095,16096)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun object::new_event_handle<collection::MintEvent> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:361:5+180
procedure {:inline 1} $1_object_new_event_handle'$4_collection_MintEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$4_collection_MintEvent')
{
    // declare local variables
    var $t1: $1_object_ObjectCore;
    var $t2: $1_guid_GUID;
    var $t3: $1_object_ObjectCore;
    var $t4: $1_guid_GUID;
    var $t5: int;
    var $t6: $1_event_EventHandle'$4_collection_MintEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$4_collection_MintEvent'': $1_event_EventHandle'$4_collection_MintEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, global<object::ObjectCore>(signer::$address_of($t0))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:305:9+65
    assume {:print "$at(136,11825,11890)"} true;
    assume ($t1 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // assume Identical($t2, pack guid::GUID(pack guid::ID(select object::ObjectCore.guid_creation_num($t1), signer::$address_of($t0)))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:308:9+185
    assume {:print "$at(136,11963,12148)"} true;
    assume ($t2 == $1_guid_GUID($1_guid_ID($t1->$guid_creation_num, $1_signer_$address_of($t0))));

    // trace_local[object]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:361:5+1
    assume {:print "$at(135,15916,15917)"} true;
    assume {:print "$track_local(56,33,0):", $t0} $t0 == $t0;

    // assume Identical($t3, global<object::ObjectCore>(signer::$address_of($t0))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:289:9+65
    assume {:print "$at(136,11290,11355)"} true;
    assume ($t3 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // $t4 := object::create_guid($t0) on_abort goto L2 with $t5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:364:33+19
    assume {:print "$at(135,16070,16089)"} true;
    call $t4 := $1_object_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(135,16070,16089)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(56,33):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t6 := event::new_event_handle<#0>($t4) on_abort goto L2 with $t5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:364:9+44
    call $t6 := $1_event_new_event_handle'$4_collection_MintEvent'($t4);
    if ($abort_flag) {
        assume {:print "$at(135,16046,16090)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(56,33):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_return[0]($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:364:9+44
    assume {:print "$track_return(56,33,0):", $t6} $t6 == $t6;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:365:5+1
    assume {:print "$at(135,16095,16096)"} true;
L1:

    // return $t6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:365:5+1
    assume {:print "$at(135,16095,16096)"} true;
    $ret0 := $t6;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:365:5+1
L2:

    // abort($t5) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:365:5+1
    assume {:print "$at(135,16095,16096)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun object::new_event_handle<collection::MutationEvent> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:361:5+180
procedure {:inline 1} $1_object_new_event_handle'$4_collection_MutationEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$4_collection_MutationEvent')
{
    // declare local variables
    var $t1: $1_object_ObjectCore;
    var $t2: $1_guid_GUID;
    var $t3: $1_object_ObjectCore;
    var $t4: $1_guid_GUID;
    var $t5: int;
    var $t6: $1_event_EventHandle'$4_collection_MutationEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$4_collection_MutationEvent'': $1_event_EventHandle'$4_collection_MutationEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, global<object::ObjectCore>(signer::$address_of($t0))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:305:9+65
    assume {:print "$at(136,11825,11890)"} true;
    assume ($t1 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // assume Identical($t2, pack guid::GUID(pack guid::ID(select object::ObjectCore.guid_creation_num($t1), signer::$address_of($t0)))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:308:9+185
    assume {:print "$at(136,11963,12148)"} true;
    assume ($t2 == $1_guid_GUID($1_guid_ID($t1->$guid_creation_num, $1_signer_$address_of($t0))));

    // trace_local[object]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:361:5+1
    assume {:print "$at(135,15916,15917)"} true;
    assume {:print "$track_local(56,33,0):", $t0} $t0 == $t0;

    // assume Identical($t3, global<object::ObjectCore>(signer::$address_of($t0))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:289:9+65
    assume {:print "$at(136,11290,11355)"} true;
    assume ($t3 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // $t4 := object::create_guid($t0) on_abort goto L2 with $t5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:364:33+19
    assume {:print "$at(135,16070,16089)"} true;
    call $t4 := $1_object_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(135,16070,16089)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(56,33):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t6 := event::new_event_handle<#0>($t4) on_abort goto L2 with $t5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:364:9+44
    call $t6 := $1_event_new_event_handle'$4_collection_MutationEvent'($t4);
    if ($abort_flag) {
        assume {:print "$at(135,16046,16090)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(56,33):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_return[0]($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:364:9+44
    assume {:print "$track_return(56,33,0):", $t6} $t6 == $t6;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:365:5+1
    assume {:print "$at(135,16095,16096)"} true;
L1:

    // return $t6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:365:5+1
    assume {:print "$at(135,16095,16096)"} true;
    $ret0 := $t6;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:365:5+1
L2:

    // abort($t5) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:365:5+1
    assume {:print "$at(135,16095,16096)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun object::new_event_handle<token::MutationEvent> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:361:5+180
procedure {:inline 1} $1_object_new_event_handle'$4_token_MutationEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$4_token_MutationEvent')
{
    // declare local variables
    var $t1: $1_object_ObjectCore;
    var $t2: $1_guid_GUID;
    var $t3: $1_object_ObjectCore;
    var $t4: $1_guid_GUID;
    var $t5: int;
    var $t6: $1_event_EventHandle'$4_token_MutationEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$4_token_MutationEvent'': $1_event_EventHandle'$4_token_MutationEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, global<object::ObjectCore>(signer::$address_of($t0))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:305:9+65
    assume {:print "$at(136,11825,11890)"} true;
    assume ($t1 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // assume Identical($t2, pack guid::GUID(pack guid::ID(select object::ObjectCore.guid_creation_num($t1), signer::$address_of($t0)))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:308:9+185
    assume {:print "$at(136,11963,12148)"} true;
    assume ($t2 == $1_guid_GUID($1_guid_ID($t1->$guid_creation_num, $1_signer_$address_of($t0))));

    // trace_local[object]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:361:5+1
    assume {:print "$at(135,15916,15917)"} true;
    assume {:print "$track_local(56,33,0):", $t0} $t0 == $t0;

    // assume Identical($t3, global<object::ObjectCore>(signer::$address_of($t0))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:289:9+65
    assume {:print "$at(136,11290,11355)"} true;
    assume ($t3 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // $t4 := object::create_guid($t0) on_abort goto L2 with $t5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:364:33+19
    assume {:print "$at(135,16070,16089)"} true;
    call $t4 := $1_object_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(135,16070,16089)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(56,33):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t6 := event::new_event_handle<#0>($t4) on_abort goto L2 with $t5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:364:9+44
    call $t6 := $1_event_new_event_handle'$4_token_MutationEvent'($t4);
    if ($abort_flag) {
        assume {:print "$at(135,16046,16090)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(56,33):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_return[0]($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:364:9+44
    assume {:print "$track_return(56,33,0):", $t6} $t6 == $t6;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:365:5+1
    assume {:print "$at(135,16095,16096)"} true;
L1:

    // return $t6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:365:5+1
    assume {:print "$at(135,16095,16096)"} true;
    $ret0 := $t6;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:365:5+1
L2:

    // abort($t5) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:365:5+1
    assume {:print "$at(135,16095,16096)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun object::create_guid [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:354:5+252
procedure {:inline 1} $1_object_create_guid(_$t0: $signer) returns ($ret0: $1_guid_GUID)
{
    // declare local variables
    var $t1: int;
    var $t2: $Mutation ($1_object_ObjectCore);
    var $t3: $1_object_ObjectCore;
    var $t4: int;
    var $t5: int;
    var $t6: $Mutation ($1_object_ObjectCore);
    var $t7: $Mutation (int);
    var $t8: $1_guid_GUID;
    var $t0: $signer;
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t3, global<object::ObjectCore>(signer::$address_of($t0))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:289:9+65
    assume {:print "$at(136,11290,11355)"} true;
    assume ($t3 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t0)));

    // trace_local[object]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:354:5+1
    assume {:print "$at(135,15621,15622)"} true;
    assume {:print "$track_local(56,7,0):", $t0} $t0 == $t0;

    // $t4 := signer::address_of($t0) on_abort goto L2 with $t5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:355:20+26
    assume {:print "$at(135,15714,15740)"} true;
    call $t4 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(135,15714,15740)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(56,7):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[addr]($t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:355:13+4
    assume {:print "$track_local(56,7,1):", $t4} $t4 == $t4;

    // $t6 := borrow_global<object::ObjectCore>($t4) on_abort goto L2 with $t5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:356:27+17
    assume {:print "$at(135,15768,15785)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $Mutation($Global($t4), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t4));
    }
    if ($abort_flag) {
        assume {:print "$at(135,15768,15785)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(56,7):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[object_data]($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:356:13+11
    $temp_0'$1_object_ObjectCore' := $Dereference($t6);
    assume {:print "$track_local(56,7,2):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t7 := borrow_field<object::ObjectCore>.guid_creation_num($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:357:28+34
    assume {:print "$at(135,15832,15866)"} true;
    $t7 := $ChildMutation($t6, 0, $Dereference($t6)->$guid_creation_num);

    // $t8 := guid::create($t4, $t7) on_abort goto L2 with $t5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:357:9+54
    call $t8,$t7 := $1_guid_create($t4, $t7);
    if ($abort_flag) {
        assume {:print "$at(135,15813,15867)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(56,7):", $t5} $t5 == $t5;
        goto L2;
    }

    // write_back[Reference($t6).guid_creation_num (u64)]($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:357:9+54
    $t6 := $UpdateMutation($t6, $Update'$1_object_ObjectCore'_guid_creation_num($Dereference($t6), $Dereference($t7)));

    // write_back[object::ObjectCore@]($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:357:9+54
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t6),
        $Dereference($t6));

    // trace_return[0]($t8) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:357:9+54
    assume {:print "$track_return(56,7,0):", $t8} $t8 == $t8;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:358:5+1
    assume {:print "$at(135,15872,15873)"} true;
L1:

    // return $t8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:358:5+1
    assume {:print "$at(135,15872,15873)"} true;
    $ret0 := $t8;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:358:5+1
L2:

    // abort($t5) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:358:5+1
    assume {:print "$at(135,15872,15873)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun object::transfer<token::Token> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:456:5+186
procedure {:inline 1} $1_object_transfer'$4_token_Token'(_$t0: $signer, _$t1: $1_object_Object'$4_token_Token', _$t2: int) returns ()
{
    // declare local variables
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t0: $signer;
    var $t1: $1_object_Object'$4_token_Token';
    var $t2: int;
    var $temp_0'$1_object_Object'$4_token_Token'': $1_object_Object'$4_token_Token';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // assume Identical($t3, signer::$address_of($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:371:9+46
    assume {:print "$at(136,13982,14028)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, select object::Object.inner($t1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:372:9+34
    assume {:print "$at(136,14037,14071)"} true;
    assume ($t4 == $t1->$inner);

    // trace_local[owner]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:456:5+1
    assume {:print "$at(135,19162,19163)"} true;
    assume {:print "$track_local(56,40,0):", $t0} $t0 == $t0;

    // trace_local[object]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:456:5+1
    assume {:print "$track_local(56,40,1):", $t1} $t1 == $t1;

    // trace_local[to]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:456:5+1
    assume {:print "$track_local(56,40,2):", $t2} $t2 == $t2;

    // $t5 := get_field<object::Object<#0>>.inner($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:461:29+12
    assume {:print "$at(135,19325,19337)"} true;
    $t5 := $t1->$inner;

    // assume Identical($t6, signer::$address_of($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:384:9+46
    assume {:print "$at(136,14422,14468)"} true;
    assume ($t6 == $1_signer_$address_of($t0));

    // object::transfer_raw($t0, $t5, $t2) on_abort goto L2 with $t7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:461:9+37
    assume {:print "$at(135,19305,19342)"} true;
    call $1_object_transfer_raw($t0, $t5, $t2);
    if ($abort_flag) {
        assume {:print "$at(135,19305,19342)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(56,40):", $t7} $t7 == $t7;
        goto L2;
    }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:462:5+1
    assume {:print "$at(135,19347,19348)"} true;
L1:

    // return () at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:462:5+1
    assume {:print "$at(135,19347,19348)"} true;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:462:5+1
L2:

    // abort($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:462:5+1
    assume {:print "$at(135,19347,19348)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun object::address_to_object<collection::Collection> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:172:5+278
procedure {:inline 1} $1_object_address_to_object'$4_collection_Collection'(_$t0: int) returns ($ret0: $1_object_Object'$4_collection_Collection')
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: $1_object_Object'$4_collection_Collection';
    var $t0: int;
    var $temp_0'$1_object_Object'$4_collection_Collection'': $1_object_Object'$4_collection_Collection';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:172:5+1
    assume {:print "$at(135,7475,7476)"} true;
    assume {:print "$track_local(56,3,0):", $t0} $t0 == $t0;

    // $t1 := exists<object::ObjectCore>($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:17+6
    assume {:print "$at(135,7558,7564)"} true;
    $t1 := $ResourceExists($1_object_ObjectCore_$memory, $t0);

    // if ($t1) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:9+77
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:9+77
L1:

    // goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:9+77
    assume {:print "$at(135,7550,7627)"} true;
    goto L2;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:62+22
L0:

    // $t2 := 2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:62+22
    assume {:print "$at(135,7603,7625)"} true;
    $t2 := 2;
    assume $IsValid'u64'($t2);

    // $t3 := error::not_found($t2) on_abort goto L7 with $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:45+40
    call $t3 := $1_error_not_found($t2);
    if ($abort_flag) {
        assume {:print "$at(135,7586,7626)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(56,3):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:9+77
    assume {:print "$at(135,7550,7627)"} true;
    assume {:print "$track_abort(56,3):", $t3} $t3 == $t3;

    // $t4 := move($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:9+77
    $t4 := $t3;

    // goto L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:9+77
    goto L7;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:30+6
    assume {:print "$at(135,7658,7664)"} true;
L2:

    // $t5 := opaque begin: object::exists_at<#0>($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:17+20
    assume {:print "$at(135,7645,7665)"} true;

    // assume WellFormed($t5) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:17+20
    assume $IsValid'bool'($t5);

    // assume Eq<bool>($t5, object::spec_exists_at<#0>($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:17+20
    assume $IsEqual'bool'($t5, $1_object_spec_exists_at'$4_collection_Collection'($t0));

    // $t5 := opaque end: object::exists_at<#0>($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:17+20

    // if ($t5) goto L4 else goto L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:9+73
    if ($t5) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:9+73
L4:

    // goto L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:9+73
    assume {:print "$at(135,7637,7710)"} true;
    goto L5;

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:56+24
L3:

    // $t6 := 7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:56+24
    assume {:print "$at(135,7684,7708)"} true;
    $t6 := 7;
    assume $IsValid'u64'($t6);

    // $t7 := error::not_found($t6) on_abort goto L7 with $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:39+42
    call $t7 := $1_error_not_found($t6);
    if ($abort_flag) {
        assume {:print "$at(135,7667,7709)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(56,3):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:9+73
    assume {:print "$at(135,7637,7710)"} true;
    assume {:print "$track_abort(56,3):", $t7} $t7 == $t7;

    // $t4 := move($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:9+73
    $t4 := $t7;

    // goto L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:9+73
    goto L7;

    // label L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:175:28+6
    assume {:print "$at(135,7739,7745)"} true;
L5:

    // $t8 := pack object::Object<#0>($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:175:9+27
    assume {:print "$at(135,7720,7747)"} true;
    $t8 := $1_object_Object'$4_collection_Collection'($t0);

    // trace_return[0]($t8) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:175:9+27
    assume {:print "$track_return(56,3,0):", $t8} $t8 == $t8;

    // label L6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:176:5+1
    assume {:print "$at(135,7752,7753)"} true;
L6:

    // return $t8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:176:5+1
    assume {:print "$at(135,7752,7753)"} true;
    $ret0 := $t8;
    return;

    // label L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:176:5+1
L7:

    // abort($t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:176:5+1
    assume {:print "$at(135,7752,7753)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::address_to_object<token::Token> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:172:5+278
procedure {:inline 1} $1_object_address_to_object'$4_token_Token'(_$t0: int) returns ($ret0: $1_object_Object'$4_token_Token')
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: $1_object_Object'$4_token_Token';
    var $t0: int;
    var $temp_0'$1_object_Object'$4_token_Token'': $1_object_Object'$4_token_Token';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:172:5+1
    assume {:print "$at(135,7475,7476)"} true;
    assume {:print "$track_local(56,3,0):", $t0} $t0 == $t0;

    // $t1 := exists<object::ObjectCore>($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:17+6
    assume {:print "$at(135,7558,7564)"} true;
    $t1 := $ResourceExists($1_object_ObjectCore_$memory, $t0);

    // if ($t1) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:9+77
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:9+77
L1:

    // goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:9+77
    assume {:print "$at(135,7550,7627)"} true;
    goto L2;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:62+22
L0:

    // $t2 := 2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:62+22
    assume {:print "$at(135,7603,7625)"} true;
    $t2 := 2;
    assume $IsValid'u64'($t2);

    // $t3 := error::not_found($t2) on_abort goto L7 with $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:45+40
    call $t3 := $1_error_not_found($t2);
    if ($abort_flag) {
        assume {:print "$at(135,7586,7626)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(56,3):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:9+77
    assume {:print "$at(135,7550,7627)"} true;
    assume {:print "$track_abort(56,3):", $t3} $t3 == $t3;

    // $t4 := move($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:9+77
    $t4 := $t3;

    // goto L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:9+77
    goto L7;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:30+6
    assume {:print "$at(135,7658,7664)"} true;
L2:

    // $t5 := opaque begin: object::exists_at<#0>($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:17+20
    assume {:print "$at(135,7645,7665)"} true;

    // assume WellFormed($t5) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:17+20
    assume $IsValid'bool'($t5);

    // assume Eq<bool>($t5, object::spec_exists_at<#0>($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:17+20
    assume $IsEqual'bool'($t5, $1_object_spec_exists_at'$4_token_Token'($t0));

    // $t5 := opaque end: object::exists_at<#0>($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:17+20

    // if ($t5) goto L4 else goto L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:9+73
    if ($t5) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:9+73
L4:

    // goto L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:9+73
    assume {:print "$at(135,7637,7710)"} true;
    goto L5;

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:56+24
L3:

    // $t6 := 7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:56+24
    assume {:print "$at(135,7684,7708)"} true;
    $t6 := 7;
    assume $IsValid'u64'($t6);

    // $t7 := error::not_found($t6) on_abort goto L7 with $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:39+42
    call $t7 := $1_error_not_found($t6);
    if ($abort_flag) {
        assume {:print "$at(135,7667,7709)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(56,3):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:9+73
    assume {:print "$at(135,7637,7710)"} true;
    assume {:print "$track_abort(56,3):", $t7} $t7 == $t7;

    // $t4 := move($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:9+73
    $t4 := $t7;

    // goto L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:9+73
    goto L7;

    // label L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:175:28+6
    assume {:print "$at(135,7739,7745)"} true;
L5:

    // $t8 := pack object::Object<#0>($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:175:9+27
    assume {:print "$at(135,7720,7747)"} true;
    $t8 := $1_object_Object'$4_token_Token'($t0);

    // trace_return[0]($t8) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:175:9+27
    assume {:print "$track_return(56,3,0):", $t8} $t8 == $t8;

    // label L6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:176:5+1
    assume {:print "$at(135,7752,7753)"} true;
L6:

    // return $t8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:176:5+1
    assume {:print "$at(135,7752,7753)"} true;
    $ret0 := $t8;
    return;

    // label L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:176:5+1
L7:

    // abort($t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:176:5+1
    assume {:print "$at(135,7752,7753)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::address_to_object<aptos_token::AptosCollection> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:172:5+278
procedure {:inline 1} $1_object_address_to_object'$4_aptos_token_AptosCollection'(_$t0: int) returns ($ret0: $1_object_Object'$4_aptos_token_AptosCollection')
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: $1_object_Object'$4_aptos_token_AptosCollection';
    var $t0: int;
    var $temp_0'$1_object_Object'$4_aptos_token_AptosCollection'': $1_object_Object'$4_aptos_token_AptosCollection';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:172:5+1
    assume {:print "$at(135,7475,7476)"} true;
    assume {:print "$track_local(56,3,0):", $t0} $t0 == $t0;

    // $t1 := exists<object::ObjectCore>($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:17+6
    assume {:print "$at(135,7558,7564)"} true;
    $t1 := $ResourceExists($1_object_ObjectCore_$memory, $t0);

    // if ($t1) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:9+77
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:9+77
L1:

    // goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:9+77
    assume {:print "$at(135,7550,7627)"} true;
    goto L2;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:62+22
L0:

    // $t2 := 2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:62+22
    assume {:print "$at(135,7603,7625)"} true;
    $t2 := 2;
    assume $IsValid'u64'($t2);

    // $t3 := error::not_found($t2) on_abort goto L7 with $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:45+40
    call $t3 := $1_error_not_found($t2);
    if ($abort_flag) {
        assume {:print "$at(135,7586,7626)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(56,3):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:9+77
    assume {:print "$at(135,7550,7627)"} true;
    assume {:print "$track_abort(56,3):", $t3} $t3 == $t3;

    // $t4 := move($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:9+77
    $t4 := $t3;

    // goto L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:173:9+77
    goto L7;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:30+6
    assume {:print "$at(135,7658,7664)"} true;
L2:

    // $t5 := opaque begin: object::exists_at<#0>($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:17+20
    assume {:print "$at(135,7645,7665)"} true;

    // assume WellFormed($t5) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:17+20
    assume $IsValid'bool'($t5);

    // assume Eq<bool>($t5, object::spec_exists_at<#0>($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:17+20
    assume $IsEqual'bool'($t5, $1_object_spec_exists_at'$4_aptos_token_AptosCollection'($t0));

    // $t5 := opaque end: object::exists_at<#0>($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:17+20

    // if ($t5) goto L4 else goto L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:9+73
    if ($t5) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:9+73
L4:

    // goto L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:9+73
    assume {:print "$at(135,7637,7710)"} true;
    goto L5;

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:56+24
L3:

    // $t6 := 7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:56+24
    assume {:print "$at(135,7684,7708)"} true;
    $t6 := 7;
    assume $IsValid'u64'($t6);

    // $t7 := error::not_found($t6) on_abort goto L7 with $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:39+42
    call $t7 := $1_error_not_found($t6);
    if ($abort_flag) {
        assume {:print "$at(135,7667,7709)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(56,3):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:9+73
    assume {:print "$at(135,7637,7710)"} true;
    assume {:print "$track_abort(56,3):", $t7} $t7 == $t7;

    // $t4 := move($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:9+73
    $t4 := $t7;

    // goto L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:174:9+73
    goto L7;

    // label L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:175:28+6
    assume {:print "$at(135,7739,7745)"} true;
L5:

    // $t8 := pack object::Object<#0>($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:175:9+27
    assume {:print "$at(135,7720,7747)"} true;
    $t8 := $1_object_Object'$4_aptos_token_AptosCollection'($t0);

    // trace_return[0]($t8) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:175:9+27
    assume {:print "$track_return(56,3,0):", $t8} $t8 == $t8;

    // label L6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:176:5+1
    assume {:print "$at(135,7752,7753)"} true;
L6:

    // return $t8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:176:5+1
    assume {:print "$at(135,7752,7753)"} true;
    $ret0 := $t8;
    return;

    // label L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:176:5+1
L7:

    // abort($t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:176:5+1
    assume {:print "$at(135,7752,7753)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::create_named_object [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:226:5+284
procedure {:inline 1} $1_object_create_named_object(_$t0: $signer, _$t1: Vec (int)) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: $1_object_ConstructorRef;
    var $t0: $signer;
    var $t1: Vec (int);
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:102:9+50
    assume {:print "$at(136,3712,3762)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, object::spec_create_object_address($t4, $t1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:103:9+65
    assume {:print "$at(136,3771,3836)"} true;
    assume ($t5 == $1_object_spec_create_object_address($t4, $t1));

    // trace_local[creator]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:226:5+1
    assume {:print "$at(135,9894,9895)"} true;
    assume {:print "$track_local(56,9,0):", $t0} $t0 == $t0;

    // trace_local[seed]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:226:5+1
    assume {:print "$track_local(56,9,1):", $t1} $t1 == $t1;

    // $t6 := signer::address_of($t0) on_abort goto L2 with $t7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:227:31+27
    assume {:print "$at(135,10009,10036)"} true;
    call $t6 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(135,10009,10036)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(56,9):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_local[creator_address]($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:227:13+15
    assume {:print "$track_local(56,9,2):", $t6} $t6 == $t6;

    // $t8 := opaque begin: object::create_object_address($t6, $t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:228:24+45
    assume {:print "$at(135,10061,10106)"} true;

    // assume WellFormed($t8) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:228:24+45
    assume $IsValid'address'($t8);

    // assume Eq<address>($t8, object::spec_create_object_address($t6, $t1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:228:24+45
    assume $IsEqual'address'($t8, $1_object_spec_create_object_address($t6, $t1));

    // $t8 := opaque end: object::create_object_address($t6, $t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:228:24+45

    // trace_local[obj_addr]($t8) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:228:13+8
    assume {:print "$track_local(56,9,3):", $t8} $t8 == $t8;

    // $t9 := false at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:229:59+5
    assume {:print "$at(135,10166,10171)"} true;
    $t9 := false;
    assume $IsValid'bool'($t9);

    // $t10 := object::create_object_internal($t6, $t8, $t9) on_abort goto L2 with $t7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:229:9+56
    call $t10 := $1_object_create_object_internal($t6, $t8, $t9);
    if ($abort_flag) {
        assume {:print "$at(135,10116,10172)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(56,9):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:229:9+56
    assume {:print "$track_return(56,9,0):", $t10} $t10 == $t10;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:230:5+1
    assume {:print "$at(135,10177,10178)"} true;
L1:

    // return $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:230:5+1
    assume {:print "$at(135,10177,10178)"} true;
    $ret0 := $t10;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:230:5+1
L2:

    // abort($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:230:5+1
    assume {:print "$at(135,10177,10178)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun object::create_object_internal [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:285:5+766
procedure {:inline 1} $1_object_create_object_internal(_$t0: int, _$t1: int, _$t2: bool) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t3: int;
    var $t4: $signer;
    var $t5: $1_guid_GUID;
    var $t6: bool;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: $signer;
    var $t12: int;
    var $t13: $Mutation (int);
    var $t14: $1_guid_GUID;
    var $t15: int;
    var $t16: bool;
    var $t17: $1_event_EventHandle'$1_object_TransferEvent';
    var $t18: $1_object_ObjectCore;
    var $t19: $1_object_ConstructorRef;
    var $t0: int;
    var $t1: int;
    var $t2: bool;
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[creator_address]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:285:5+1
    assume {:print "$at(135,13121,13122)"} true;
    assume {:print "$track_local(56,15,0):", $t0} $t0 == $t0;

    // trace_local[object]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:285:5+1
    assume {:print "$track_local(56,15,1):", $t1} $t1 == $t1;

    // trace_local[can_delete]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:285:5+1
    assume {:print "$track_local(56,15,2):", $t2} $t2 == $t2;

    // $t6 := exists<object::ObjectCore>($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:290:18+6
    assume {:print "$at(135,13275,13281)"} true;
    $t6 := $ResourceExists($1_object_ObjectCore_$memory, $t1);

    // $t7 := !($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:290:17+1
    call $t7 := $Not($t6);

    // if ($t7) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:290:9+75
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:290:9+75
L1:

    // goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:290:9+75
    assume {:print "$at(135,13266,13341)"} true;
    goto L2;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:290:68+14
L0:

    // $t8 := 1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:290:68+14
    assume {:print "$at(135,13325,13339)"} true;
    $t8 := 1;
    assume $IsValid'u64'($t8);

    // $t9 := error::already_exists($t8) on_abort goto L4 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:290:46+37
    call $t9 := $1_error_already_exists($t8);
    if ($abort_flag) {
        assume {:print "$at(135,13303,13340)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(56,15):", $t10} $t10 == $t10;
        goto L4;
    }

    // trace_abort($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:290:9+75
    assume {:print "$at(135,13266,13341)"} true;
    assume {:print "$track_abort(56,15):", $t9} $t9 == $t9;

    // $t10 := move($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:290:9+75
    $t10 := $t9;

    // goto L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:290:9+75
    goto L4;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:292:43+6
    assume {:print "$at(135,13386,13392)"} true;
L2:

    // $t11 := opaque begin: create_signer::create_signer($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:292:29+21
    assume {:print "$at(135,13372,13393)"} true;

    // assume WellFormed($t11) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:292:29+21
    assume $IsValid'signer'($t11) && $1_signer_is_txn_signer($t11) && $1_signer_is_txn_signer_addr($t11->$addr);

    // assume Eq<address>(signer::$address_of($t11), $t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:292:29+21
    assume $IsEqual'address'($1_signer_$address_of($t11), $t1);

    // $t11 := opaque end: create_signer::create_signer($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:292:29+21

    // trace_local[object_signer]($t11) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:292:13+13
    assume {:print "$track_local(56,15,4):", $t11} $t11 == $t11;

    // $t12 := 1125899906842624 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:293:33+22
    assume {:print "$at(135,13427,13449)"} true;
    $t12 := 1125899906842624;
    assume $IsValid'u64'($t12);

    // $t3 := $t12 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:293:13+17
    $t3 := $t12;

    // trace_local[guid_creation_num]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:293:13+17
    assume {:print "$track_local(56,15,3):", $t3} $t3 == $t3;

    // $t13 := borrow_local($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:294:57+22
    assume {:print "$at(135,13507,13529)"} true;
    $t13 := $Mutation($Local(3), EmptyVec(), $t3);

    // $t14 := guid::create($t1, $t13) on_abort goto L4 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:294:36+44
    call $t14,$t13 := $1_guid_create($t1, $t13);
    if ($abort_flag) {
        assume {:print "$at(135,13486,13530)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(56,15):", $t10} $t10 == $t10;
        goto L4;
    }

    // write_back[LocalRoot($t3)@]($t13) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:294:36+44
    $t3 := $Dereference($t13);

    // trace_local[guid_creation_num]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:294:36+44
    assume {:print "$track_local(56,15,3):", $t3} $t3 == $t3;

    // trace_local[transfer_events_guid]($t14) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:294:13+20
    assume {:print "$track_local(56,15,5):", $t14} $t14 == $t14;

    // $t15 := move($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:299:17+17
    assume {:print "$at(135,13619,13636)"} true;
    $t15 := $t3;

    // $t16 := true at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:301:41+4
    assume {:print "$at(135,13718,13722)"} true;
    $t16 := true;
    assume $IsValid'bool'($t16);

    // $t17 := event::new_event_handle<object::TransferEvent>($t14) on_abort goto L4 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:302:34+45
    assume {:print "$at(135,13757,13802)"} true;
    call $t17 := $1_event_new_event_handle'$1_object_TransferEvent'($t14);
    if ($abort_flag) {
        assume {:print "$at(135,13757,13802)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(56,15):", $t10} $t10 == $t10;
        goto L4;
    }

    // $t18 := pack object::ObjectCore($t15, $t0, $t16, $t17) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:298:13+227
    assume {:print "$at(135,13590,13817)"} true;
    $t18 := $1_object_ObjectCore($t15, $t0, $t16, $t17);

    // move_to<object::ObjectCore>($t18, $t11) on_abort goto L4 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:296:9+7
    assume {:print "$at(135,13541,13548)"} true;
    if ($ResourceExists($1_object_ObjectCore_$memory, $t11->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $t11->$addr, $t18);
    }
    if ($abort_flag) {
        assume {:print "$at(135,13541,13548)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(56,15):", $t10} $t10 == $t10;
        goto L4;
    }

    // $t19 := pack object::ConstructorRef($t1, $t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:305:9+43
    assume {:print "$at(135,13838,13881)"} true;
    $t19 := $1_object_ConstructorRef($t1, $t2);

    // trace_return[0]($t19) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:305:9+43
    assume {:print "$track_return(56,15,0):", $t19} $t19 == $t19;

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:306:5+1
    assume {:print "$at(135,13886,13887)"} true;
L3:

    // return $t19 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:306:5+1
    assume {:print "$at(135,13886,13887)"} true;
    $ret0 := $t19;
    return;

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:306:5+1
L4:

    // abort($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:306:5+1
    assume {:print "$at(135,13886,13887)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun object::disable_ungated_transfer [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:406:5+191
procedure {:inline 1} $1_object_disable_ungated_transfer(_$t0: $1_object_TransferRef) returns ()
{
    // declare local variables
    var $t1: $Mutation ($1_object_ObjectCore);
    var $t2: int;
    var $t3: $Mutation ($1_object_ObjectCore);
    var $t4: int;
    var $t5: bool;
    var $t6: $Mutation (bool);
    var $t0: $1_object_TransferRef;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:406:5+1
    assume {:print "$at(135,17301,17302)"} true;
    assume {:print "$track_local(56,20,0):", $t0} $t0 == $t0;

    // $t2 := get_field<object::TransferRef>.self($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:407:52+8
    assume {:print "$at(135,17429,17437)"} true;
    $t2 := $t0->$self;

    // $t3 := borrow_global<object::ObjectCore>($t2) on_abort goto L2 with $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:407:22+17
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t2)) {
        call $ExecFailureAbort();
    } else {
        $t3 := $Mutation($Global($t2), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t2));
    }
    if ($abort_flag) {
        assume {:print "$at(135,17399,17416)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(56,20):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[object]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:407:13+6
    $temp_0'$1_object_ObjectCore' := $Dereference($t3);
    assume {:print "$track_local(56,20,1):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t5 := false at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:408:41+5
    assume {:print "$at(135,17480,17485)"} true;
    $t5 := false;
    assume $IsValid'bool'($t5);

    // $t6 := borrow_field<object::ObjectCore>.allow_ungated_transfer($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:408:9+29
    $t6 := $ChildMutation($t3, 2, $Dereference($t3)->$allow_ungated_transfer);

    // write_ref($t6, $t5) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:408:9+37
    $t6 := $UpdateMutation($t6, $t5);

    // write_back[Reference($t3).allow_ungated_transfer (bool)]($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:408:9+37
    $t3 := $UpdateMutation($t3, $Update'$1_object_ObjectCore'_allow_ungated_transfer($Dereference($t3), $Dereference($t6)));

    // write_back[object::ObjectCore@]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:408:9+37
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t3),
        $Dereference($t3));

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:409:5+1
    assume {:print "$at(135,17491,17492)"} true;
L1:

    // return () at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:409:5+1
    assume {:print "$at(135,17491,17492)"} true;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:409:5+1
L2:

    // abort($t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:409:5+1
    assume {:print "$at(135,17491,17492)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::generate_extend_ref [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:317:5+108
procedure {:inline 1} $1_object_generate_extend_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_ExtendRef)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_ExtendRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_ExtendRef': $1_object_ExtendRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:317:5+1
    assume {:print "$at(135,14298,14299)"} true;
    assume {:print "$track_local(56,25,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:318:27+8
    assume {:print "$at(135,14390,14398)"} true;
    $t1 := $t0->$self;

    // $t2 := pack object::ExtendRef($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:318:9+28
    $t2 := $1_object_ExtendRef($t1);

    // trace_return[0]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:318:9+28
    assume {:print "$track_return(56,25,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:319:5+1
    assume {:print "$at(135,14405,14406)"} true;
L1:

    // return $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:319:5+1
    assume {:print "$at(135,14405,14406)"} true;
    $ret0 := $t2;
    return;

}

// fun object::generate_signer [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:332:5+96
procedure {:inline 1} $1_object_generate_signer(_$t0: $1_object_ConstructorRef) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: int;
    var $t2: $signer;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:332:5+1
    assume {:print "$at(135,14889,14890)"} true;
    assume {:print "$track_local(56,27,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:333:23+8
    assume {:print "$at(135,14970,14978)"} true;
    $t1 := $t0->$self;

    // $t2 := opaque begin: create_signer::create_signer($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:333:9+23

    // assume WellFormed($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:333:9+23
    assume $IsValid'signer'($t2) && $1_signer_is_txn_signer($t2) && $1_signer_is_txn_signer_addr($t2->$addr);

    // assume Eq<address>(signer::$address_of($t2), $t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:333:9+23
    assume $IsEqual'address'($1_signer_$address_of($t2), $t1);

    // $t2 := opaque end: create_signer::create_signer($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:333:9+23

    // trace_return[0]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:333:9+23
    assume {:print "$track_return(56,27,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:334:5+1
    assume {:print "$at(135,14984,14985)"} true;
L1:

    // return $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:334:5+1
    assume {:print "$at(135,14984,14985)"} true;
    $ret0 := $t2;
    return;

}

// fun object::generate_transfer_ref [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:322:5+114
procedure {:inline 1} $1_object_generate_transfer_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_TransferRef)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_TransferRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:322:5+1
    assume {:print "$at(135,14493,14494)"} true;
    assume {:print "$track_local(56,29,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:323:29+8
    assume {:print "$at(135,14591,14599)"} true;
    $t1 := $t0->$self;

    // $t2 := pack object::TransferRef($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:323:9+30
    $t2 := $1_object_TransferRef($t1);

    // trace_return[0]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:323:9+30
    assume {:print "$track_return(56,29,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:324:5+1
    assume {:print "$at(135,14606,14607)"} true;
L1:

    // return $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:324:5+1
    assume {:print "$at(135,14606,14607)"} true;
    $ret0 := $t2;
    return;

}

// fun object::object_address<collection::Collection> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:215:5+91
procedure {:inline 1} $1_object_object_address'$4_collection_Collection'(_$t0: $1_object_Object'$4_collection_Collection') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_object_Object'$4_collection_Collection';
    var $temp_0'$1_object_Object'$4_collection_Collection'': $1_object_Object'$4_collection_Collection';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:215:5+1
    assume {:print "$at(135,9436,9437)"} true;
    assume {:print "$track_local(56,34,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::Object<#0>>.inner($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:216:9+12
    assume {:print "$at(135,9509,9521)"} true;
    $t1 := $t0->$inner;

    // trace_return[0]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:216:9+12
    assume {:print "$track_return(56,34,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:217:5+1
    assume {:print "$at(135,9526,9527)"} true;
L1:

    // return $t1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:217:5+1
    assume {:print "$at(135,9526,9527)"} true;
    $ret0 := $t1;
    return;

}

// fun object::object_from_constructor_ref<collection::Collection> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:342:5+126
procedure {:inline 1} $1_object_object_from_constructor_ref'$4_collection_Collection'(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_Object'$4_collection_Collection')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$4_collection_Collection';
    var $t3: int;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$4_collection_Collection'': $1_object_Object'$4_collection_Collection';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:342:5+1
    assume {:print "$at(135,15210,15211)"} true;
    assume {:print "$track_local(56,36,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:343:30+8
    assume {:print "$at(135,15321,15329)"} true;
    $t1 := $t0->$self;

    // $t2 := object::address_to_object<#0>($t1) on_abort goto L2 with $t3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:343:9+30
    call $t2 := $1_object_address_to_object'$4_collection_Collection'($t1);
    if ($abort_flag) {
        assume {:print "$at(135,15300,15330)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(56,36):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:343:9+30
    assume {:print "$track_return(56,36,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:344:5+1
    assume {:print "$at(135,15335,15336)"} true;
L1:

    // return $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:344:5+1
    assume {:print "$at(135,15335,15336)"} true;
    $ret0 := $t2;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:344:5+1
L2:

    // abort($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:344:5+1
    assume {:print "$at(135,15335,15336)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun object::object_from_constructor_ref<token::Token> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:342:5+126
procedure {:inline 1} $1_object_object_from_constructor_ref'$4_token_Token'(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_Object'$4_token_Token')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$4_token_Token';
    var $t3: int;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$4_token_Token'': $1_object_Object'$4_token_Token';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:342:5+1
    assume {:print "$at(135,15210,15211)"} true;
    assume {:print "$track_local(56,36,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:343:30+8
    assume {:print "$at(135,15321,15329)"} true;
    $t1 := $t0->$self;

    // $t2 := object::address_to_object<#0>($t1) on_abort goto L2 with $t3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:343:9+30
    call $t2 := $1_object_address_to_object'$4_token_Token'($t1);
    if ($abort_flag) {
        assume {:print "$at(135,15300,15330)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(56,36):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:343:9+30
    assume {:print "$track_return(56,36,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:344:5+1
    assume {:print "$at(135,15335,15336)"} true;
L1:

    // return $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:344:5+1
    assume {:print "$at(135,15335,15336)"} true;
    $ret0 := $t2;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:344:5+1
L2:

    // abort($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:344:5+1
    assume {:print "$at(135,15335,15336)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun object::object_from_constructor_ref<aptos_token::AptosCollection> [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:342:5+126
procedure {:inline 1} $1_object_object_from_constructor_ref'$4_aptos_token_AptosCollection'(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_Object'$4_aptos_token_AptosCollection')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$4_aptos_token_AptosCollection';
    var $t3: int;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$4_aptos_token_AptosCollection'': $1_object_Object'$4_aptos_token_AptosCollection';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:342:5+1
    assume {:print "$at(135,15210,15211)"} true;
    assume {:print "$track_local(56,36,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:343:30+8
    assume {:print "$at(135,15321,15329)"} true;
    $t1 := $t0->$self;

    // $t2 := object::address_to_object<#0>($t1) on_abort goto L2 with $t3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:343:9+30
    call $t2 := $1_object_address_to_object'$4_aptos_token_AptosCollection'($t1);
    if ($abort_flag) {
        assume {:print "$at(135,15300,15330)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(56,36):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:343:9+30
    assume {:print "$track_return(56,36,0):", $t2} $t2 == $t2;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:344:5+1
    assume {:print "$at(135,15335,15336)"} true;
L1:

    // return $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:344:5+1
    assume {:print "$at(135,15335,15336)"} true;
    $ret0 := $t2;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:344:5+1
L2:

    // abort($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:344:5+1
    assume {:print "$at(135,15335,15336)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun object::transfer_raw [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:468:5+285
procedure {:inline 1} $1_object_transfer_raw(_$t0: $signer, _$t1: int, _$t2: int) returns ()
{
    // declare local variables
    var $t3: int;
    var $t4: $Mutation ($1_object_ObjectCore);
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation ($1_object_ObjectCore);
    var $t10: int;
    var $t11: bool;
    var $t12: $Mutation ($1_event_EventHandle'$1_object_TransferEvent');
    var $t13: int;
    var $t14: $1_object_TransferEvent;
    var $t15: $Mutation (int);
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // assume Identical($t6, signer::$address_of($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:384:9+46
    assume {:print "$at(136,14422,14468)"} true;
    assume ($t6 == $1_signer_$address_of($t0));

    // trace_local[owner]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:468:5+1
    assume {:print "$at(135,19649,19650)"} true;
    assume {:print "$track_local(56,42,0):", $t0} $t0 == $t0;

    // trace_local[object]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:468:5+1
    assume {:print "$track_local(56,42,1):", $t1} $t1 == $t1;

    // trace_local[to]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:468:5+1
    assume {:print "$track_local(56,42,2):", $t2} $t2 == $t2;

    // $t7 := signer::address_of($t0) on_abort goto L4 with $t8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:473:29+25
    assume {:print "$at(135,19800,19825)"} true;
    call $t7 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(135,19800,19825)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(56,42):", $t8} $t8 == $t8;
        goto L4;
    }

    // object::verify_ungated_and_descendant($t7, $t1) on_abort goto L4 with $t8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:474:9+52
    assume {:print "$at(135,19835,19887)"} true;
    call $1_object_verify_ungated_and_descendant($t7, $t1);
    if ($abort_flag) {
        assume {:print "$at(135,19835,19887)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(56,42):", $t8} $t8 == $t8;
        goto L4;
    }

    // trace_local[to#166]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:478:52+2
    assume {:print "$at(135,19987,19989)"} true;
    assume {:print "$track_local(56,42,5):", $t2} $t2 == $t2;

    // trace_local[object#165]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:478:35+6
    assume {:print "$track_local(56,42,3):", $t1} $t1 == $t1;

    // $t9 := borrow_global<object::ObjectCore>($t1) on_abort goto L4 with $t8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:479:27+17
    assume {:print "$at(135,20048,20065)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(135,20048,20065)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(56,42):", $t8} $t8 == $t8;
        goto L4;
    }

    // trace_local[object_core#167]($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:479:13+11
    $temp_0'$1_object_ObjectCore' := $Dereference($t9);
    assume {:print "$track_local(56,42,4):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t10 := get_field<object::ObjectCore>.owner($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:480:13+17
    assume {:print "$at(135,20099,20116)"} true;
    $t10 := $Dereference($t9)->$owner;

    // $t11 := !=($t10, $t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:480:31+2
    $t11 := !$IsEqual'address'($t10, $t2);

    // if ($t11) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:480:9+320
    if ($t11) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:482:22+11
    assume {:print "$at(135,20178,20189)"} true;
L1:

    // $t12 := borrow_field<object::ObjectCore>.transfer_events($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:482:17+32
    assume {:print "$at(135,20173,20205)"} true;
    $t12 := $ChildMutation($t9, 3, $Dereference($t9)->$transfer_events);

    // $t13 := get_field<object::ObjectCore>.owner($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:485:27+17
    assume {:print "$at(135,20293,20310)"} true;
    $t13 := $Dereference($t9)->$owner;

    // $t14 := pack object::TransferEvent($t1, $t13, $t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:483:17+130
    assume {:print "$at(135,20223,20353)"} true;
    $t14 := $1_object_TransferEvent($t1, $t13, $t2);

    // opaque begin: event::emit_event<object::TransferEvent>($t12, $t14) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:481:13+230
    assume {:print "$at(135,20138,20368)"} true;

    // opaque end: event::emit_event<object::TransferEvent>($t12, $t14) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:481:13+230

    // write_back[Reference($t9).transfer_events (event::EventHandle<object::TransferEvent>)]($t12) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:481:13+230
    $t9 := $UpdateMutation($t9, $Update'$1_object_ObjectCore'_transfer_events($Dereference($t9), $Dereference($t12)));

    // $t15 := borrow_field<object::ObjectCore>.owner($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:489:13+17
    assume {:print "$at(135,20382,20399)"} true;
    $t15 := $ChildMutation($t9, 1, $Dereference($t9)->$owner);

    // write_ref($t15, $t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:489:13+22
    $t15 := $UpdateMutation($t15, $t2);

    // write_back[Reference($t9).owner (address)]($t15) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:489:13+22
    $t9 := $UpdateMutation($t9, $Update'$1_object_ObjectCore'_owner($Dereference($t9), $Dereference($t15)));

    // write_back[object::ObjectCore@]($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:489:13+22
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:489:35+1
    goto L2;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:480:9+320
    assume {:print "$at(135,20095,20415)"} true;
L0:

    // destroy($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:480:9+320
    assume {:print "$at(135,20095,20415)"} true;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:475:39+1
    assume {:print "$at(135,19927,19928)"} true;
L2:

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:476:5+1
    assume {:print "$at(135,19933,19934)"} true;
L3:

    // return () at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:476:5+1
    assume {:print "$at(135,19933,19934)"} true;
    return;

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:476:5+1
L4:

    // abort($t8) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:476:5+1
    assume {:print "$at(135,19933,19934)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun object::verify_ungated_and_descendant [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:505:5+1749
procedure {:inline 1} $1_object_verify_ungated_and_descendant(_$t0: int, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: $1_object_ObjectCore;
    var $t6: $1_object_ObjectCore;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: $1_object_ObjectCore;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: bool;
    var $t22: bool;
    var $t23: $1_object_ObjectCore;
    var $t24: bool;
    var $t25: int;
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t29: int;
    var $t30: int;
    var $t31: int;
    var $t0: int;
    var $t1: int;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'address': int;
    var $temp_0'u8': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:505:5+1
    assume {:print "$at(135,20967,20968)"} true;
    assume {:print "$track_local(56,47,0):", $t0} $t0 == $t0;

    // trace_local[destination]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:505:5+1
    assume {:print "$track_local(56,47,1):", $t1} $t1 == $t1;

    // trace_local[current_address]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:506:13+15
    assume {:print "$at(135,21073,21088)"} true;
    assume {:print "$track_local(56,47,3):", $t1} $t1 == $t1;

    // $t7 := exists<object::ObjectCore>($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:508:13+6
    assume {:print "$at(135,21133,21139)"} true;
    $t7 := $ResourceExists($1_object_ObjectCore_$memory, $t1);

    // if ($t7) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:507:9+121
    assume {:print "$at(135,21112,21233)"} true;
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:507:9+121
L1:

    // goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:507:9+121
    assume {:print "$at(135,21112,21233)"} true;
    goto L2;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:509:30+22
    assume {:print "$at(135,21199,21221)"} true;
L0:

    // $t8 := 2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:509:30+22
    assume {:print "$at(135,21199,21221)"} true;
    $t8 := 2;
    assume $IsValid'u64'($t8);

    // $t9 := error::not_found($t8) on_abort goto L21 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:509:13+40
    call $t9 := $1_error_not_found($t8);
    if ($abort_flag) {
        assume {:print "$at(135,21182,21222)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(56,47):", $t10} $t10 == $t10;
        goto L21;
    }

    // trace_abort($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:507:9+121
    assume {:print "$at(135,21112,21233)"} true;
    assume {:print "$track_abort(56,47):", $t9} $t9 == $t9;

    // $t10 := move($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:507:9+121
    $t10 := $t9;

    // goto L21 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:507:9+121
    goto L21;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:512:48+15
    assume {:print "$at(135,21283,21298)"} true;
L2:

    // $t11 := get_global<object::ObjectCore>($t1) on_abort goto L21 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:512:22+13
    assume {:print "$at(135,21257,21270)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $ResourceValue($1_object_ObjectCore_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(135,21257,21270)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(56,47):", $t10} $t10 == $t10;
        goto L21;
    }

    // trace_local[object]($t11) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:512:13+6
    assume {:print "$track_local(56,47,5):", $t11} $t11 == $t11;

    // $t12 := get_field<object::ObjectCore>.allow_ungated_transfer($t11) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:514:13+29
    assume {:print "$at(135,21330,21359)"} true;
    $t12 := $t11->$allow_ungated_transfer;

    // if ($t12) goto L4 else goto L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:513:9+122
    assume {:print "$at(135,21309,21431)"} true;
    if ($t12) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:513:9+122
L4:

    // goto L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:513:9+122
    assume {:print "$at(135,21309,21431)"} true;
    goto L5;

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:513:9+122
L3:

    // $t13 := 3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:515:38+21
    assume {:print "$at(135,21398,21419)"} true;
    $t13 := 3;
    assume $IsValid'u64'($t13);

    // $t14 := error::permission_denied($t13) on_abort goto L21 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:515:13+47
    call $t14 := $1_error_permission_denied($t13);
    if ($abort_flag) {
        assume {:print "$at(135,21373,21420)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(56,47):", $t10} $t10 == $t10;
        goto L21;
    }

    // trace_abort($t14) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:513:9+122
    assume {:print "$at(135,21309,21431)"} true;
    assume {:print "$track_abort(56,47):", $t14} $t14 == $t14;

    // $t10 := move($t14) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:513:9+122
    $t10 := $t14;

    // goto L21 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:513:9+122
    goto L21;

    // label L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:518:31+6
    assume {:print "$at(135,21464,21470)"} true;
L5:

    // $t15 := get_field<object::ObjectCore>.owner($t11) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:518:31+12
    assume {:print "$at(135,21464,21476)"} true;
    $t15 := $t11->$owner;

    // trace_local[current_address#1]($t15) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:518:13+15
    assume {:print "$track_local(56,47,4):", $t15} $t15 == $t15;

    // $t16 := 0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:519:21+1
    assume {:print "$at(135,21498,21499)"} true;
    $t16 := 0;
    assume $IsValid'u8'($t16);

    // trace_local[count]($t16) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:519:13+5
    assume {:print "$track_local(56,47,2):", $t16} $t16 == $t16;

    // label L18 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:521:13+402
    assume {:print "$at(135,21530,21932)"} true;
L18:

    // assert Lt($t16, 8) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:522:17+41
    assume {:print "$at(135,21553,21594)"} true;
    assert {:msg "assert_failed(135,21553,21594): base case of the loop invariant does not hold"}
      ($t16 < 8);

    // assert forall i: num: Range(0, $t16): And(exists<object::ObjectCore>($t15), select object::ObjectCore.allow_ungated_transfer(global<object::ObjectCore>($t15))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    assume {:print "$at(135,21611,21761)"} true;
    assert {:msg "assert_failed(135,21611,21761): base case of the loop invariant does not hold"}
      (var $range_0 := $Range(0, $t16); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (($ResourceExists($1_object_ObjectCore_$memory, $t15) && $ResourceValue($1_object_ObjectCore_$memory, $t15)->$allow_ungated_transfer)))));

    // $t4 := havoc[val]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    havoc $t4;

    // assume WellFormed($t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    assume $IsValid'address'($t4);

    // $t17 := havoc[val]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    havoc $t17;

    // assume WellFormed($t17) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    assume $IsValid'bool'($t17);

    // $t18 := havoc[val]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    havoc $t18;

    // assume WellFormed($t18) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    assume $IsValid'u8'($t18);

    // $t19 := havoc[val]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    havoc $t19;

    // assume WellFormed($t19) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    assume $IsValid'u8'($t19);

    // $t20 := havoc[val]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    havoc $t20;

    // assume WellFormed($t20) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    assume $IsValid'u8'($t20);

    // $t21 := havoc[val]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    havoc $t21;

    // assume WellFormed($t21) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    assume $IsValid'bool'($t21);

    // $t22 := havoc[val]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    havoc $t22;

    // assume WellFormed($t22) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    assume $IsValid'bool'($t22);

    // $t23 := havoc[val]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    havoc $t23;

    // assume WellFormed($t23) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    assume $IsValid'$1_object_ObjectCore'($t23);

    // $t24 := havoc[val]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    havoc $t24;

    // assume WellFormed($t24) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    assume $IsValid'bool'($t24);

    // $t25 := havoc[val]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    havoc $t25;

    // assume WellFormed($t25) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    assume $IsValid'address'($t25);

    // trace_local[current_address#1]($t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    assume {:print "$info(): enter loop, variable(s) current_address#1 havocked and reassigned"} true;
    assume {:print "$track_local(56,47,4):", $t4} $t4 == $t4;

    // assume Not(AbortFlag()) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    assume {:print "$info(): loop invariant holds at current state"} true;
    assume !$abort_flag;

    // assume Lt($t16, 8) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:522:17+41
    assume {:print "$at(135,21553,21594)"} true;
    assume ($t16 < 8);

    // assume forall i: num: Range(0, $t16): And(exists<object::ObjectCore>($t4), select object::ObjectCore.allow_ungated_transfer(global<object::ObjectCore>($t4))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    assume {:print "$at(135,21611,21761)"} true;
    assume (var $range_0 := $Range(0, $t16); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (($ResourceExists($1_object_ObjectCore_$memory, $t4) && $ResourceValue($1_object_ObjectCore_$memory, $t4)->$allow_ungated_transfer)))));

    // $t17 := !=($t0, $t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:528:19+2
    assume {:print "$at(135,21952,21954)"} true;
    $t17 := !$IsEqual'address'($t0, $t4);

    // if ($t17) goto L7 else goto L6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:520:9+1200
    assume {:print "$at(135,21509,22709)"} true;
    if ($t17) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:520:9+1200
L7:

    // label L8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:530:25+5
    assume {:print "$at(135,22008,22013)"} true;
L8:

    // $t18 := 1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:530:33+1
    assume {:print "$at(135,22016,22017)"} true;
    $t18 := 1;
    assume $IsValid'u8'($t18);

    // $t19 := +($t16, $t18) on_abort goto L21 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:530:31+1
    call $t19 := $AddU8($t16, $t18);
    if ($abort_flag) {
        assume {:print "$at(135,22014,22015)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(56,47):", $t10} $t10 == $t10;
        goto L21;
    }

    // $t20 := 8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:531:29+22
    assume {:print "$at(135,22047,22069)"} true;
    $t20 := 8;
    assume $IsValid'u8'($t20);

    // $t21 := <($t19, $t20) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:531:27+1
    call $t21 := $Lt($t19, $t20);

    // if ($t21) goto L10 else goto L9 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:531:13+78
    if ($t21) { goto L10; } else { goto L9; }

    // label L10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:531:13+78
L10:

    // goto L11 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:531:13+78
    assume {:print "$at(135,22031,22109)"} true;
    goto L11;

    // label L9 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:531:73+16
L9:

    // $t26 := 6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:531:73+16
    assume {:print "$at(135,22091,22107)"} true;
    $t26 := 6;
    assume $IsValid'u64'($t26);

    // $t27 := error::out_of_range($t26) on_abort goto L21 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:531:53+37
    call $t27 := $1_error_out_of_range($t26);
    if ($abort_flag) {
        assume {:print "$at(135,22071,22108)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(56,47):", $t10} $t10 == $t10;
        goto L21;
    }

    // trace_abort($t27) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:531:13+78
    assume {:print "$at(135,22031,22109)"} true;
    assume {:print "$track_abort(56,47):", $t27} $t27 == $t27;

    // $t10 := move($t27) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:531:13+78
    $t10 := $t27;

    // goto L21 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:531:13+78
    goto L21;

    // label L11 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:535:36+15
    assume {:print "$at(135,22345,22360)"} true;
L11:

    // $t22 := exists<object::ObjectCore>($t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:535:17+6
    assume {:print "$at(135,22326,22332)"} true;
    $t22 := $ResourceExists($1_object_ObjectCore_$memory, $t4);

    // if ($t22) goto L13 else goto L12 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:534:13+136
    assume {:print "$at(135,22301,22437)"} true;
    if ($t22) { goto L13; } else { goto L12; }

    // label L13 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:534:13+136
L13:

    // goto L14 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:534:13+136
    assume {:print "$at(135,22301,22437)"} true;
    goto L14;

    // label L12 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:536:42+17
    assume {:print "$at(135,22404,22421)"} true;
L12:

    // $t28 := 4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:536:42+17
    assume {:print "$at(135,22404,22421)"} true;
    $t28 := 4;
    assume $IsValid'u64'($t28);

    // $t29 := error::permission_denied($t28) on_abort goto L21 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:536:17+43
    call $t29 := $1_error_permission_denied($t28);
    if ($abort_flag) {
        assume {:print "$at(135,22379,22422)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(56,47):", $t10} $t10 == $t10;
        goto L21;
    }

    // trace_abort($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:534:13+136
    assume {:print "$at(135,22301,22437)"} true;
    assume {:print "$track_abort(56,47):", $t29} $t29 == $t29;

    // $t10 := move($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:534:13+136
    $t10 := $t29;

    // goto L21 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:534:13+136
    goto L21;

    // label L14 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:538:52+15
    assume {:print "$at(135,22490,22505)"} true;
L14:

    // $t23 := get_global<object::ObjectCore>($t4) on_abort goto L21 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:538:26+13
    assume {:print "$at(135,22464,22477)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t23 := $ResourceValue($1_object_ObjectCore_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(135,22464,22477)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(56,47):", $t10} $t10 == $t10;
        goto L21;
    }

    // trace_local[object#3]($t23) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:538:17+6
    assume {:print "$track_local(56,47,6):", $t23} $t23 == $t23;

    // $t24 := get_field<object::ObjectCore>.allow_ungated_transfer($t23) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:540:17+29
    assume {:print "$at(135,22545,22574)"} true;
    $t24 := $t23->$allow_ungated_transfer;

    // if ($t24) goto L16 else goto L15 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:539:13+134
    assume {:print "$at(135,22520,22654)"} true;
    if ($t24) { goto L16; } else { goto L15; }

    // label L16 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:539:13+134
L16:

    // goto L17 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:539:13+134
    assume {:print "$at(135,22520,22654)"} true;
    goto L17;

    // label L15 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:539:13+134
L15:

    // $t30 := 3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:541:42+21
    assume {:print "$at(135,22617,22638)"} true;
    $t30 := 3;
    assume $IsValid'u64'($t30);

    // $t31 := error::permission_denied($t30) on_abort goto L21 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:541:17+47
    call $t31 := $1_error_permission_denied($t30);
    if ($abort_flag) {
        assume {:print "$at(135,22592,22639)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(56,47):", $t10} $t10 == $t10;
        goto L21;
    }

    // trace_abort($t31) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:539:13+134
    assume {:print "$at(135,22520,22654)"} true;
    assume {:print "$track_abort(56,47):", $t31} $t31 == $t31;

    // $t10 := move($t31) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:539:13+134
    $t10 := $t31;

    // goto L21 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:539:13+134
    goto L21;

    // label L17 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:543:31+6
    assume {:print "$at(135,22686,22692)"} true;
L17:

    // $t25 := get_field<object::ObjectCore>.owner($t23) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:543:31+12
    assume {:print "$at(135,22686,22698)"} true;
    $t25 := $t23->$owner;

    // trace_local[current_address#1]($t25) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:543:13+15
    assume {:print "$track_local(56,47,4):", $t25} $t25 == $t25;

    // goto L19 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:543:43+1
    goto L19;

    // label L6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:544:10+1
    assume {:print "$at(135,22709,22710)"} true;
L6:

    // goto L20 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:544:10+1
    assume {:print "$at(135,22709,22710)"} true;
    goto L20;

    // label L19 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:544:10+1
    // Loop invariant checking block for the loop started with header: L18
L19:

    // assert Lt($t16, 8) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:522:17+41
    assume {:print "$at(135,21553,21594)"} true;
    assert {:msg "assert_failed(135,21553,21594): induction case of the loop invariant does not hold"}
      ($t16 < 8);

    // assert forall i: num: Range(0, $t16): And(exists<object::ObjectCore>($t25), select object::ObjectCore.allow_ungated_transfer(global<object::ObjectCore>($t25))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    assume {:print "$at(135,21611,21761)"} true;
    assert {:msg "assert_failed(135,21611,21761): induction case of the loop invariant does not hold"}
      (var $range_0 := $Range(0, $t16); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (($ResourceExists($1_object_ObjectCore_$memory, $t25) && $ResourceValue($1_object_ObjectCore_$memory, $t25)->$allow_ungated_transfer)))));

    // stop() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:523:17+150
    assume false;
    return;

    // label L20 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:545:5+1
    assume {:print "$at(135,22715,22716)"} true;
L20:

    // return () at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:545:5+1
    assume {:print "$at(135,22715,22716)"} true;
    return;

    // label L21 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:545:5+1
L21:

    // abort($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.move:545:5+1
    assume {:print "$at(135,22715,22716)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// struct royalty::MutatorRef at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:32:5+67
datatype $4_royalty_MutatorRef {
    $4_royalty_MutatorRef($inner: $1_object_ExtendRef)
}
function {:inline} $Update'$4_royalty_MutatorRef'_inner(s: $4_royalty_MutatorRef, x: $1_object_ExtendRef): $4_royalty_MutatorRef {
    $4_royalty_MutatorRef(x)
}
function $IsValid'$4_royalty_MutatorRef'(s: $4_royalty_MutatorRef): bool {
    $IsValid'$1_object_ExtendRef'(s->$inner)
}
function {:inline} $IsEqual'$4_royalty_MutatorRef'(s1: $4_royalty_MutatorRef, s2: $4_royalty_MutatorRef): bool {
    s1 == s2
}

// struct royalty::Royalty at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:23:5+245
datatype $4_royalty_Royalty {
    $4_royalty_Royalty($numerator: int, $denominator: int, $payee_address: int)
}
function {:inline} $Update'$4_royalty_Royalty'_numerator(s: $4_royalty_Royalty, x: int): $4_royalty_Royalty {
    $4_royalty_Royalty(x, s->$denominator, s->$payee_address)
}
function {:inline} $Update'$4_royalty_Royalty'_denominator(s: $4_royalty_Royalty, x: int): $4_royalty_Royalty {
    $4_royalty_Royalty(s->$numerator, x, s->$payee_address)
}
function {:inline} $Update'$4_royalty_Royalty'_payee_address(s: $4_royalty_Royalty, x: int): $4_royalty_Royalty {
    $4_royalty_Royalty(s->$numerator, s->$denominator, x)
}
function $IsValid'$4_royalty_Royalty'(s: $4_royalty_Royalty): bool {
    $IsValid'u64'(s->$numerator)
      && $IsValid'u64'(s->$denominator)
      && $IsValid'address'(s->$payee_address)
}
function {:inline} $IsEqual'$4_royalty_Royalty'(s1: $4_royalty_Royalty, s2: $4_royalty_Royalty): bool {
    s1 == s2
}
var $4_royalty_Royalty_$memory: $Memory $4_royalty_Royalty;

// fun royalty::init [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:37:5+149
procedure {:inline 1} $4_royalty_init(_$t0: $1_object_ConstructorRef, _$t1: $4_royalty_Royalty) returns ()
{
    // declare local variables
    var $t2: $signer;
    var $t3: $signer;
    var $t4: int;
    var $t0: $1_object_ConstructorRef;
    var $t1: $4_royalty_Royalty;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$4_royalty_Royalty': $4_royalty_Royalty;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:37:5+1
    assume {:print "$at(172,1380,1381)"} true;
    assume {:print "$track_local(68,6,0):", $t0} $t0 == $t0;

    // trace_local[royalty]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:37:5+1
    assume {:print "$track_local(68,6,1):", $t1} $t1 == $t1;

    // $t3 := object::generate_signer($t0) on_abort goto L2 with $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:38:22+28
    assume {:print "$at(172,1459,1487)"} true;
    call $t3 := $1_object_generate_signer($t0);
    if ($abort_flag) {
        assume {:print "$at(172,1459,1487)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(68,6):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[signer]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:38:13+6
    assume {:print "$track_local(68,6,2):", $t3} $t3 == $t3;

    // move_to<royalty::Royalty>($t1, $t3) on_abort goto L2 with $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:39:9+7
    assume {:print "$at(172,1497,1504)"} true;
    if ($ResourceExists($4_royalty_Royalty_$memory, $t3->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4_royalty_Royalty_$memory := $ResourceUpdate($4_royalty_Royalty_$memory, $t3->$addr, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(172,1497,1504)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(68,6):", $t4} $t4 == $t4;
        goto L2;
    }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:40:5+1
    assume {:print "$at(172,1528,1529)"} true;
L1:

    // return () at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:40:5+1
    assume {:print "$at(172,1528,1529)"} true;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:40:5+1
L2:

    // abort($t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:40:5+1
    assume {:print "$at(172,1528,1529)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun royalty::create [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:54:5+327
procedure {:inline 1} $4_royalty_create(_$t0: int, _$t1: int, _$t2: int) returns ($ret0: $4_royalty_Royalty)
{
    // declare local variables
    var $t3: int;
    var $t4: bool;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: bool;
    var $t9: int;
    var $t10: int;
    var $t11: $4_royalty_Royalty;
    var $t0: int;
    var $t1: int;
    var $t2: int;
    var $temp_0'$4_royalty_Royalty': $4_royalty_Royalty;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[numerator]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:54:5+1
    assume {:print "$at(172,2040,2041)"} true;
    assume {:print "$track_local(68,0,0):", $t0} $t0 == $t0;

    // trace_local[denominator]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:54:5+1
    assume {:print "$track_local(68,0,1):", $t1} $t1 == $t1;

    // trace_local[payee_address]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:54:5+1
    assume {:print "$track_local(68,0,2):", $t2} $t2 == $t2;

    // $t3 := 0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:55:32+1
    assume {:print "$at(172,2158,2159)"} true;
    $t3 := 0;
    assume $IsValid'u64'($t3);

    // $t4 := !=($t1, $t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:55:29+2
    $t4 := !$IsEqual'u64'($t1, $t3);

    // if ($t4) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:55:9+76
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:55:9+76
L1:

    // goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:55:9+76
    assume {:print "$at(172,2135,2211)"} true;
    goto L2;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:55:55+28
L0:

    // $t5 := 3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:55:55+28
    assume {:print "$at(172,2181,2209)"} true;
    $t5 := 3;
    assume $IsValid'u64'($t5);

    // $t6 := error::out_of_range($t5) on_abort goto L7 with $t7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:55:35+49
    call $t6 := $1_error_out_of_range($t5);
    if ($abort_flag) {
        assume {:print "$at(172,2161,2210)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(68,0):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_abort($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:55:9+76
    assume {:print "$at(172,2135,2211)"} true;
    assume {:print "$track_abort(68,0):", $t6} $t6 == $t6;

    // $t7 := move($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:55:9+76
    $t7 := $t6;

    // goto L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:55:9+76
    goto L7;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:56:17+9
    assume {:print "$at(172,2229,2238)"} true;
L2:

    // $t8 := <=($t0, $t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:56:27+2
    assume {:print "$at(172,2239,2241)"} true;
    call $t8 := $Le($t0, $t1);

    // if ($t8) goto L4 else goto L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:56:9+80
    if ($t8) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:56:9+80
L4:

    // goto L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:56:9+80
    assume {:print "$at(172,2221,2301)"} true;
    goto L5;

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:56:63+24
L3:

    // $t9 := 2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:56:63+24
    assume {:print "$at(172,2275,2299)"} true;
    $t9 := 2;
    assume $IsValid'u64'($t9);

    // $t10 := error::out_of_range($t9) on_abort goto L7 with $t7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:56:43+45
    call $t10 := $1_error_out_of_range($t9);
    if ($abort_flag) {
        assume {:print "$at(172,2255,2300)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(68,0):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_abort($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:56:9+80
    assume {:print "$at(172,2221,2301)"} true;
    assume {:print "$track_abort(68,0):", $t10} $t10 == $t10;

    // $t7 := move($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:56:9+80
    $t7 := $t10;

    // goto L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:56:9+80
    goto L7;

    // label L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:58:19+9
    assume {:print "$at(172,2322,2331)"} true;
L5:

    // $t11 := pack royalty::Royalty($t0, $t1, $t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:58:9+49
    assume {:print "$at(172,2312,2361)"} true;
    $t11 := $4_royalty_Royalty($t0, $t1, $t2);

    // trace_return[0]($t11) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:58:9+49
    assume {:print "$track_return(68,0,0):", $t11} $t11 == $t11;

    // label L6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:59:5+1
    assume {:print "$at(172,2366,2367)"} true;
L6:

    // return $t11 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:59:5+1
    assume {:print "$at(172,2366,2367)"} true;
    $ret0 := $t11;
    return;

    // label L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:59:5+1
L7:

    // abort($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:59:5+1
    assume {:print "$at(172,2366,2367)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun royalty::generate_mutator_ref [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:61:5+101
procedure {:inline 1} $4_royalty_generate_mutator_ref(_$t0: $1_object_ExtendRef) returns ($ret0: $4_royalty_MutatorRef)
{
    // declare local variables
    var $t1: $4_royalty_MutatorRef;
    var $t0: $1_object_ExtendRef;
    var $temp_0'$1_object_ExtendRef': $1_object_ExtendRef;
    var $temp_0'$4_royalty_MutatorRef': $4_royalty_MutatorRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:61:5+1
    assume {:print "$at(172,2373,2374)"} true;
    assume {:print "$track_local(68,4,0):", $t0} $t0 == $t0;

    // $t1 := pack royalty::MutatorRef($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:62:9+25
    assume {:print "$at(172,2443,2468)"} true;
    $t1 := $4_royalty_MutatorRef($t0);

    // trace_return[0]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:62:9+25
    assume {:print "$track_return(68,4,0):", $t1} $t1 == $t1;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:63:5+1
    assume {:print "$at(172,2473,2474)"} true;
L1:

    // return $t1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\royalty.move:63:5+1
    assume {:print "$at(172,2473,2474)"} true;
    $ret0 := $t1;
    return;

}

// struct collection::ConcurrentSupply at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:111:5+159
datatype $4_collection_ConcurrentSupply {
    $4_collection_ConcurrentSupply($current_supply: $1_aggregator_v2_Aggregator'u64', $total_minted: $1_aggregator_v2_Aggregator'u64')
}
function {:inline} $Update'$4_collection_ConcurrentSupply'_current_supply(s: $4_collection_ConcurrentSupply, x: $1_aggregator_v2_Aggregator'u64'): $4_collection_ConcurrentSupply {
    $4_collection_ConcurrentSupply(x, s->$total_minted)
}
function {:inline} $Update'$4_collection_ConcurrentSupply'_total_minted(s: $4_collection_ConcurrentSupply, x: $1_aggregator_v2_Aggregator'u64'): $4_collection_ConcurrentSupply {
    $4_collection_ConcurrentSupply(s->$current_supply, x)
}
function $IsValid'$4_collection_ConcurrentSupply'(s: $4_collection_ConcurrentSupply): bool {
    $IsValid'$1_aggregator_v2_Aggregator'u64''(s->$current_supply)
      && $IsValid'$1_aggregator_v2_Aggregator'u64''(s->$total_minted)
}
function {:inline} $IsEqual'$4_collection_ConcurrentSupply'(s1: $4_collection_ConcurrentSupply, s2: $4_collection_ConcurrentSupply): bool {
    s1 == s2
}
var $4_collection_ConcurrentSupply_$memory: $Memory $4_collection_ConcurrentSupply;

// struct collection::MutatorRef at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:73:5+64
datatype $4_collection_MutatorRef {
    $4_collection_MutatorRef($self: int)
}
function {:inline} $Update'$4_collection_MutatorRef'_self(s: $4_collection_MutatorRef, x: int): $4_collection_MutatorRef {
    $4_collection_MutatorRef(x)
}
function $IsValid'$4_collection_MutatorRef'(s: $4_collection_MutatorRef): bool {
    $IsValid'address'(s->$self)
}
function {:inline} $IsEqual'$4_collection_MutatorRef'(s1: $4_collection_MutatorRef, s2: $4_collection_MutatorRef): bool {
    s1 == s2
}

// struct collection::BurnEvent at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:117:5+84
datatype $4_collection_BurnEvent {
    $4_collection_BurnEvent($index: int, $token: int)
}
function {:inline} $Update'$4_collection_BurnEvent'_index(s: $4_collection_BurnEvent, x: int): $4_collection_BurnEvent {
    $4_collection_BurnEvent(x, s->$token)
}
function {:inline} $Update'$4_collection_BurnEvent'_token(s: $4_collection_BurnEvent, x: int): $4_collection_BurnEvent {
    $4_collection_BurnEvent(s->$index, x)
}
function $IsValid'$4_collection_BurnEvent'(s: $4_collection_BurnEvent): bool {
    $IsValid'u64'(s->$index)
      && $IsValid'address'(s->$token)
}
function {:inline} $IsEqual'$4_collection_BurnEvent'(s1: $4_collection_BurnEvent, s2: $4_collection_BurnEvent): bool {
    s1 == s2
}

// struct collection::Collection at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:58:5+576
datatype $4_collection_Collection {
    $4_collection_Collection($creator: int, $description: $1_string_String, $name: $1_string_String, $uri: $1_string_String, $mutation_events: $1_event_EventHandle'$4_collection_MutationEvent')
}
function {:inline} $Update'$4_collection_Collection'_creator(s: $4_collection_Collection, x: int): $4_collection_Collection {
    $4_collection_Collection(x, s->$description, s->$name, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_collection_Collection'_description(s: $4_collection_Collection, x: $1_string_String): $4_collection_Collection {
    $4_collection_Collection(s->$creator, x, s->$name, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_collection_Collection'_name(s: $4_collection_Collection, x: $1_string_String): $4_collection_Collection {
    $4_collection_Collection(s->$creator, s->$description, x, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_collection_Collection'_uri(s: $4_collection_Collection, x: $1_string_String): $4_collection_Collection {
    $4_collection_Collection(s->$creator, s->$description, s->$name, x, s->$mutation_events)
}
function {:inline} $Update'$4_collection_Collection'_mutation_events(s: $4_collection_Collection, x: $1_event_EventHandle'$4_collection_MutationEvent'): $4_collection_Collection {
    $4_collection_Collection(s->$creator, s->$description, s->$name, s->$uri, x)
}
function $IsValid'$4_collection_Collection'(s: $4_collection_Collection): bool {
    $IsValid'address'(s->$creator)
      && $IsValid'$1_string_String'(s->$description)
      && $IsValid'$1_string_String'(s->$name)
      && $IsValid'$1_string_String'(s->$uri)
      && $IsValid'$1_event_EventHandle'$4_collection_MutationEvent''(s->$mutation_events)
}
function {:inline} $IsEqual'$4_collection_Collection'(s1: $4_collection_Collection, s2: $4_collection_Collection): bool {
    $IsEqual'address'(s1->$creator, s2->$creator)
    && $IsEqual'$1_string_String'(s1->$description, s2->$description)
    && $IsEqual'$1_string_String'(s1->$name, s2->$name)
    && $IsEqual'$1_string_String'(s1->$uri, s2->$uri)
    && $IsEqual'$1_event_EventHandle'$4_collection_MutationEvent''(s1->$mutation_events, s2->$mutation_events)}
var $4_collection_Collection_$memory: $Memory $4_collection_Collection;

// struct collection::ConcurrentMintEvent at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:135:5+148
datatype $4_collection_ConcurrentMintEvent {
    $4_collection_ConcurrentMintEvent($collection_addr: int, $index: $1_aggregator_v2_AggregatorSnapshot'u64', $token: int)
}
function {:inline} $Update'$4_collection_ConcurrentMintEvent'_collection_addr(s: $4_collection_ConcurrentMintEvent, x: int): $4_collection_ConcurrentMintEvent {
    $4_collection_ConcurrentMintEvent(x, s->$index, s->$token)
}
function {:inline} $Update'$4_collection_ConcurrentMintEvent'_index(s: $4_collection_ConcurrentMintEvent, x: $1_aggregator_v2_AggregatorSnapshot'u64'): $4_collection_ConcurrentMintEvent {
    $4_collection_ConcurrentMintEvent(s->$collection_addr, x, s->$token)
}
function {:inline} $Update'$4_collection_ConcurrentMintEvent'_token(s: $4_collection_ConcurrentMintEvent, x: int): $4_collection_ConcurrentMintEvent {
    $4_collection_ConcurrentMintEvent(s->$collection_addr, s->$index, x)
}
function $IsValid'$4_collection_ConcurrentMintEvent'(s: $4_collection_ConcurrentMintEvent): bool {
    $IsValid'address'(s->$collection_addr)
      && $IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''(s->$index)
      && $IsValid'address'(s->$token)
}
function {:inline} $IsEqual'$4_collection_ConcurrentMintEvent'(s1: $4_collection_ConcurrentMintEvent, s2: $4_collection_ConcurrentMintEvent): bool {
    s1 == s2
}

// struct collection::FixedSupply at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:86:5+344
datatype $4_collection_FixedSupply {
    $4_collection_FixedSupply($current_supply: int, $max_supply: int, $total_minted: int, $burn_events: $1_event_EventHandle'$4_collection_BurnEvent', $mint_events: $1_event_EventHandle'$4_collection_MintEvent')
}
function {:inline} $Update'$4_collection_FixedSupply'_current_supply(s: $4_collection_FixedSupply, x: int): $4_collection_FixedSupply {
    $4_collection_FixedSupply(x, s->$max_supply, s->$total_minted, s->$burn_events, s->$mint_events)
}
function {:inline} $Update'$4_collection_FixedSupply'_max_supply(s: $4_collection_FixedSupply, x: int): $4_collection_FixedSupply {
    $4_collection_FixedSupply(s->$current_supply, x, s->$total_minted, s->$burn_events, s->$mint_events)
}
function {:inline} $Update'$4_collection_FixedSupply'_total_minted(s: $4_collection_FixedSupply, x: int): $4_collection_FixedSupply {
    $4_collection_FixedSupply(s->$current_supply, s->$max_supply, x, s->$burn_events, s->$mint_events)
}
function {:inline} $Update'$4_collection_FixedSupply'_burn_events(s: $4_collection_FixedSupply, x: $1_event_EventHandle'$4_collection_BurnEvent'): $4_collection_FixedSupply {
    $4_collection_FixedSupply(s->$current_supply, s->$max_supply, s->$total_minted, x, s->$mint_events)
}
function {:inline} $Update'$4_collection_FixedSupply'_mint_events(s: $4_collection_FixedSupply, x: $1_event_EventHandle'$4_collection_MintEvent'): $4_collection_FixedSupply {
    $4_collection_FixedSupply(s->$current_supply, s->$max_supply, s->$total_minted, s->$burn_events, x)
}
function $IsValid'$4_collection_FixedSupply'(s: $4_collection_FixedSupply): bool {
    $IsValid'u64'(s->$current_supply)
      && $IsValid'u64'(s->$max_supply)
      && $IsValid'u64'(s->$total_minted)
      && $IsValid'$1_event_EventHandle'$4_collection_BurnEvent''(s->$burn_events)
      && $IsValid'$1_event_EventHandle'$4_collection_MintEvent''(s->$mint_events)
}
function {:inline} $IsEqual'$4_collection_FixedSupply'(s1: $4_collection_FixedSupply, s2: $4_collection_FixedSupply): bool {
    s1 == s2
}
var $4_collection_FixedSupply_$memory: $Memory $4_collection_FixedSupply;

// struct collection::MintEvent at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:129:5+84
datatype $4_collection_MintEvent {
    $4_collection_MintEvent($index: int, $token: int)
}
function {:inline} $Update'$4_collection_MintEvent'_index(s: $4_collection_MintEvent, x: int): $4_collection_MintEvent {
    $4_collection_MintEvent(x, s->$token)
}
function {:inline} $Update'$4_collection_MintEvent'_token(s: $4_collection_MintEvent, x: int): $4_collection_MintEvent {
    $4_collection_MintEvent(s->$index, x)
}
function $IsValid'$4_collection_MintEvent'(s: $4_collection_MintEvent): bool {
    $IsValid'u64'(s->$index)
      && $IsValid'address'(s->$token)
}
function {:inline} $IsEqual'$4_collection_MintEvent'(s1: $4_collection_MintEvent, s2: $4_collection_MintEvent): bool {
    s1 == s2
}

// struct collection::MutationEvent at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:79:5+80
datatype $4_collection_MutationEvent {
    $4_collection_MutationEvent($mutated_field_name: $1_string_String)
}
function {:inline} $Update'$4_collection_MutationEvent'_mutated_field_name(s: $4_collection_MutationEvent, x: $1_string_String): $4_collection_MutationEvent {
    $4_collection_MutationEvent(x)
}
function $IsValid'$4_collection_MutationEvent'(s: $4_collection_MutationEvent): bool {
    $IsValid'$1_string_String'(s->$mutated_field_name)
}
function {:inline} $IsEqual'$4_collection_MutationEvent'(s1: $4_collection_MutationEvent, s2: $4_collection_MutationEvent): bool {
    $IsEqual'$1_string_String'(s1->$mutated_field_name, s2->$mutated_field_name)}

// struct collection::UnlimitedSupply at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:99:5+283
datatype $4_collection_UnlimitedSupply {
    $4_collection_UnlimitedSupply($current_supply: int, $total_minted: int, $burn_events: $1_event_EventHandle'$4_collection_BurnEvent', $mint_events: $1_event_EventHandle'$4_collection_MintEvent')
}
function {:inline} $Update'$4_collection_UnlimitedSupply'_current_supply(s: $4_collection_UnlimitedSupply, x: int): $4_collection_UnlimitedSupply {
    $4_collection_UnlimitedSupply(x, s->$total_minted, s->$burn_events, s->$mint_events)
}
function {:inline} $Update'$4_collection_UnlimitedSupply'_total_minted(s: $4_collection_UnlimitedSupply, x: int): $4_collection_UnlimitedSupply {
    $4_collection_UnlimitedSupply(s->$current_supply, x, s->$burn_events, s->$mint_events)
}
function {:inline} $Update'$4_collection_UnlimitedSupply'_burn_events(s: $4_collection_UnlimitedSupply, x: $1_event_EventHandle'$4_collection_BurnEvent'): $4_collection_UnlimitedSupply {
    $4_collection_UnlimitedSupply(s->$current_supply, s->$total_minted, x, s->$mint_events)
}
function {:inline} $Update'$4_collection_UnlimitedSupply'_mint_events(s: $4_collection_UnlimitedSupply, x: $1_event_EventHandle'$4_collection_MintEvent'): $4_collection_UnlimitedSupply {
    $4_collection_UnlimitedSupply(s->$current_supply, s->$total_minted, s->$burn_events, x)
}
function $IsValid'$4_collection_UnlimitedSupply'(s: $4_collection_UnlimitedSupply): bool {
    $IsValid'u64'(s->$current_supply)
      && $IsValid'u64'(s->$total_minted)
      && $IsValid'$1_event_EventHandle'$4_collection_BurnEvent''(s->$burn_events)
      && $IsValid'$1_event_EventHandle'$4_collection_MintEvent''(s->$mint_events)
}
function {:inline} $IsEqual'$4_collection_UnlimitedSupply'(s1: $4_collection_UnlimitedSupply, s2: $4_collection_UnlimitedSupply): bool {
    s1 == s2
}
var $4_collection_UnlimitedSupply_$memory: $Memory $4_collection_UnlimitedSupply;

// fun collection::generate_mutator_ref [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:452:5+209
procedure {:inline 1} $4_collection_generate_mutator_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $4_collection_MutatorRef)
{
    // declare local variables
    var $t1: $1_object_Object'$4_collection_Collection';
    var $t2: $1_object_Object'$4_collection_Collection';
    var $t3: int;
    var $t4: int;
    var $t5: $4_collection_MutatorRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$4_collection_Collection'': $1_object_Object'$4_collection_Collection';
    var $temp_0'$4_collection_MutatorRef': $4_collection_MutatorRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:452:5+1
    assume {:print "$at(170,17944,17945)"} true;
    assume {:print "$track_local(69,9,0):", $t0} $t0 == $t0;

    // $t2 := object::object_from_constructor_ref<collection::Collection>($t0) on_abort goto L2 with $t3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:453:22+52
    assume {:print "$at(170,18033,18085)"} true;
    call $t2 := $1_object_object_from_constructor_ref'$4_collection_Collection'($t0);
    if ($abort_flag) {
        assume {:print "$at(170,18033,18085)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(69,9):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_local[object]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:453:13+6
    assume {:print "$track_local(69,9,1):", $t2} $t2 == $t2;

    // $t4 := object::object_address<collection::Collection>($t2) on_abort goto L2 with $t3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:454:28+31
    assume {:print "$at(170,18114,18145)"} true;
    call $t4 := $1_object_object_address'$4_collection_Collection'($t2);
    if ($abort_flag) {
        assume {:print "$at(170,18114,18145)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(69,9):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t5 := pack collection::MutatorRef($t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:454:9+52
    $t5 := $4_collection_MutatorRef($t4);

    // trace_return[0]($t5) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:454:9+52
    assume {:print "$track_return(69,9,0):", $t5} $t5 == $t5;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:455:5+1
    assume {:print "$at(170,18152,18153)"} true;
L1:

    // return $t5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:455:5+1
    assume {:print "$at(170,18152,18153)"} true;
    $ret0 := $t5;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:455:5+1
L2:

    // abort($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:455:5+1
    assume {:print "$at(170,18152,18153)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun collection::create_collection_address [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:308:5+164
procedure {:inline 1} $4_collection_create_collection_address(_$t0: int, _$t1: $1_string_String) returns ($ret0: int)
{
    // declare local variables
    var $t2: Vec (int);
    var $t3: int;
    var $t4: int;
    var $t0: int;
    var $t1: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[creator]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:308:5+1
    assume {:print "$at(170,11672,11673)"} true;
    assume {:print "$track_local(69,1,0):", $t0} $t0 == $t0;

    // trace_local[name]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:308:5+1
    assume {:print "$track_local(69,1,1):", $t1} $t1 == $t1;

    // $t2 := collection::create_collection_seed($t1) on_abort goto L2 with $t3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:309:48+28
    assume {:print "$at(170,11801,11829)"} true;
    call $t2 := $4_collection_create_collection_seed($t1);
    if ($abort_flag) {
        assume {:print "$at(170,11801,11829)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(69,1):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t4 := opaque begin: object::create_object_address($t0, $t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:309:9+68

    // assume WellFormed($t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:309:9+68
    assume $IsValid'address'($t4);

    // assume Eq<address>($t4, object::spec_create_object_address($t0, $t2)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:309:9+68
    assume $IsEqual'address'($t4, $1_object_spec_create_object_address($t0, $t2));

    // $t4 := opaque end: object::create_object_address($t0, $t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:309:9+68

    // trace_return[0]($t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:309:9+68
    assume {:print "$track_return(69,1,0):", $t4} $t4 == $t4;

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:310:5+1
    assume {:print "$at(170,11835,11836)"} true;
L1:

    // return $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:310:5+1
    assume {:print "$at(170,11835,11836)"} true;
    $ret0 := $t4;
    return;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:310:5+1
L2:

    // abort($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:310:5+1
    assume {:print "$at(170,11835,11836)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun collection::create_collection_seed [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:313:5+214
procedure {:inline 1} $4_collection_create_collection_seed(_$t0: $1_string_String) returns ($ret0: Vec (int))
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t5: int;
    var $t6: int;
    var $t7: Vec (int);
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[name]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:313:5+1
    assume {:print "$at(170,11924,11925)"} true;
    assume {:print "$track_local(69,2,0):", $t0} $t0 == $t0;

    // $t1 := string::length($t0) on_abort goto L4 with $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:314:17+20
    assume {:print "$at(170,12003,12023)"} true;
    call $t1 := $1_string_length($t0);
    if ($abort_flag) {
        assume {:print "$at(170,12003,12023)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(69,2):", $t2} $t2 == $t2;
        goto L4;
    }

    // $t3 := 128 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:314:41+26
    $t3 := 128;
    assume $IsValid'u64'($t3);

    // $t4 := <=($t1, $t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:314:38+2
    call $t4 := $Le($t1, $t3);

    // if ($t4) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:314:9+107
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:314:9+107
L1:

    // goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:314:9+107
    assume {:print "$at(170,11995,12102)"} true;
    goto L2;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:314:9+107
L0:

    // $t5 := 3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:314:89+25
    assume {:print "$at(170,12075,12100)"} true;
    $t5 := 3;
    assume $IsValid'u64'($t5);

    // $t6 := error::out_of_range($t5) on_abort goto L4 with $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:314:69+46
    call $t6 := $1_error_out_of_range($t5);
    if ($abort_flag) {
        assume {:print "$at(170,12055,12101)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(69,2):", $t2} $t2 == $t2;
        goto L4;
    }

    // trace_abort($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:314:9+107
    assume {:print "$at(170,11995,12102)"} true;
    assume {:print "$track_abort(69,2):", $t6} $t6 == $t6;

    // $t2 := move($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:314:9+107
    $t2 := $t6;

    // goto L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:314:9+107
    goto L4;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:315:24+4
    assume {:print "$at(170,12127,12131)"} true;
L2:

    // $t7 := string::bytes($t0) on_abort goto L4 with $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:315:10+19
    assume {:print "$at(170,12113,12132)"} true;
    call $t7 := $1_string_bytes($t0);
    if ($abort_flag) {
        assume {:print "$at(170,12113,12132)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(69,2):", $t2} $t2 == $t2;
        goto L4;
    }

    // trace_return[0]($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:315:9+20
    assume {:print "$track_return(69,2,0):", $t7} $t7 == $t7;

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:316:5+1
    assume {:print "$at(170,12137,12138)"} true;
L3:

    // return $t7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:316:5+1
    assume {:print "$at(170,12137,12138)"} true;
    $ret0 := $t7;
    return;

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:316:5+1
L4:

    // abort($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:316:5+1
    assume {:print "$at(170,12137,12138)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun collection::create_fixed_collection [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:146:5+1608
procedure {:inline 1} $4_collection_create_fixed_collection(_$t0: $signer, _$t1: $1_string_String, _$t2: int, _$t3: $1_string_String, _$t4: $1_option_Option'$4_royalty_Royalty', _$t5: $1_string_String) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t6: $1_object_ConstructorRef;
    var $t7: $4_collection_Collection;
    var $t8: $4_collection_Collection;
    var $t9: Vec (int);
    var $t10: $1_object_ConstructorRef;
    var $t11: $1_object_ConstructorRef;
    var $t12: $1_object_ConstructorRef;
    var $t13: $signer;
    var $t14: $signer;
    var $t15: $1_string_String;
    var $t16: $1_string_String;
    var $t17: $1_string_String;
    var $t18: $1_string_String;
    var $t19: $signer;
    var $t20: $signer;
    var $t21: $signer;
    var $t22: $1_option_Option'$4_royalty_Royalty';
    var $t23: $1_option_Option'$4_royalty_Royalty';
    var $t24: $4_collection_ConcurrentSupply;
    var $t25: $4_collection_FixedSupply;
    var $t26: $1_option_Option'$4_collection_ConcurrentSupply';
    var $t27: $1_option_Option'$4_collection_FixedSupply';
    var $t28: $1_object_TransferRef;
    var $t29: $1_object_TransferRef;
    var $t30: $1_string_String;
    var $t31: $1_string_String;
    var $t32: int;
    var $t33: bool;
    var $t34: int;
    var $t35: int;
    var $t36: int;
    var $t37: Vec (int);
    var $t38: int;
    var $t39: int;
    var $t40: $1_object_ConstructorRef;
    var $t41: $signer;
    var $t42: bool;
    var $t43: $1_aggregator_v2_Aggregator'u64';
    var $t44: bool;
    var $t45: $1_aggregator_v2_Aggregator'u64';
    var $t46: bool;
    var $t47: $4_collection_ConcurrentSupply;
    var $t48: $1_option_Option'$4_collection_ConcurrentSupply';
    var $t49: int;
    var $t50: int;
    var $t51: bool;
    var $t52: int;
    var $t53: int;
    var $t54: int;
    var $t55: int;
    var $t56: bool;
    var $t57: int;
    var $t58: int;
    var $t59: int;
    var $t60: int;
    var $t61: bool;
    var $t62: int;
    var $t63: int;
    var $t64: $signer;
    var $t65: int;
    var $t66: $1_object_ObjectCore;
    var $t67: $1_guid_GUID;
    var $t68: $1_event_EventHandle'$4_collection_MutationEvent';
    var $t69: $4_collection_Collection;
    var $t70: bool;
    var $t71: $4_collection_ConcurrentSupply;
    var $t72: bool;
    var $t73: bool;
    var $t74: $1_option_Option'$4_royalty_Royalty';
    var $t75: bool;
    var $t76: $Mutation ($1_option_Option'$4_royalty_Royalty');
    var $t77: $4_royalty_Royalty;
    var $t78: $1_option_Option'$4_royalty_Royalty';
    var $t79: bool;
    var $t80: $1_object_TransferRef;
    var $t81: int;
    var $t82: int;
    var $t83: $1_object_ObjectCore;
    var $t84: $1_guid_GUID;
    var $t85: $1_event_EventHandle'$4_collection_BurnEvent';
    var $t86: $1_object_ObjectCore;
    var $t87: $1_guid_GUID;
    var $t88: $1_event_EventHandle'$4_collection_MintEvent';
    var $t89: $4_collection_FixedSupply;
    var $t90: $1_option_Option'$4_collection_FixedSupply';
    var $t91: int;
    var $t92: int;
    var $t93: bool;
    var $t94: int;
    var $t95: int;
    var $t96: int;
    var $t97: int;
    var $t98: bool;
    var $t99: int;
    var $t100: int;
    var $t101: int;
    var $t102: int;
    var $t103: bool;
    var $t104: int;
    var $t105: int;
    var $t106: $signer;
    var $t107: int;
    var $t108: $1_object_ObjectCore;
    var $t109: $1_guid_GUID;
    var $t110: $1_event_EventHandle'$4_collection_MutationEvent';
    var $t111: $4_collection_Collection;
    var $t112: bool;
    var $t113: $4_collection_FixedSupply;
    var $t114: bool;
    var $t115: bool;
    var $t116: $1_option_Option'$4_royalty_Royalty';
    var $t117: bool;
    var $t118: $Mutation ($1_option_Option'$4_royalty_Royalty');
    var $t119: $4_royalty_Royalty;
    var $t120: $1_option_Option'$4_royalty_Royalty';
    var $t121: bool;
    var $t122: $1_object_TransferRef;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: int;
    var $t3: $1_string_String;
    var $t4: $1_option_Option'$4_royalty_Royalty';
    var $t5: $1_string_String;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    var $temp_0'$1_option_Option'$4_collection_ConcurrentSupply'': $1_option_Option'$4_collection_ConcurrentSupply';
    var $temp_0'$1_option_Option'$4_collection_FixedSupply'': $1_option_Option'$4_collection_FixedSupply';
    var $temp_0'$1_option_Option'$4_royalty_Royalty'': $1_option_Option'$4_royalty_Royalty';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$4_collection_Collection': $4_collection_Collection;
    var $temp_0'$4_collection_ConcurrentSupply': $4_collection_ConcurrentSupply;
    var $temp_0'$4_collection_FixedSupply': $4_collection_FixedSupply;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;

    // bytecode translation starts here
    // trace_local[creator]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:146:5+1
    assume {:print "$at(170,6091,6092)"} true;
    assume {:print "$track_local(69,3,0):", $t0} $t0 == $t0;

    // trace_local[description]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:146:5+1
    assume {:print "$track_local(69,3,1):", $t1} $t1 == $t1;

    // trace_local[max_supply]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:146:5+1
    assume {:print "$track_local(69,3,2):", $t2} $t2 == $t2;

    // trace_local[name]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:146:5+1
    assume {:print "$track_local(69,3,3):", $t3} $t3 == $t3;

    // trace_local[royalty]($t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:146:5+1
    assume {:print "$track_local(69,3,4):", $t4} $t4 == $t4;

    // trace_local[uri]($t5) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:146:5+1
    assume {:print "$track_local(69,3,5):", $t5} $t5 == $t5;

    // $t32 := 0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:154:31+1
    assume {:print "$at(170,6338,6339)"} true;
    $t32 := 0;
    assume $IsValid'u64'($t32);

    // $t33 := !=($t2, $t32) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:154:28+2
    $t33 := !$IsEqual'u64'($t2, $t32);

    // if ($t33) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:154:9+77
    if ($t33) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:154:9+77
L1:

    // goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:154:9+77
    assume {:print "$at(170,6316,6393)"} true;
    goto L2;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:154:9+77
L0:

    // $t34 := 6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:154:58+26
    assume {:print "$at(170,6365,6391)"} true;
    $t34 := 6;
    assume $IsValid'u64'($t34);

    // $t35 := error::invalid_argument($t34) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:154:34+51
    call $t35 := $1_error_invalid_argument($t34);
    if ($abort_flag) {
        assume {:print "$at(170,6341,6392)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // trace_abort($t35) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:154:9+77
    assume {:print "$at(170,6316,6393)"} true;
    assume {:print "$track_abort(69,3):", $t35} $t35 == $t35;

    // $t36 := move($t35) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:154:9+77
    $t36 := $t35;

    // goto L35 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:154:9+77
    goto L35;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:155:54+5
    assume {:print "$at(170,6448,6453)"} true;
L2:

    // $t37 := collection::create_collection_seed($t3) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:155:31+29
    assume {:print "$at(170,6425,6454)"} true;
    call $t37 := $4_collection_create_collection_seed($t3);
    if ($abort_flag) {
        assume {:print "$at(170,6425,6454)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // trace_local[collection_seed]($t37) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:155:13+15
    assume {:print "$track_local(69,3,9):", $t37} $t37 == $t37;

    // assume Identical($t38, signer::$address_of($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:102:9+50
    assume {:print "$at(136,3712,3762)"} true;
    assume ($t38 == $1_signer_$address_of($t0));

    // assume Identical($t39, object::spec_create_object_address($t38, $t37)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:103:9+65
    assume {:print "$at(136,3771,3836)"} true;
    assume ($t39 == $1_object_spec_create_object_address($t38, $t37));

    // $t40 := object::create_named_object($t0, $t37) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:156:31+53
    assume {:print "$at(170,6486,6539)"} true;
    call $t40 := $1_object_create_named_object($t0, $t37);
    if ($abort_flag) {
        assume {:print "$at(170,6486,6539)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // trace_local[constructor_ref]($t40) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:156:13+15
    assume {:print "$track_local(69,3,10):", $t40} $t40 == $t40;

    // $t41 := object::generate_signer($t40) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:157:29+41
    assume {:print "$at(170,6569,6610)"} true;
    call $t41 := $1_object_generate_signer($t40);
    if ($abort_flag) {
        assume {:print "$at(170,6569,6610)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // trace_local[object_signer]($t41) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:157:13+13
    assume {:print "$track_local(69,3,19):", $t41} $t41 == $t41;

    // $t42 := features::concurrent_assets_enabled() on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:159:13+37
    assume {:print "$at(170,6625,6662)"} true;
    call $t42 := $1_features_concurrent_assets_enabled();
    if ($abort_flag) {
        assume {:print "$at(170,6625,6662)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // if ($t42) goto L4 else goto L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:159:9+1072
    if ($t42) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:161:66+10
    assume {:print "$at(170,6775,6785)"} true;
L4:

    // $t43 := opaque begin: aggregator_v2::create_aggregator<u64>($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:161:33+44
    assume {:print "$at(170,6742,6786)"} true;

    // $t44 := havoc[val]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:161:33+44
    havoc $t44;

    // if ($t44) goto L37 else goto L36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:161:33+44
    if ($t44) { goto L37; } else { goto L36; }

    // label L37 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:161:33+44
L37:

    // trace_abort($t36) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:161:33+44
    assume {:print "$at(170,6742,6786)"} true;
    assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;

    // goto L35 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:161:33+44
    goto L35;

    // label L36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:161:33+44
L36:

    // assume WellFormed($t43) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:161:33+44
    assume {:print "$at(170,6742,6786)"} true;
    assume $IsValid'$1_aggregator_v2_Aggregator'u64''($t43);

    // $t43 := opaque end: aggregator_v2::create_aggregator<u64>($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:161:33+44

    // $t45 := opaque begin: aggregator_v2::create_unbounded_aggregator<u64>() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:162:31+44
    assume {:print "$at(170,6818,6862)"} true;

    // $t46 := havoc[val]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:162:31+44
    havoc $t46;

    // if ($t46) goto L39 else goto L38 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:162:31+44
    if ($t46) { goto L39; } else { goto L38; }

    // label L39 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:162:31+44
L39:

    // trace_abort($t36) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:162:31+44
    assume {:print "$at(170,6818,6862)"} true;
    assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;

    // goto L35 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:162:31+44
    goto L35;

    // label L38 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:162:31+44
L38:

    // assume WellFormed($t45) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:162:31+44
    assume {:print "$at(170,6818,6862)"} true;
    assume $IsValid'$1_aggregator_v2_Aggregator'u64''($t45);

    // $t45 := opaque end: aggregator_v2::create_unbounded_aggregator<u64>() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:162:31+44

    // $t47 := pack collection::ConcurrentSupply($t43, $t45) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:160:26+186
    assume {:print "$at(170,6691,6877)"} true;
    $t47 := $4_collection_ConcurrentSupply($t43, $t45);

    // trace_local[supply]($t47) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:160:17+6
    assume {:print "$track_local(69,3,24):", $t47} $t47 == $t47;

    // $t48 := opaque begin: option::some<collection::ConcurrentSupply>($t47) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:172:17+20
    assume {:print "$at(170,7091,7111)"} true;

    // assume And(WellFormed($t48), Le(Len<collection::ConcurrentSupply>(select option::Option.vec($t48)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:172:17+20
    assume ($IsValid'$1_option_Option'$4_collection_ConcurrentSupply''($t48) && (LenVec($t48->$vec) <= 1));

    // assume Eq<option::Option<collection::ConcurrentSupply>>($t48, option::spec_some<collection::ConcurrentSupply>($t47)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:172:17+20
    assume $IsEqual'$1_option_Option'$4_collection_ConcurrentSupply''($t48, $1_option_spec_some'$4_collection_ConcurrentSupply'($t47));

    // $t48 := opaque end: option::some<collection::ConcurrentSupply>($t47) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:172:17+20

    // trace_local[supply#463]($t48) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:274:9+6
    assume {:print "$at(170,10374,10380)"} true;
    assume {:print "$track_local(69,3,26):", $t48} $t48 == $t48;

    // trace_local[uri#462]($t5) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:273:9+3
    assume {:print "$at(170,10353,10356)"} true;
    assume {:print "$track_local(69,3,30):", $t5} $t5 == $t5;

    // $t22 := $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:272:9+7
    assume {:print "$at(170,10319,10326)"} true;
    $t22 := $t4;

    // trace_local[royalty#461]($t22) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:272:9+7
    assume {:print "$track_local(69,3,22):", $t22} $t22 == $t22;

    // trace_local[name#460]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:271:9+4
    assume {:print "$at(170,10297,10301)"} true;
    assume {:print "$track_local(69,3,17):", $t3} $t3 == $t3;

    // trace_local[description#459]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:270:9+11
    assume {:print "$at(170,10268,10279)"} true;
    assume {:print "$track_local(69,3,15):", $t1} $t1 == $t1;

    // trace_local[constructor_ref#458]($t40) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:269:9+15
    assume {:print "$at(170,10227,10242)"} true;
    assume {:print "$track_local(69,3,11):", $t40} $t40 == $t40;

    // trace_local[creator#457]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:268:9+7
    assume {:print "$at(170,10201,10208)"} true;
    assume {:print "$track_local(69,3,13):", $t0} $t0 == $t0;

    // $t49 := string::length($t3) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:17+21
    assume {:print "$at(170,10438,10459)"} true;
    call $t49 := $1_string_length($t3);
    if ($abort_flag) {
        assume {:print "$at(170,10438,10459)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // $t50 := 128 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:42+26
    $t50 := 128;
    assume $IsValid'u64'($t50);

    // $t51 := <=($t49, $t50) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:39+2
    call $t51 := $Le($t49, $t50);

    // if ($t51) goto L6 else goto L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:9+108
    if ($t51) { goto L6; } else { goto L5; }

    // label L6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:9+108
L6:

    // goto L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:9+108
    assume {:print "$at(170,10430,10538)"} true;
    goto L7;

    // label L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:9+108
L5:

    // $t52 := 3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:90+25
    assume {:print "$at(170,10511,10536)"} true;
    $t52 := 3;
    assume $IsValid'u64'($t52);

    // $t53 := error::out_of_range($t52) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:70+46
    call $t53 := $1_error_out_of_range($t52);
    if ($abort_flag) {
        assume {:print "$at(170,10491,10537)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // trace_abort($t53) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:9+108
    assume {:print "$at(170,10430,10538)"} true;
    assume {:print "$track_abort(69,3):", $t53} $t53 == $t53;

    // $t36 := move($t53) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:9+108
    $t36 := $t53;

    // goto L35 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:9+108
    goto L35;

    // label L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:32+4
    assume {:print "$at(170,10571,10575)"} true;
L7:

    // $t54 := string::length($t5) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:17+20
    assume {:print "$at(170,10556,10576)"} true;
    call $t54 := $1_string_length($t5);
    if ($abort_flag) {
        assume {:print "$at(170,10556,10576)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // $t55 := 512 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:41+14
    $t55 := 512;
    assume $IsValid'u64'($t55);

    // $t56 := <=($t54, $t55) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:38+2
    call $t56 := $Le($t54, $t55);

    // if ($t56) goto L9 else goto L8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:9+83
    if ($t56) { goto L9; } else { goto L8; }

    // label L9 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:9+83
L9:

    // goto L10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:9+83
    assume {:print "$at(170,10548,10631)"} true;
    goto L10;

    // label L8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:9+83
L8:

    // $t57 := 4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:77+13
    assume {:print "$at(170,10616,10629)"} true;
    $t57 := 4;
    assume $IsValid'u64'($t57);

    // $t58 := error::out_of_range($t57) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:57+34
    call $t58 := $1_error_out_of_range($t57);
    if ($abort_flag) {
        assume {:print "$at(170,10596,10630)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // trace_abort($t58) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:9+83
    assume {:print "$at(170,10548,10631)"} true;
    assume {:print "$track_abort(69,3):", $t58} $t58 == $t58;

    // $t36 := move($t58) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:9+83
    $t36 := $t58;

    // goto L35 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:9+83
    goto L35;

    // label L10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:32+12
    assume {:print "$at(170,10664,10676)"} true;
L10:

    // $t59 := string::length($t1) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:17+28
    assume {:print "$at(170,10649,10677)"} true;
    call $t59 := $1_string_length($t1);
    if ($abort_flag) {
        assume {:print "$at(170,10649,10677)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // $t60 := 2048 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:49+22
    $t60 := 2048;
    assume $IsValid'u64'($t60);

    // $t61 := <=($t59, $t60) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:46+2
    call $t61 := $Le($t59, $t60);

    // if ($t61) goto L12 else goto L11 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:9+107
    if ($t61) { goto L12; } else { goto L11; }

    // label L12 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:9+107
L12:

    // goto L13 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:9+107
    assume {:print "$at(170,10641,10748)"} true;
    goto L13;

    // label L11 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:9+107
L11:

    // $t62 := 5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:93+21
    assume {:print "$at(170,10725,10746)"} true;
    $t62 := 5;
    assume $IsValid'u64'($t62);

    // $t63 := error::out_of_range($t62) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:73+42
    call $t63 := $1_error_out_of_range($t62);
    if ($abort_flag) {
        assume {:print "$at(170,10705,10747)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // trace_abort($t63) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:9+107
    assume {:print "$at(170,10641,10748)"} true;
    assume {:print "$track_abort(69,3):", $t63} $t63 == $t63;

    // $t36 := move($t63) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:9+107
    $t36 := $t63;

    // goto L35 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:9+107
    goto L35;

    // label L13 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:280:53+16
    assume {:print "$at(170,10803,10819)"} true;
L13:

    // $t64 := object::generate_signer($t40) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:280:29+41
    assume {:print "$at(170,10779,10820)"} true;
    call $t64 := $1_object_generate_signer($t40);
    if ($abort_flag) {
        assume {:print "$at(170,10779,10820)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // trace_local[object_signer#464]($t64) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:280:13+13
    assume {:print "$track_local(69,3,20):", $t64} $t64 == $t64;

    // $t65 := signer::address_of($t0) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:283:22+27
    assume {:print "$at(170,10882,10909)"} true;
    call $t65 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(170,10882,10909)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // assume Identical($t66, global<object::ObjectCore>(signer::$address_of($t64))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:305:9+65
    assume {:print "$at(136,11825,11890)"} true;
    assume ($t66 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t64)));

    // assume Identical($t67, pack guid::GUID(pack guid::ID(select object::ObjectCore.guid_creation_num($t66), signer::$address_of($t64)))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:308:9+185
    assume {:print "$at(136,11963,12148)"} true;
    assume ($t67 == $1_guid_GUID($1_guid_ID($t66->$guid_creation_num, $1_signer_$address_of($t64))));

    // $t68 := object::new_event_handle<collection::MutationEvent>($t64) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:287:30+40
    assume {:print "$at(170,11000,11040)"} true;
    call $t68 := $1_object_new_event_handle'$4_collection_MutationEvent'($t64);
    if ($abort_flag) {
        assume {:print "$at(170,11000,11040)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // $t69 := pack collection::Collection($t65, $t1, $t3, $t5, $t68) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:282:26+203
    assume {:print "$at(170,10848,11051)"} true;
    $t69 := $4_collection_Collection($t65, $t1, $t3, $t5, $t68);

    // trace_local[collection#465]($t69) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:282:13+10
    assume {:print "$track_local(69,3,7):", $t69} $t69 == $t69;

    // move_to<collection::Collection>($t69, $t64) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:289:9+7
    assume {:print "$at(170,11061,11068)"} true;
    if ($ResourceExists($4_collection_Collection_$memory, $t64->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4_collection_Collection_$memory := $ResourceUpdate($4_collection_Collection_$memory, $t64->$addr, $t69);
    }
    if ($abort_flag) {
        assume {:print "$at(170,11061,11068)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // $t70 := opaque begin: option::is_some<collection::ConcurrentSupply>($t48) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:291:13+24
    assume {:print "$at(170,11111,11135)"} true;

    // assume WellFormed($t70) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:291:13+24
    assume $IsValid'bool'($t70);

    // assume Eq<bool>($t70, option::spec_is_some<collection::ConcurrentSupply>($t48)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:291:13+24
    assume $IsEqual'bool'($t70, $1_option_spec_is_some'$4_collection_ConcurrentSupply'($t48));

    // $t70 := opaque end: option::is_some<collection::ConcurrentSupply>($t48) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:291:13+24

    // if ($t70) goto L15 else goto L14 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:291:9+165
    if ($t70) { goto L15; } else { goto L14; }

    // label L15 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:21+14
    assume {:print "$at(170,11159,11173)"} true;
L15:

    // $t71 := opaque begin: option::destroy_some<collection::ConcurrentSupply>($t48) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:37+28
    assume {:print "$at(170,11175,11203)"} true;

    // assume Identical($t72, option::spec_is_none<collection::ConcurrentSupply>($t48)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:37+28
    assume ($t72 == $1_option_spec_is_none'$4_collection_ConcurrentSupply'($t48));

    // if ($t72) goto L41 else goto L40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:37+28
    if ($t72) { goto L41; } else { goto L40; }

    // label L41 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:37+28
L41:

    // assume And(option::spec_is_none<collection::ConcurrentSupply>($t48), Eq(262145, $t36)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:37+28
    assume {:print "$at(170,11175,11203)"} true;
    assume ($1_option_spec_is_none'$4_collection_ConcurrentSupply'($t48) && $IsEqual'num'(262145, $t36));

    // trace_abort($t36) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:37+28
    assume {:print "$at(170,11175,11203)"} true;
    assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;

    // goto L35 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:37+28
    goto L35;

    // label L40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:37+28
L40:

    // assume WellFormed($t71) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:37+28
    assume {:print "$at(170,11175,11203)"} true;
    assume $IsValid'$4_collection_ConcurrentSupply'($t71);

    // assume Eq<collection::ConcurrentSupply>($t71, option::spec_borrow<collection::ConcurrentSupply>($t48)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:37+28
    assume $IsEqual'$4_collection_ConcurrentSupply'($t71, $1_option_spec_borrow'$4_collection_ConcurrentSupply'($t48));

    // $t71 := opaque end: option::destroy_some<collection::ConcurrentSupply>($t48) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:37+28

    // move_to<collection::ConcurrentSupply>($t71, $t64) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:13+7
    if ($ResourceExists($4_collection_ConcurrentSupply_$memory, $t64->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4_collection_ConcurrentSupply_$memory := $ResourceUpdate($4_collection_ConcurrentSupply_$memory, $t64->$addr, $t71);
    }
    if ($abort_flag) {
        assume {:print "$at(170,11151,11158)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // goto L16 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:13+53
    goto L16;

    // label L14 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:294:34+6
    assume {:print "$at(170,11255,11261)"} true;
L14:

    // opaque begin: option::destroy_none<collection::ConcurrentSupply>($t48) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:294:13+28
    assume {:print "$at(170,11234,11262)"} true;

    // assume Identical($t73, option::spec_is_some<collection::ConcurrentSupply>($t48)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:294:13+28
    assume ($t73 == $1_option_spec_is_some'$4_collection_ConcurrentSupply'($t48));

    // if ($t73) goto L43 else goto L42 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:294:13+28
    if ($t73) { goto L43; } else { goto L42; }

    // label L43 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:294:13+28
L43:

    // assume And(option::spec_is_some<collection::ConcurrentSupply>($t48), Eq(262144, $t36)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:294:13+28
    assume {:print "$at(170,11234,11262)"} true;
    assume ($1_option_spec_is_some'$4_collection_ConcurrentSupply'($t48) && $IsEqual'num'(262144, $t36));

    // trace_abort($t36) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:294:13+28
    assume {:print "$at(170,11234,11262)"} true;
    assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;

    // goto L35 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:294:13+28
    goto L35;

    // label L42 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:294:13+28
L42:

    // opaque end: option::destroy_none<collection::ConcurrentSupply>($t48) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:294:13+28
    assume {:print "$at(170,11234,11262)"} true;

    // label L16 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:297:29+8
    assume {:print "$at(170,11303,11311)"} true;
L16:

    // $t74 := copy($t22) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:297:29+8
    assume {:print "$at(170,11303,11311)"} true;
    $t74 := $t22;

    // $t75 := opaque begin: option::is_some<royalty::Royalty>($t74) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:297:13+25

    // assume WellFormed($t75) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:297:13+25
    assume $IsValid'bool'($t75);

    // assume Eq<bool>($t75, option::spec_is_some<royalty::Royalty>($t74)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:297:13+25
    assume $IsEqual'bool'($t75, $1_option_spec_is_some'$4_royalty_Royalty'($t74));

    // $t75 := opaque end: option::is_some<royalty::Royalty>($t74) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:297:13+25

    // if ($t75) goto L18 else goto L17 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:297:9+117
    if ($t75) { goto L18; } else { goto L17; }

    // label L18 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:27+16
    assume {:print "$at(170,11342,11358)"} true;
L18:

    // $t76 := borrow_local($t22) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:61+12
    assume {:print "$at(170,11376,11388)"} true;
    $t76 := $Mutation($Local(22), EmptyVec(), $t22);

    // $t77 := opaque begin: option::extract<royalty::Royalty>($t76) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29

    // $t78 := read_ref($t76) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    $t78 := $Dereference($t76);

    // assume Identical($t79, option::spec_is_none<royalty::Royalty>($t76)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    assume ($t79 == $1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t76)));

    // if ($t79) goto L45 else goto L52 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    if ($t79) { goto L45; } else { goto L52; }

    // label L45 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
L45:

    // assume And(option::spec_is_none<royalty::Royalty>($t76), Eq(262145, $t36)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    assume {:print "$at(170,11360,11389)"} true;
    assume ($1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t76)) && $IsEqual'num'(262145, $t36));

    // trace_abort($t36) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    assume {:print "$at(170,11360,11389)"} true;
    assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;

    // goto L35 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    goto L35;

    // label L44 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
L44:

    // $t76 := havoc[mut]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    assume {:print "$at(170,11360,11389)"} true;
    havoc $temp_0'$1_option_Option'$4_royalty_Royalty'';
    $t76 := $UpdateMutation($t76, $temp_0'$1_option_Option'$4_royalty_Royalty'');

    // assume And(WellFormed($t76), Le(Len<royalty::Royalty>(select option::Option.vec($t76)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($Dereference($t76)) && (LenVec($Dereference($t76)->$vec) <= 1));

    // assume WellFormed($t77) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    assume $IsValid'$4_royalty_Royalty'($t77);

    // assume Eq<royalty::Royalty>($t77, option::spec_borrow<royalty::Royalty>($t78)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    assume $IsEqual'$4_royalty_Royalty'($t77, $1_option_spec_borrow'$4_royalty_Royalty'($t78));

    // assume option::spec_is_none<royalty::Royalty>($t76) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    assume $1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t76));

    // $t77 := opaque end: option::extract<royalty::Royalty>($t76) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29

    // pack_ref_deep($t76) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29

    // write_back[LocalRoot($t22)@]($t76) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    $t22 := $Dereference($t76);

    // trace_local[royalty#461]($t22) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    assume {:print "$track_local(69,3,22):", $t22} $t22 == $t22;

    // royalty::init($t40, $t77) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:13+62
    call $4_royalty_init($t40, $t77);
    if ($abort_flag) {
        assume {:print "$at(170,11328,11390)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // label L17 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:301:58+16
    assume {:print "$at(170,11460,11476)"} true;
L17:

    // $t80 := object::generate_transfer_ref($t40) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:301:28+47
    assume {:print "$at(170,11430,11477)"} true;
    call $t80 := $1_object_generate_transfer_ref($t40);
    if ($abort_flag) {
        assume {:print "$at(170,11430,11477)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // trace_local[transfer_ref#466]($t80) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:301:13+12
    assume {:print "$track_local(69,3,28):", $t80} $t80 == $t80;

    // object::disable_ungated_transfer($t80) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:302:9+47
    assume {:print "$at(170,11487,11534)"} true;
    call $1_object_disable_ungated_transfer($t80);
    if ($abort_flag) {
        assume {:print "$at(170,11487,11534)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // goto L19 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:159:9+1072
    assume {:print "$at(170,6621,7693)"} true;
    goto L19;

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:176:33+1
    assume {:print "$at(170,7215,7216)"} true;
L3:

    // $t81 := 0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:176:33+1
    assume {:print "$at(170,7215,7216)"} true;
    $t81 := 0;
    assume $IsValid'u64'($t81);

    // $t82 := 0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:178:31+1
    assume {:print "$at(170,7276,7277)"} true;
    $t82 := 0;
    assume $IsValid'u64'($t82);

    // assume Identical($t83, global<object::ObjectCore>(signer::$address_of($t41))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:305:9+65
    assume {:print "$at(136,11825,11890)"} true;
    assume ($t83 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t41)));

    // assume Identical($t84, pack guid::GUID(pack guid::ID(select object::ObjectCore.guid_creation_num($t83), signer::$address_of($t41)))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:308:9+185
    assume {:print "$at(136,11963,12148)"} true;
    assume ($t84 == $1_guid_GUID($1_guid_ID($t83->$guid_creation_num, $1_signer_$address_of($t41))));

    // $t85 := object::new_event_handle<collection::BurnEvent>($t41) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:179:30+40
    assume {:print "$at(170,7308,7348)"} true;
    call $t85 := $1_object_new_event_handle'$4_collection_BurnEvent'($t41);
    if ($abort_flag) {
        assume {:print "$at(170,7308,7348)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // assume Identical($t86, global<object::ObjectCore>(signer::$address_of($t41))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:305:9+65
    assume {:print "$at(136,11825,11890)"} true;
    assume ($t86 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t41)));

    // assume Identical($t87, pack guid::GUID(pack guid::ID(select object::ObjectCore.guid_creation_num($t86), signer::$address_of($t41)))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:308:9+185
    assume {:print "$at(136,11963,12148)"} true;
    assume ($t87 == $1_guid_GUID($1_guid_ID($t86->$guid_creation_num, $1_signer_$address_of($t41))));

    // $t88 := object::new_event_handle<collection::MintEvent>($t41) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:180:30+40
    assume {:print "$at(170,7379,7419)"} true;
    call $t88 := $1_object_new_event_handle'$4_collection_MintEvent'($t41);
    if ($abort_flag) {
        assume {:print "$at(170,7379,7419)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // $t89 := pack collection::FixedSupply($t81, $t2, $t82, $t85, $t88) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:175:26+265
    assume {:print "$at(170,7169,7434)"} true;
    $t89 := $4_collection_FixedSupply($t81, $t2, $t82, $t85, $t88);

    // trace_local[supply#1]($t89) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:175:17+6
    assume {:print "$track_local(69,3,25):", $t89} $t89 == $t89;

    // $t90 := opaque begin: option::some<collection::FixedSupply>($t89) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:190:17+20
    assume {:print "$at(170,7648,7668)"} true;

    // assume And(WellFormed($t90), Le(Len<collection::FixedSupply>(select option::Option.vec($t90)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:190:17+20
    assume ($IsValid'$1_option_Option'$4_collection_FixedSupply''($t90) && (LenVec($t90->$vec) <= 1));

    // assume Eq<option::Option<collection::FixedSupply>>($t90, option::spec_some<collection::FixedSupply>($t89)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:190:17+20
    assume $IsEqual'$1_option_Option'$4_collection_FixedSupply''($t90, $1_option_spec_some'$4_collection_FixedSupply'($t89));

    // $t90 := opaque end: option::some<collection::FixedSupply>($t89) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:190:17+20

    // trace_local[supply#473]($t90) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:274:9+6
    assume {:print "$at(170,10374,10380)"} true;
    assume {:print "$track_local(69,3,27):", $t90} $t90 == $t90;

    // trace_local[uri#472]($t5) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:273:9+3
    assume {:print "$at(170,10353,10356)"} true;
    assume {:print "$track_local(69,3,31):", $t5} $t5 == $t5;

    // $t23 := $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:272:9+7
    assume {:print "$at(170,10319,10326)"} true;
    $t23 := $t4;

    // trace_local[royalty#471]($t23) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:272:9+7
    assume {:print "$track_local(69,3,23):", $t23} $t23 == $t23;

    // trace_local[name#470]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:271:9+4
    assume {:print "$at(170,10297,10301)"} true;
    assume {:print "$track_local(69,3,18):", $t3} $t3 == $t3;

    // trace_local[description#469]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:270:9+11
    assume {:print "$at(170,10268,10279)"} true;
    assume {:print "$track_local(69,3,16):", $t1} $t1 == $t1;

    // trace_local[constructor_ref#468]($t40) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:269:9+15
    assume {:print "$at(170,10227,10242)"} true;
    assume {:print "$track_local(69,3,12):", $t40} $t40 == $t40;

    // trace_local[creator#467]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:268:9+7
    assume {:print "$at(170,10201,10208)"} true;
    assume {:print "$track_local(69,3,14):", $t0} $t0 == $t0;

    // $t91 := string::length($t3) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:17+21
    assume {:print "$at(170,10438,10459)"} true;
    call $t91 := $1_string_length($t3);
    if ($abort_flag) {
        assume {:print "$at(170,10438,10459)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // $t92 := 128 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:42+26
    $t92 := 128;
    assume $IsValid'u64'($t92);

    // $t93 := <=($t91, $t92) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:39+2
    call $t93 := $Le($t91, $t92);

    // if ($t93) goto L21 else goto L20 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:9+108
    if ($t93) { goto L21; } else { goto L20; }

    // label L21 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:9+108
L21:

    // goto L22 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:9+108
    assume {:print "$at(170,10430,10538)"} true;
    goto L22;

    // label L20 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:9+108
L20:

    // $t94 := 3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:90+25
    assume {:print "$at(170,10511,10536)"} true;
    $t94 := 3;
    assume $IsValid'u64'($t94);

    // $t95 := error::out_of_range($t94) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:70+46
    call $t95 := $1_error_out_of_range($t94);
    if ($abort_flag) {
        assume {:print "$at(170,10491,10537)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // trace_abort($t95) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:9+108
    assume {:print "$at(170,10430,10538)"} true;
    assume {:print "$track_abort(69,3):", $t95} $t95 == $t95;

    // $t36 := move($t95) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:9+108
    $t36 := $t95;

    // goto L35 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:276:9+108
    goto L35;

    // label L22 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:32+4
    assume {:print "$at(170,10571,10575)"} true;
L22:

    // $t96 := string::length($t5) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:17+20
    assume {:print "$at(170,10556,10576)"} true;
    call $t96 := $1_string_length($t5);
    if ($abort_flag) {
        assume {:print "$at(170,10556,10576)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // $t97 := 512 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:41+14
    $t97 := 512;
    assume $IsValid'u64'($t97);

    // $t98 := <=($t96, $t97) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:38+2
    call $t98 := $Le($t96, $t97);

    // if ($t98) goto L24 else goto L23 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:9+83
    if ($t98) { goto L24; } else { goto L23; }

    // label L24 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:9+83
L24:

    // goto L25 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:9+83
    assume {:print "$at(170,10548,10631)"} true;
    goto L25;

    // label L23 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:9+83
L23:

    // $t99 := 4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:77+13
    assume {:print "$at(170,10616,10629)"} true;
    $t99 := 4;
    assume $IsValid'u64'($t99);

    // $t100 := error::out_of_range($t99) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:57+34
    call $t100 := $1_error_out_of_range($t99);
    if ($abort_flag) {
        assume {:print "$at(170,10596,10630)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // trace_abort($t100) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:9+83
    assume {:print "$at(170,10548,10631)"} true;
    assume {:print "$track_abort(69,3):", $t100} $t100 == $t100;

    // $t36 := move($t100) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:9+83
    $t36 := $t100;

    // goto L35 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:277:9+83
    goto L35;

    // label L25 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:32+12
    assume {:print "$at(170,10664,10676)"} true;
L25:

    // $t101 := string::length($t1) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:17+28
    assume {:print "$at(170,10649,10677)"} true;
    call $t101 := $1_string_length($t1);
    if ($abort_flag) {
        assume {:print "$at(170,10649,10677)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // $t102 := 2048 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:49+22
    $t102 := 2048;
    assume $IsValid'u64'($t102);

    // $t103 := <=($t101, $t102) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:46+2
    call $t103 := $Le($t101, $t102);

    // if ($t103) goto L27 else goto L26 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:9+107
    if ($t103) { goto L27; } else { goto L26; }

    // label L27 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:9+107
L27:

    // goto L28 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:9+107
    assume {:print "$at(170,10641,10748)"} true;
    goto L28;

    // label L26 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:9+107
L26:

    // $t104 := 5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:93+21
    assume {:print "$at(170,10725,10746)"} true;
    $t104 := 5;
    assume $IsValid'u64'($t104);

    // $t105 := error::out_of_range($t104) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:73+42
    call $t105 := $1_error_out_of_range($t104);
    if ($abort_flag) {
        assume {:print "$at(170,10705,10747)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // trace_abort($t105) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:9+107
    assume {:print "$at(170,10641,10748)"} true;
    assume {:print "$track_abort(69,3):", $t105} $t105 == $t105;

    // $t36 := move($t105) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:9+107
    $t36 := $t105;

    // goto L35 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:278:9+107
    goto L35;

    // label L28 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:280:53+16
    assume {:print "$at(170,10803,10819)"} true;
L28:

    // $t106 := object::generate_signer($t40) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:280:29+41
    assume {:print "$at(170,10779,10820)"} true;
    call $t106 := $1_object_generate_signer($t40);
    if ($abort_flag) {
        assume {:print "$at(170,10779,10820)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // trace_local[object_signer#474]($t106) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:280:13+13
    assume {:print "$track_local(69,3,21):", $t106} $t106 == $t106;

    // $t107 := signer::address_of($t0) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:283:22+27
    assume {:print "$at(170,10882,10909)"} true;
    call $t107 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(170,10882,10909)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // assume Identical($t108, global<object::ObjectCore>(signer::$address_of($t106))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:305:9+65
    assume {:print "$at(136,11825,11890)"} true;
    assume ($t108 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t106)));

    // assume Identical($t109, pack guid::GUID(pack guid::ID(select object::ObjectCore.guid_creation_num($t108), signer::$address_of($t106)))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:308:9+185
    assume {:print "$at(136,11963,12148)"} true;
    assume ($t109 == $1_guid_GUID($1_guid_ID($t108->$guid_creation_num, $1_signer_$address_of($t106))));

    // $t110 := object::new_event_handle<collection::MutationEvent>($t106) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:287:30+40
    assume {:print "$at(170,11000,11040)"} true;
    call $t110 := $1_object_new_event_handle'$4_collection_MutationEvent'($t106);
    if ($abort_flag) {
        assume {:print "$at(170,11000,11040)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // $t111 := pack collection::Collection($t107, $t1, $t3, $t5, $t110) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:282:26+203
    assume {:print "$at(170,10848,11051)"} true;
    $t111 := $4_collection_Collection($t107, $t1, $t3, $t5, $t110);

    // trace_local[collection#475]($t111) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:282:13+10
    assume {:print "$track_local(69,3,8):", $t111} $t111 == $t111;

    // move_to<collection::Collection>($t111, $t106) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:289:9+7
    assume {:print "$at(170,11061,11068)"} true;
    if ($ResourceExists($4_collection_Collection_$memory, $t106->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4_collection_Collection_$memory := $ResourceUpdate($4_collection_Collection_$memory, $t106->$addr, $t111);
    }
    if ($abort_flag) {
        assume {:print "$at(170,11061,11068)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // $t112 := opaque begin: option::is_some<collection::FixedSupply>($t90) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:291:13+24
    assume {:print "$at(170,11111,11135)"} true;

    // assume WellFormed($t112) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:291:13+24
    assume $IsValid'bool'($t112);

    // assume Eq<bool>($t112, option::spec_is_some<collection::FixedSupply>($t90)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:291:13+24
    assume $IsEqual'bool'($t112, $1_option_spec_is_some'$4_collection_FixedSupply'($t90));

    // $t112 := opaque end: option::is_some<collection::FixedSupply>($t90) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:291:13+24

    // if ($t112) goto L30 else goto L29 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:291:9+165
    if ($t112) { goto L30; } else { goto L29; }

    // label L30 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:21+14
    assume {:print "$at(170,11159,11173)"} true;
L30:

    // $t113 := opaque begin: option::destroy_some<collection::FixedSupply>($t90) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:37+28
    assume {:print "$at(170,11175,11203)"} true;

    // assume Identical($t114, option::spec_is_none<collection::FixedSupply>($t90)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:37+28
    assume ($t114 == $1_option_spec_is_none'$4_collection_FixedSupply'($t90));

    // if ($t114) goto L47 else goto L46 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:37+28
    if ($t114) { goto L47; } else { goto L46; }

    // label L47 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:37+28
L47:

    // assume And(option::spec_is_none<collection::FixedSupply>($t90), Eq(262145, $t36)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:37+28
    assume {:print "$at(170,11175,11203)"} true;
    assume ($1_option_spec_is_none'$4_collection_FixedSupply'($t90) && $IsEqual'num'(262145, $t36));

    // trace_abort($t36) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:37+28
    assume {:print "$at(170,11175,11203)"} true;
    assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;

    // goto L35 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:37+28
    goto L35;

    // label L46 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:37+28
L46:

    // assume WellFormed($t113) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:37+28
    assume {:print "$at(170,11175,11203)"} true;
    assume $IsValid'$4_collection_FixedSupply'($t113);

    // assume Eq<collection::FixedSupply>($t113, option::spec_borrow<collection::FixedSupply>($t90)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:37+28
    assume $IsEqual'$4_collection_FixedSupply'($t113, $1_option_spec_borrow'$4_collection_FixedSupply'($t90));

    // $t113 := opaque end: option::destroy_some<collection::FixedSupply>($t90) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:37+28

    // move_to<collection::FixedSupply>($t113, $t106) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:13+7
    if ($ResourceExists($4_collection_FixedSupply_$memory, $t106->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4_collection_FixedSupply_$memory := $ResourceUpdate($4_collection_FixedSupply_$memory, $t106->$addr, $t113);
    }
    if ($abort_flag) {
        assume {:print "$at(170,11151,11158)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // goto L31 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:292:13+53
    goto L31;

    // label L29 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:294:34+6
    assume {:print "$at(170,11255,11261)"} true;
L29:

    // opaque begin: option::destroy_none<collection::FixedSupply>($t90) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:294:13+28
    assume {:print "$at(170,11234,11262)"} true;

    // assume Identical($t115, option::spec_is_some<collection::FixedSupply>($t90)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:294:13+28
    assume ($t115 == $1_option_spec_is_some'$4_collection_FixedSupply'($t90));

    // if ($t115) goto L49 else goto L48 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:294:13+28
    if ($t115) { goto L49; } else { goto L48; }

    // label L49 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:294:13+28
L49:

    // assume And(option::spec_is_some<collection::FixedSupply>($t90), Eq(262144, $t36)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:294:13+28
    assume {:print "$at(170,11234,11262)"} true;
    assume ($1_option_spec_is_some'$4_collection_FixedSupply'($t90) && $IsEqual'num'(262144, $t36));

    // trace_abort($t36) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:294:13+28
    assume {:print "$at(170,11234,11262)"} true;
    assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;

    // goto L35 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:294:13+28
    goto L35;

    // label L48 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:294:13+28
L48:

    // opaque end: option::destroy_none<collection::FixedSupply>($t90) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:294:13+28
    assume {:print "$at(170,11234,11262)"} true;

    // label L31 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:297:29+8
    assume {:print "$at(170,11303,11311)"} true;
L31:

    // $t116 := copy($t23) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:297:29+8
    assume {:print "$at(170,11303,11311)"} true;
    $t116 := $t23;

    // $t117 := opaque begin: option::is_some<royalty::Royalty>($t116) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:297:13+25

    // assume WellFormed($t117) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:297:13+25
    assume $IsValid'bool'($t117);

    // assume Eq<bool>($t117, option::spec_is_some<royalty::Royalty>($t116)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:297:13+25
    assume $IsEqual'bool'($t117, $1_option_spec_is_some'$4_royalty_Royalty'($t116));

    // $t117 := opaque end: option::is_some<royalty::Royalty>($t116) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:297:13+25

    // if ($t117) goto L33 else goto L32 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:297:9+117
    if ($t117) { goto L33; } else { goto L32; }

    // label L33 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:27+16
    assume {:print "$at(170,11342,11358)"} true;
L33:

    // $t118 := borrow_local($t23) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:61+12
    assume {:print "$at(170,11376,11388)"} true;
    $t118 := $Mutation($Local(23), EmptyVec(), $t23);

    // $t119 := opaque begin: option::extract<royalty::Royalty>($t118) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29

    // $t120 := read_ref($t118) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    $t120 := $Dereference($t118);

    // assume Identical($t121, option::spec_is_none<royalty::Royalty>($t118)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    assume ($t121 == $1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t118)));

    // if ($t121) goto L51 else goto L53 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    if ($t121) { goto L51; } else { goto L53; }

    // label L51 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
L51:

    // assume And(option::spec_is_none<royalty::Royalty>($t118), Eq(262145, $t36)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    assume {:print "$at(170,11360,11389)"} true;
    assume ($1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t118)) && $IsEqual'num'(262145, $t36));

    // trace_abort($t36) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    assume {:print "$at(170,11360,11389)"} true;
    assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;

    // goto L35 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    goto L35;

    // label L50 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
L50:

    // $t118 := havoc[mut]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    assume {:print "$at(170,11360,11389)"} true;
    havoc $temp_0'$1_option_Option'$4_royalty_Royalty'';
    $t118 := $UpdateMutation($t118, $temp_0'$1_option_Option'$4_royalty_Royalty'');

    // assume And(WellFormed($t118), Le(Len<royalty::Royalty>(select option::Option.vec($t118)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($Dereference($t118)) && (LenVec($Dereference($t118)->$vec) <= 1));

    // assume WellFormed($t119) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    assume $IsValid'$4_royalty_Royalty'($t119);

    // assume Eq<royalty::Royalty>($t119, option::spec_borrow<royalty::Royalty>($t120)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    assume $IsEqual'$4_royalty_Royalty'($t119, $1_option_spec_borrow'$4_royalty_Royalty'($t120));

    // assume option::spec_is_none<royalty::Royalty>($t118) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    assume $1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t118));

    // $t119 := opaque end: option::extract<royalty::Royalty>($t118) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29

    // pack_ref_deep($t118) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29

    // write_back[LocalRoot($t23)@]($t118) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    $t23 := $Dereference($t118);

    // trace_local[royalty#471]($t23) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:45+29
    assume {:print "$track_local(69,3,23):", $t23} $t23 == $t23;

    // royalty::init($t40, $t119) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:298:13+62
    call $4_royalty_init($t40, $t119);
    if ($abort_flag) {
        assume {:print "$at(170,11328,11390)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // label L32 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:301:58+16
    assume {:print "$at(170,11460,11476)"} true;
L32:

    // $t122 := object::generate_transfer_ref($t40) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:301:28+47
    assume {:print "$at(170,11430,11477)"} true;
    call $t122 := $1_object_generate_transfer_ref($t40);
    if ($abort_flag) {
        assume {:print "$at(170,11430,11477)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // trace_local[transfer_ref#476]($t122) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:301:13+12
    assume {:print "$track_local(69,3,29):", $t122} $t122 == $t122;

    // object::disable_ungated_transfer($t122) on_abort goto L35 with $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:302:9+47
    assume {:print "$at(170,11487,11534)"} true;
    call $1_object_disable_ungated_transfer($t122);
    if ($abort_flag) {
        assume {:print "$at(170,11487,11534)"} true;
        $t36 := $abort_code;
        assume {:print "$track_abort(69,3):", $t36} $t36 == $t36;
        goto L35;
    }

    // label L19 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:159:9+1072
    assume {:print "$at(170,6621,7693)"} true;
L19:

    // trace_return[0]($t40) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:159:9+1072
    assume {:print "$at(170,6621,7693)"} true;
    assume {:print "$track_return(69,3,0):", $t40} $t40 == $t40;

    // label L34 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:193:5+1
    assume {:print "$at(170,7698,7699)"} true;
L34:

    // return $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:193:5+1
    assume {:print "$at(170,7698,7699)"} true;
    $ret0 := $t40;
    return;

    // label L35 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:193:5+1
L35:

    // abort($t36) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:193:5+1
    assume {:print "$at(170,7698,7699)"} true;
    $abort_code := $t36;
    $abort_flag := true;
    return;

    // label L52 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L52:

    // destroy($t76) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L44 at <internal>:1:1+10
    goto L44;

    // label L53 at <internal>:1:1+10
L53:

    // destroy($t118) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L50 at <internal>:1:1+10
    goto L50;

}

// fun collection::increment_concurrent_supply [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:359:5+2259
procedure {:inline 1} $4_collection_increment_concurrent_supply(_$t0: $1_object_Object'$4_collection_Collection', _$t1: int) returns ($ret0: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'')
{
    // declare local variables
    var $t2: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'';
    var $t3: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'';
    var $t4: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'';
    var $t5: int;
    var $t6: $Mutation ($4_collection_ConcurrentSupply);
    var $t7: $Mutation ($4_collection_FixedSupply);
    var $t8: $Mutation ($4_collection_UnlimitedSupply);
    var $t9: int;
    var $t10: int;
    var $t11: bool;
    var $t12: $Mutation ($4_collection_ConcurrentSupply);
    var $t13: $Mutation ($1_aggregator_v2_Aggregator'u64');
    var $t14: int;
    var $t15: bool;
    var $t16: bool;
    var $t17: int;
    var $t18: int;
    var $t19: $Mutation ($1_aggregator_v2_Aggregator'u64');
    var $t20: int;
    var $t21: $1_aggregator_v2_Aggregator'u64';
    var $t22: $1_aggregator_v2_AggregatorSnapshot'u64';
    var $t23: bool;
    var $t24: $4_collection_ConcurrentMintEvent;
    var $t25: $1_aggregator_v2_Aggregator'u64';
    var $t26: $1_aggregator_v2_AggregatorSnapshot'u64';
    var $t27: bool;
    var $t28: bool;
    var $t29: $Mutation ($4_collection_FixedSupply);
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: $Mutation (int);
    var $t34: int;
    var $t35: int;
    var $t36: int;
    var $t37: $Mutation (int);
    var $t38: int;
    var $t39: int;
    var $t40: bool;
    var $t41: int;
    var $t42: int;
    var $t43: $Mutation ($1_event_EventHandle'$4_collection_MintEvent');
    var $t44: int;
    var $t45: $4_collection_MintEvent;
    var $t46: int;
    var $t47: $1_aggregator_v2_AggregatorSnapshot'u64';
    var $t48: bool;
    var $t49: bool;
    var $t50: $Mutation ($4_collection_UnlimitedSupply);
    var $t51: int;
    var $t52: int;
    var $t53: int;
    var $t54: $Mutation (int);
    var $t55: int;
    var $t56: int;
    var $t57: int;
    var $t58: $Mutation (int);
    var $t59: $Mutation ($1_event_EventHandle'$4_collection_MintEvent');
    var $t60: int;
    var $t61: $4_collection_MintEvent;
    var $t62: int;
    var $t63: $1_aggregator_v2_AggregatorSnapshot'u64';
    var $t64: bool;
    var $t0: $1_object_Object'$4_collection_Collection';
    var $t1: int;
    var $temp_0'$1_aggregator_v2_Aggregator'u64'': $1_aggregator_v2_Aggregator'u64';
    var $temp_0'$1_object_Object'$4_collection_Collection'': $1_object_Object'$4_collection_Collection';
    var $temp_0'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64''': $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'';
    var $temp_0'$4_collection_ConcurrentSupply': $4_collection_ConcurrentSupply;
    var $temp_0'$4_collection_FixedSupply': $4_collection_FixedSupply;
    var $temp_0'$4_collection_UnlimitedSupply': $4_collection_UnlimitedSupply;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[collection]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:359:5+1
    assume {:print "$at(170,13969,13970)"} true;
    assume {:print "$track_local(69,10,0):", $t0} $t0 == $t0;

    // trace_local[token]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:359:5+1
    assume {:print "$track_local(69,10,1):", $t1} $t1 == $t1;

    // $t9 := object::object_address<collection::Collection>($t0) on_abort goto L16 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:363:31+34
    assume {:print "$at(170,14209,14243)"} true;
    call $t9 := $1_object_object_address'$4_collection_Collection'($t0);
    if ($abort_flag) {
        assume {:print "$at(170,14209,14243)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(69,10):", $t10} $t10 == $t10;
        goto L16;
    }

    // trace_local[collection_addr]($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:363:13+15
    assume {:print "$track_local(69,10,5):", $t9} $t9 == $t9;

    // $t11 := exists<collection::ConcurrentSupply>($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:364:13+6
    assume {:print "$at(170,14257,14263)"} true;
    $t11 := $ResourceExists($4_collection_ConcurrentSupply_$memory, $t9);

    // if ($t11) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:364:9+1969
    if ($t11) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:365:62+15
    assume {:print "$at(170,14363,14378)"} true;
L1:

    // $t12 := borrow_global<collection::ConcurrentSupply>($t9) on_abort goto L16 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:365:26+17
    assume {:print "$at(170,14327,14344)"} true;
    if (!$ResourceExists($4_collection_ConcurrentSupply_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t12 := $Mutation($Global($t9), EmptyVec(), $ResourceValue($4_collection_ConcurrentSupply_$memory, $t9));
    }
    if ($abort_flag) {
        assume {:print "$at(170,14327,14344)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(69,10):", $t10} $t10 == $t10;
        goto L16;
    }

    // trace_local[supply]($t12) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:365:17+6
    $temp_0'$4_collection_ConcurrentSupply' := $Dereference($t12);
    assume {:print "$track_local(69,10,6):", $temp_0'$4_collection_ConcurrentSupply'} $temp_0'$4_collection_ConcurrentSupply' == $temp_0'$4_collection_ConcurrentSupply';

    // $t13 := borrow_field<collection::ConcurrentSupply>.current_supply($t12) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:367:40+26
    assume {:print "$at(170,14441,14467)"} true;
    $t13 := $ChildMutation($t12, 0, $Dereference($t12)->$current_supply);

    // $t14 := 1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:367:68+1
    $t14 := 1;
    assume $IsValid'u64'($t14);

    // $t15 := opaque begin: aggregator_v2::try_add<u64>($t13, $t14) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:367:17+53

    // $t16 := havoc[val]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:367:17+53
    havoc $t16;

    // if ($t16) goto L27 else goto L17 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:367:17+53
    if ($t16) { goto L27; } else { goto L17; }

    // label L18 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:367:17+53
L18:

    // trace_abort($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:367:17+53
    assume {:print "$at(170,14418,14471)"} true;
    assume {:print "$track_abort(69,10):", $t10} $t10 == $t10;

    // goto L16 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:367:17+53
    goto L16;

    // label L17 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:367:17+53
L17:

    // $t13 := havoc[mut]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:367:17+53
    assume {:print "$at(170,14418,14471)"} true;
    havoc $temp_0'$1_aggregator_v2_Aggregator'u64'';
    $t13 := $UpdateMutation($t13, $temp_0'$1_aggregator_v2_Aggregator'u64'');

    // assume WellFormed($t13) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:367:17+53
    assume $IsValid'$1_aggregator_v2_Aggregator'u64''($Dereference($t13));

    // assume WellFormed($t15) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:367:17+53
    assume $IsValid'bool'($t15);

    // $t15 := opaque end: aggregator_v2::try_add<u64>($t13, $t14) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:367:17+53

    // write_back[Reference($t12).current_supply (aggregator_v2::Aggregator<u64>)]($t13) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:367:17+53
    $t12 := $UpdateMutation($t12, $Update'$4_collection_ConcurrentSupply'_current_supply($Dereference($t12), $Dereference($t13)));

    // if ($t15) goto L3 else goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:366:13+159
    assume {:print "$at(170,14393,14552)"} true;
    if ($t15) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:366:13+159
L3:

    // goto L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:366:13+159
    assume {:print "$at(170,14393,14552)"} true;
    goto L4;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:366:13+159
L2:

    // write_back[collection::ConcurrentSupply@]($t12) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:366:13+159
    assume {:print "$at(170,14393,14552)"} true;
    $4_collection_ConcurrentSupply_$memory := $ResourceUpdate($4_collection_ConcurrentSupply_$memory, $GlobalLocationAddress($t12),
        $Dereference($t12));

    // destroy($t12) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:366:13+159

    // $t17 := 2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:368:37+27
    assume {:print "$at(170,14509,14536)"} true;
    $t17 := 2;
    assume $IsValid'u64'($t17);

    // $t18 := error::out_of_range($t17) on_abort goto L16 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:368:17+48
    call $t18 := $1_error_out_of_range($t17);
    if ($abort_flag) {
        assume {:print "$at(170,14489,14537)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(69,10):", $t10} $t10 == $t10;
        goto L16;
    }

    // trace_abort($t18) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:366:13+159
    assume {:print "$at(170,14393,14552)"} true;
    assume {:print "$track_abort(69,10):", $t18} $t18 == $t18;

    // $t10 := move($t18) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:366:13+159
    $t10 := $t18;

    // goto L16 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:366:13+159
    goto L16;

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:370:37+6
    assume {:print "$at(170,14590,14596)"} true;
L4:

    // $t19 := borrow_field<collection::ConcurrentSupply>.total_minted($t12) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:370:32+24
    assume {:print "$at(170,14585,14609)"} true;
    $t19 := $ChildMutation($t12, 1, $Dereference($t12)->$total_minted);

    // $t20 := 1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:370:58+1
    $t20 := 1;
    assume $IsValid'u64'($t20);

    // aggregator_v2::add<u64>($t19, $t20) on_abort goto L16 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:370:13+47
    call $t19 := $1_aggregator_v2_add'u64'($t19, $t20);
    if ($abort_flag) {
        assume {:print "$at(170,14566,14613)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(69,10):", $t10} $t10 == $t10;
        goto L16;
    }

    // write_back[Reference($t12).total_minted (aggregator_v2::Aggregator<u64>)]($t19) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:370:13+47
    $t12 := $UpdateMutation($t12, $Update'$4_collection_ConcurrentSupply'_total_minted($Dereference($t12), $Dereference($t19)));

    // $t21 := get_field<collection::ConcurrentSupply>.total_minted($t12) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:374:52+20
    assume {:print "$at(170,14766,14786)"} true;
    $t21 := $Dereference($t12)->$total_minted;

    // $t22 := opaque begin: aggregator_v2::snapshot<u64>($t21) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:374:28+45

    // $t23 := havoc[val]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:374:28+45
    havoc $t23;

    // if ($t23) goto L28 else goto L19 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:374:28+45
    if ($t23) { goto L28; } else { goto L19; }

    // label L20 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:374:28+45
L20:

    // trace_abort($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:374:28+45
    assume {:print "$at(170,14742,14787)"} true;
    assume {:print "$track_abort(69,10):", $t10} $t10 == $t10;

    // goto L16 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:374:28+45
    goto L16;

    // label L19 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:374:28+45
L19:

    // assume WellFormed($t22) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:374:28+45
    assume {:print "$at(170,14742,14787)"} true;
    assume $IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''($t22);

    // $t22 := opaque end: aggregator_v2::snapshot<u64>($t21) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:374:28+45

    // $t24 := pack collection::ConcurrentMintEvent($t9, $t22, $t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:372:17+177
    assume {:print "$at(170,14656,14833)"} true;
    $t24 := $4_collection_ConcurrentMintEvent($t9, $t22, $t1);

    // opaque begin: event::emit<collection::ConcurrentMintEvent>($t24) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:371:13+221
    assume {:print "$at(170,14627,14848)"} true;

    // opaque end: event::emit<collection::ConcurrentMintEvent>($t24) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:371:13+221

    // $t25 := get_field<collection::ConcurrentSupply>.total_minted($t12) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:378:50+20
    assume {:print "$at(170,14899,14919)"} true;
    $t25 := $Dereference($t12)->$total_minted;

    // write_back[collection::ConcurrentSupply@]($t12) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:378:50+20
    $4_collection_ConcurrentSupply_$memory := $ResourceUpdate($4_collection_ConcurrentSupply_$memory, $GlobalLocationAddress($t12),
        $Dereference($t12));

    // $t26 := opaque begin: aggregator_v2::snapshot<u64>($t25) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:378:26+45

    // $t27 := havoc[val]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:378:26+45
    havoc $t27;

    // if ($t27) goto L22 else goto L21 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:378:26+45
    if ($t27) { goto L22; } else { goto L21; }

    // label L22 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:378:26+45
L22:

    // trace_abort($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:378:26+45
    assume {:print "$at(170,14875,14920)"} true;
    assume {:print "$track_abort(69,10):", $t10} $t10 == $t10;

    // goto L16 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:378:26+45
    goto L16;

    // label L21 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:378:26+45
L21:

    // assume WellFormed($t26) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:378:26+45
    assume {:print "$at(170,14875,14920)"} true;
    assume $IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''($t26);

    // $t26 := opaque end: aggregator_v2::snapshot<u64>($t25) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:378:26+45

    // $t4 := opaque begin: option::some<aggregator_v2::AggregatorSnapshot<u64>>($t26) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:378:13+59

    // assume And(WellFormed($t4), Le(Len<aggregator_v2::AggregatorSnapshot<u64>>(select option::Option.vec($t4)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:378:13+59
    assume ($IsValid'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''($t4) && (LenVec($t4->$vec) <= 1));

    // assume Eq<option::Option<aggregator_v2::AggregatorSnapshot<u64>>>($t4, option::spec_some<aggregator_v2::AggregatorSnapshot<u64>>($t26)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:378:13+59
    assume $IsEqual'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''($t4, $1_option_spec_some'$1_aggregator_v2_AggregatorSnapshot'u64''($t26));

    // $t4 := opaque end: option::some<aggregator_v2::AggregatorSnapshot<u64>>($t26) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:378:13+59

    // goto L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:364:9+1969
    assume {:print "$at(170,14253,16222)"} true;
    goto L5;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:379:40+15
    assume {:print "$at(170,14961,14976)"} true;
L0:

    // $t28 := exists<collection::FixedSupply>($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:379:20+6
    assume {:print "$at(170,14941,14947)"} true;
    $t28 := $ResourceExists($4_collection_FixedSupply_$memory, $t9);

    // if ($t28) goto L7 else goto L6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:379:16+1285
    if ($t28) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:380:57+15
    assume {:print "$at(170,15037,15052)"} true;
L7:

    // $t29 := borrow_global<collection::FixedSupply>($t9) on_abort goto L16 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:380:26+17
    assume {:print "$at(170,15006,15023)"} true;
    if (!$ResourceExists($4_collection_FixedSupply_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t29 := $Mutation($Global($t9), EmptyVec(), $ResourceValue($4_collection_FixedSupply_$memory, $t9));
    }
    if ($abort_flag) {
        assume {:print "$at(170,15006,15023)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(69,10):", $t10} $t10 == $t10;
        goto L16;
    }

    // trace_local[supply#1]($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:380:17+6
    $temp_0'$4_collection_FixedSupply' := $Dereference($t29);
    assume {:print "$track_local(69,10,7):", $temp_0'$4_collection_FixedSupply'} $temp_0'$4_collection_FixedSupply' == $temp_0'$4_collection_FixedSupply';

    // $t30 := get_field<collection::FixedSupply>.current_supply($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:381:37+21
    assume {:print "$at(170,15091,15112)"} true;
    $t30 := $Dereference($t29)->$current_supply;

    // $t31 := 1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:381:61+1
    $t31 := 1;
    assume $IsValid'u64'($t31);

    // $t32 := +($t30, $t31) on_abort goto L16 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:381:59+1
    call $t32 := $AddU64($t30, $t31);
    if ($abort_flag) {
        assume {:print "$at(170,15113,15114)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(69,10):", $t10} $t10 == $t10;
        goto L16;
    }

    // $t33 := borrow_field<collection::FixedSupply>.current_supply($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:381:13+21
    $t33 := $ChildMutation($t29, 0, $Dereference($t29)->$current_supply);

    // write_ref($t33, $t32) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:381:13+49
    $t33 := $UpdateMutation($t33, $t32);

    // write_back[Reference($t29).current_supply (u64)]($t33) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:381:13+49
    $t29 := $UpdateMutation($t29, $Update'$4_collection_FixedSupply'_current_supply($Dereference($t29), $Dereference($t33)));

    // $t34 := get_field<collection::FixedSupply>.total_minted($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:382:35+19
    assume {:print "$at(170,15152,15171)"} true;
    $t34 := $Dereference($t29)->$total_minted;

    // $t35 := 1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:382:57+1
    $t35 := 1;
    assume $IsValid'u64'($t35);

    // $t36 := +($t34, $t35) on_abort goto L16 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:382:55+1
    call $t36 := $AddU64($t34, $t35);
    if ($abort_flag) {
        assume {:print "$at(170,15172,15173)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(69,10):", $t10} $t10 == $t10;
        goto L16;
    }

    // $t37 := borrow_field<collection::FixedSupply>.total_minted($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:382:13+19
    $t37 := $ChildMutation($t29, 2, $Dereference($t29)->$total_minted);

    // write_ref($t37, $t36) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:382:13+45
    $t37 := $UpdateMutation($t37, $t36);

    // write_back[Reference($t29).total_minted (u64)]($t37) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:382:13+45
    $t29 := $UpdateMutation($t29, $Update'$4_collection_FixedSupply'_total_minted($Dereference($t29), $Dereference($t37)));

    // $t38 := get_field<collection::FixedSupply>.current_supply($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:384:17+21
    assume {:print "$at(170,15214,15235)"} true;
    $t38 := $Dereference($t29)->$current_supply;

    // $t39 := get_field<collection::FixedSupply>.max_supply($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:384:42+17
    $t39 := $Dereference($t29)->$max_supply;

    // $t40 := <=($t38, $t39) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:384:39+2
    call $t40 := $Le($t38, $t39);

    // if ($t40) goto L9 else goto L8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:383:13+148
    assume {:print "$at(170,15189,15337)"} true;
    if ($t40) { goto L9; } else { goto L8; }

    // label L9 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:383:13+148
L9:

    // goto L10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:383:13+148
    assume {:print "$at(170,15189,15337)"} true;
    goto L10;

    // label L8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:383:13+148
L8:

    // write_back[collection::FixedSupply@]($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:383:13+148
    assume {:print "$at(170,15189,15337)"} true;
    $4_collection_FixedSupply_$memory := $ResourceUpdate($4_collection_FixedSupply_$memory, $GlobalLocationAddress($t29),
        $Dereference($t29));

    // destroy($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:383:13+148

    // $t41 := 2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:385:37+27
    assume {:print "$at(170,15294,15321)"} true;
    $t41 := 2;
    assume $IsValid'u64'($t41);

    // $t42 := error::out_of_range($t41) on_abort goto L16 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:385:17+48
    call $t42 := $1_error_out_of_range($t41);
    if ($abort_flag) {
        assume {:print "$at(170,15274,15322)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(69,10):", $t10} $t10 == $t10;
        goto L16;
    }

    // trace_abort($t42) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:383:13+148
    assume {:print "$at(170,15189,15337)"} true;
    assume {:print "$track_abort(69,10):", $t42} $t42 == $t42;

    // $t10 := move($t42) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:383:13+148
    $t10 := $t42;

    // goto L16 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:383:13+148
    goto L16;

    // label L10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:387:36+6
    assume {:print "$at(170,15374,15380)"} true;
L10:

    // $t43 := borrow_field<collection::FixedSupply>.mint_events($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:387:31+23
    assume {:print "$at(170,15369,15392)"} true;
    $t43 := $ChildMutation($t29, 4, $Dereference($t29)->$mint_events);

    // $t44 := get_field<collection::FixedSupply>.total_minted($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:389:28+19
    assume {:print "$at(170,15449,15468)"} true;
    $t44 := $Dereference($t29)->$total_minted;

    // $t45 := pack collection::MintEvent($t44, $t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:388:17+104
    assume {:print "$at(170,15410,15514)"} true;
    $t45 := $4_collection_MintEvent($t44, $t1);

    // opaque begin: event::emit_event<collection::MintEvent>($t43, $t45) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:387:13+178
    assume {:print "$at(170,15351,15529)"} true;

    // opaque end: event::emit_event<collection::MintEvent>($t43, $t45) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:387:13+178

    // write_back[Reference($t29).mint_events (event::EventHandle<collection::MintEvent>)]($t43) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:387:13+178
    $t29 := $UpdateMutation($t29, $Update'$4_collection_FixedSupply'_mint_events($Dereference($t29), $Dereference($t43)));

    // $t46 := get_field<collection::FixedSupply>.total_minted($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:393:62+19
    assume {:print "$at(170,15592,15611)"} true;
    $t46 := $Dereference($t29)->$total_minted;

    // write_back[collection::FixedSupply@]($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:393:62+19
    $4_collection_FixedSupply_$memory := $ResourceUpdate($4_collection_FixedSupply_$memory, $GlobalLocationAddress($t29),
        $Dereference($t29));

    // $t47 := opaque begin: aggregator_v2::create_snapshot<u64>($t46) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:393:26+56

    // $t48 := havoc[val]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:393:26+56
    havoc $t48;

    // if ($t48) goto L24 else goto L23 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:393:26+56
    if ($t48) { goto L24; } else { goto L23; }

    // label L24 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:393:26+56
L24:

    // trace_abort($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:393:26+56
    assume {:print "$at(170,15556,15612)"} true;
    assume {:print "$track_abort(69,10):", $t10} $t10 == $t10;

    // goto L16 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:393:26+56
    goto L16;

    // label L23 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:393:26+56
L23:

    // assume WellFormed($t47) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:393:26+56
    assume {:print "$at(170,15556,15612)"} true;
    assume $IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''($t47);

    // $t47 := opaque end: aggregator_v2::create_snapshot<u64>($t46) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:393:26+56

    // $t3 := opaque begin: option::some<aggregator_v2::AggregatorSnapshot<u64>>($t47) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:393:13+70

    // assume And(WellFormed($t3), Le(Len<aggregator_v2::AggregatorSnapshot<u64>>(select option::Option.vec($t3)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:393:13+70
    assume ($IsValid'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''($t3) && (LenVec($t3->$vec) <= 1));

    // assume Eq<option::Option<aggregator_v2::AggregatorSnapshot<u64>>>($t3, option::spec_some<aggregator_v2::AggregatorSnapshot<u64>>($t47)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:393:13+70
    assume $IsEqual'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''($t3, $1_option_spec_some'$1_aggregator_v2_AggregatorSnapshot'u64''($t47));

    // $t3 := opaque end: option::some<aggregator_v2::AggregatorSnapshot<u64>>($t47) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:393:13+70

    // goto L11 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:379:16+1285
    assume {:print "$at(170,14937,16222)"} true;
    goto L11;

    // label L6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:394:44+15
    assume {:print "$at(170,15657,15672)"} true;
L6:

    // $t49 := exists<collection::UnlimitedSupply>($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:394:20+6
    assume {:print "$at(170,15633,15639)"} true;
    $t49 := $ResourceExists($4_collection_UnlimitedSupply_$memory, $t9);

    // if ($t49) goto L13 else goto L12 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:394:16+593
    if ($t49) { goto L13; } else { goto L12; }

    // label L13 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:395:61+15
    assume {:print "$at(170,15737,15752)"} true;
L13:

    // $t50 := borrow_global<collection::UnlimitedSupply>($t9) on_abort goto L16 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:395:26+17
    assume {:print "$at(170,15702,15719)"} true;
    if (!$ResourceExists($4_collection_UnlimitedSupply_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t50 := $Mutation($Global($t9), EmptyVec(), $ResourceValue($4_collection_UnlimitedSupply_$memory, $t9));
    }
    if ($abort_flag) {
        assume {:print "$at(170,15702,15719)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(69,10):", $t10} $t10 == $t10;
        goto L16;
    }

    // trace_local[supply#2]($t50) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:395:17+6
    $temp_0'$4_collection_UnlimitedSupply' := $Dereference($t50);
    assume {:print "$track_local(69,10,8):", $temp_0'$4_collection_UnlimitedSupply'} $temp_0'$4_collection_UnlimitedSupply' == $temp_0'$4_collection_UnlimitedSupply';

    // $t51 := get_field<collection::UnlimitedSupply>.current_supply($t50) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:396:37+21
    assume {:print "$at(170,15791,15812)"} true;
    $t51 := $Dereference($t50)->$current_supply;

    // $t52 := 1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:396:61+1
    $t52 := 1;
    assume $IsValid'u64'($t52);

    // $t53 := +($t51, $t52) on_abort goto L16 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:396:59+1
    call $t53 := $AddU64($t51, $t52);
    if ($abort_flag) {
        assume {:print "$at(170,15813,15814)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(69,10):", $t10} $t10 == $t10;
        goto L16;
    }

    // $t54 := borrow_field<collection::UnlimitedSupply>.current_supply($t50) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:396:13+21
    $t54 := $ChildMutation($t50, 0, $Dereference($t50)->$current_supply);

    // write_ref($t54, $t53) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:396:13+49
    $t54 := $UpdateMutation($t54, $t53);

    // write_back[Reference($t50).current_supply (u64)]($t54) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:396:13+49
    $t50 := $UpdateMutation($t50, $Update'$4_collection_UnlimitedSupply'_current_supply($Dereference($t50), $Dereference($t54)));

    // $t55 := get_field<collection::UnlimitedSupply>.total_minted($t50) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:397:35+19
    assume {:print "$at(170,15852,15871)"} true;
    $t55 := $Dereference($t50)->$total_minted;

    // $t56 := 1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:397:57+1
    $t56 := 1;
    assume $IsValid'u64'($t56);

    // $t57 := +($t55, $t56) on_abort goto L16 with $t10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:397:55+1
    call $t57 := $AddU64($t55, $t56);
    if ($abort_flag) {
        assume {:print "$at(170,15872,15873)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(69,10):", $t10} $t10 == $t10;
        goto L16;
    }

    // $t58 := borrow_field<collection::UnlimitedSupply>.total_minted($t50) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:397:13+19
    $t58 := $ChildMutation($t50, 1, $Dereference($t50)->$total_minted);

    // write_ref($t58, $t57) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:397:13+45
    $t58 := $UpdateMutation($t58, $t57);

    // write_back[Reference($t50).total_minted (u64)]($t58) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:397:13+45
    $t50 := $UpdateMutation($t50, $Update'$4_collection_UnlimitedSupply'_total_minted($Dereference($t50), $Dereference($t58)));

    // $t59 := borrow_field<collection::UnlimitedSupply>.mint_events($t50) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:399:17+23
    assume {:print "$at(170,15924,15947)"} true;
    $t59 := $ChildMutation($t50, 3, $Dereference($t50)->$mint_events);

    // $t60 := get_field<collection::UnlimitedSupply>.total_minted($t50) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:401:28+19
    assume {:print "$at(170,16004,16023)"} true;
    $t60 := $Dereference($t50)->$total_minted;

    // $t61 := pack collection::MintEvent($t60, $t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:400:17+104
    assume {:print "$at(170,15965,16069)"} true;
    $t61 := $4_collection_MintEvent($t60, $t1);

    // opaque begin: event::emit_event<collection::MintEvent>($t59, $t61) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:398:13+195
    assume {:print "$at(170,15889,16084)"} true;

    // opaque end: event::emit_event<collection::MintEvent>($t59, $t61) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:398:13+195

    // write_back[Reference($t50).mint_events (event::EventHandle<collection::MintEvent>)]($t59) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:398:13+195
    $t50 := $UpdateMutation($t50, $Update'$4_collection_UnlimitedSupply'_mint_events($Dereference($t50), $Dereference($t59)));

    // $t62 := get_field<collection::UnlimitedSupply>.total_minted($t50) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:405:62+19
    assume {:print "$at(170,16147,16166)"} true;
    $t62 := $Dereference($t50)->$total_minted;

    // write_back[collection::UnlimitedSupply@]($t50) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:405:62+19
    $4_collection_UnlimitedSupply_$memory := $ResourceUpdate($4_collection_UnlimitedSupply_$memory, $GlobalLocationAddress($t50),
        $Dereference($t50));

    // $t63 := opaque begin: aggregator_v2::create_snapshot<u64>($t62) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:405:26+56

    // $t64 := havoc[val]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:405:26+56
    havoc $t64;

    // if ($t64) goto L26 else goto L25 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:405:26+56
    if ($t64) { goto L26; } else { goto L25; }

    // label L26 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:405:26+56
L26:

    // trace_abort($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:405:26+56
    assume {:print "$at(170,16111,16167)"} true;
    assume {:print "$track_abort(69,10):", $t10} $t10 == $t10;

    // goto L16 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:405:26+56
    goto L16;

    // label L25 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:405:26+56
L25:

    // assume WellFormed($t63) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:405:26+56
    assume {:print "$at(170,16111,16167)"} true;
    assume $IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''($t63);

    // $t63 := opaque end: aggregator_v2::create_snapshot<u64>($t62) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:405:26+56

    // $t2 := opaque begin: option::some<aggregator_v2::AggregatorSnapshot<u64>>($t63) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:405:13+70

    // assume And(WellFormed($t2), Le(Len<aggregator_v2::AggregatorSnapshot<u64>>(select option::Option.vec($t2)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:405:13+70
    assume ($IsValid'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''($t2) && (LenVec($t2->$vec) <= 1));

    // assume Eq<option::Option<aggregator_v2::AggregatorSnapshot<u64>>>($t2, option::spec_some<aggregator_v2::AggregatorSnapshot<u64>>($t63)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:405:13+70
    assume $IsEqual'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''($t2, $1_option_spec_some'$1_aggregator_v2_AggregatorSnapshot'u64''($t63));

    // $t2 := opaque end: option::some<aggregator_v2::AggregatorSnapshot<u64>>($t63) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:405:13+70

    // goto L14 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:394:16+593
    assume {:print "$at(170,15629,16222)"} true;
    goto L14;

    // label L12 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:407:13+14
    assume {:print "$at(170,16198,16212)"} true;
L12:

    // $t2 := opaque begin: option::none<aggregator_v2::AggregatorSnapshot<u64>>() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:407:13+14
    assume {:print "$at(170,16198,16212)"} true;

    // assume And(WellFormed($t2), Le(Len<aggregator_v2::AggregatorSnapshot<u64>>(select option::Option.vec($t2)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:407:13+14
    assume ($IsValid'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''($t2) && (LenVec($t2->$vec) <= 1));

    // assume Eq<option::Option<aggregator_v2::AggregatorSnapshot<u64>>>($t2, option::spec_none<aggregator_v2::AggregatorSnapshot<u64>>()) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:407:13+14
    assume $IsEqual'$1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'''($t2, $1_option_spec_none'$1_aggregator_v2_AggregatorSnapshot'u64''());

    // $t2 := opaque end: option::none<aggregator_v2::AggregatorSnapshot<u64>>() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:407:13+14

    // label L14 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:394:16+593
    assume {:print "$at(170,15629,16222)"} true;
L14:

    // $t3 := $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:379:16+1285
    assume {:print "$at(170,14937,16222)"} true;
    $t3 := $t2;

    // label L11 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:379:16+1285
L11:

    // $t4 := $t3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:364:9+1969
    assume {:print "$at(170,14253,16222)"} true;
    $t4 := $t3;

    // label L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:364:9+1969
L5:

    // trace_return[0]($t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:364:9+1969
    assume {:print "$at(170,14253,16222)"} true;
    assume {:print "$track_return(69,10,0):", $t4} $t4 == $t4;

    // label L15 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:409:5+1
    assume {:print "$at(170,16227,16228)"} true;
L15:

    // return $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:409:5+1
    assume {:print "$at(170,16227,16228)"} true;
    $ret0 := $t4;
    return;

    // label L16 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:409:5+1
L16:

    // abort($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:409:5+1
    assume {:print "$at(170,16227,16228)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

    // label L27 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L27:

    // destroy($t12) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L18 at <internal>:1:1+10
    goto L18;

    // label L28 at <internal>:1:1+10
L28:

    // destroy($t12) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L20 at <internal>:1:1+10
    goto L20;

}

// fun collection::increment_supply [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:321:5+1452
procedure {:inline 1} $4_collection_increment_supply(_$t0: $1_object_Object'$4_collection_Collection', _$t1: int) returns ($ret0: $1_option_Option'u64')
{
    // declare local variables
    var $t2: $1_option_Option'u64';
    var $t3: $1_option_Option'u64';
    var $t4: int;
    var $t5: $Mutation ($4_collection_FixedSupply);
    var $t6: $Mutation ($4_collection_UnlimitedSupply);
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: $Mutation ($4_collection_FixedSupply);
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: $Mutation (int);
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t18: $Mutation (int);
    var $t19: int;
    var $t20: int;
    var $t21: bool;
    var $t22: int;
    var $t23: int;
    var $t24: $Mutation ($1_event_EventHandle'$4_collection_MintEvent');
    var $t25: int;
    var $t26: $4_collection_MintEvent;
    var $t27: int;
    var $t28: bool;
    var $t29: $Mutation ($4_collection_UnlimitedSupply);
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: $Mutation (int);
    var $t34: int;
    var $t35: int;
    var $t36: int;
    var $t37: $Mutation (int);
    var $t38: $Mutation ($1_event_EventHandle'$4_collection_MintEvent');
    var $t39: int;
    var $t40: $4_collection_MintEvent;
    var $t41: int;
    var $t0: $1_object_Object'$4_collection_Collection';
    var $t1: int;
    var $temp_0'$1_object_Object'$4_collection_Collection'': $1_object_Object'$4_collection_Collection';
    var $temp_0'$1_option_Option'u64'': $1_option_Option'u64';
    var $temp_0'$4_collection_FixedSupply': $4_collection_FixedSupply;
    var $temp_0'$4_collection_UnlimitedSupply': $4_collection_UnlimitedSupply;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[collection]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:321:5+1
    assume {:print "$at(170,12418,12419)"} true;
    assume {:print "$track_local(69,11,0):", $t0} $t0 == $t0;

    // trace_local[token]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:321:5+1
    assume {:print "$track_local(69,11,1):", $t1} $t1 == $t1;

    // $t7 := object::object_address<collection::Collection>($t0) on_abort goto L10 with $t8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:325:31+34
    assume {:print "$at(170,12609,12643)"} true;
    call $t7 := $1_object_object_address'$4_collection_Collection'($t0);
    if ($abort_flag) {
        assume {:print "$at(170,12609,12643)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(69,11):", $t8} $t8 == $t8;
        goto L10;
    }

    // trace_local[collection_addr]($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:325:13+15
    assume {:print "$track_local(69,11,4):", $t7} $t7 == $t7;

    // $t9 := exists<collection::FixedSupply>($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:326:13+6
    assume {:print "$at(170,12657,12663)"} true;
    $t9 := $ResourceExists($4_collection_FixedSupply_$memory, $t7);

    // if ($t9) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:326:9+1211
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:327:57+15
    assume {:print "$at(170,12753,12768)"} true;
L1:

    // $t10 := borrow_global<collection::FixedSupply>($t7) on_abort goto L10 with $t8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:327:26+17
    assume {:print "$at(170,12722,12739)"} true;
    if (!$ResourceExists($4_collection_FixedSupply_$memory, $t7)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $Mutation($Global($t7), EmptyVec(), $ResourceValue($4_collection_FixedSupply_$memory, $t7));
    }
    if ($abort_flag) {
        assume {:print "$at(170,12722,12739)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(69,11):", $t8} $t8 == $t8;
        goto L10;
    }

    // trace_local[supply]($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:327:17+6
    $temp_0'$4_collection_FixedSupply' := $Dereference($t10);
    assume {:print "$track_local(69,11,5):", $temp_0'$4_collection_FixedSupply'} $temp_0'$4_collection_FixedSupply' == $temp_0'$4_collection_FixedSupply';

    // $t11 := get_field<collection::FixedSupply>.current_supply($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:328:37+21
    assume {:print "$at(170,12807,12828)"} true;
    $t11 := $Dereference($t10)->$current_supply;

    // $t12 := 1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:328:61+1
    $t12 := 1;
    assume $IsValid'u64'($t12);

    // $t13 := +($t11, $t12) on_abort goto L10 with $t8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:328:59+1
    call $t13 := $AddU64($t11, $t12);
    if ($abort_flag) {
        assume {:print "$at(170,12829,12830)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(69,11):", $t8} $t8 == $t8;
        goto L10;
    }

    // $t14 := borrow_field<collection::FixedSupply>.current_supply($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:328:13+21
    $t14 := $ChildMutation($t10, 0, $Dereference($t10)->$current_supply);

    // write_ref($t14, $t13) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:328:13+49
    $t14 := $UpdateMutation($t14, $t13);

    // write_back[Reference($t10).current_supply (u64)]($t14) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:328:13+49
    $t10 := $UpdateMutation($t10, $Update'$4_collection_FixedSupply'_current_supply($Dereference($t10), $Dereference($t14)));

    // $t15 := get_field<collection::FixedSupply>.total_minted($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:329:35+19
    assume {:print "$at(170,12868,12887)"} true;
    $t15 := $Dereference($t10)->$total_minted;

    // $t16 := 1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:329:57+1
    $t16 := 1;
    assume $IsValid'u64'($t16);

    // $t17 := +($t15, $t16) on_abort goto L10 with $t8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:329:55+1
    call $t17 := $AddU64($t15, $t16);
    if ($abort_flag) {
        assume {:print "$at(170,12888,12889)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(69,11):", $t8} $t8 == $t8;
        goto L10;
    }

    // $t18 := borrow_field<collection::FixedSupply>.total_minted($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:329:13+19
    $t18 := $ChildMutation($t10, 2, $Dereference($t10)->$total_minted);

    // write_ref($t18, $t17) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:329:13+45
    $t18 := $UpdateMutation($t18, $t17);

    // write_back[Reference($t10).total_minted (u64)]($t18) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:329:13+45
    $t10 := $UpdateMutation($t10, $Update'$4_collection_FixedSupply'_total_minted($Dereference($t10), $Dereference($t18)));

    // $t19 := get_field<collection::FixedSupply>.current_supply($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:331:17+21
    assume {:print "$at(170,12930,12951)"} true;
    $t19 := $Dereference($t10)->$current_supply;

    // $t20 := get_field<collection::FixedSupply>.max_supply($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:331:42+17
    $t20 := $Dereference($t10)->$max_supply;

    // $t21 := <=($t19, $t20) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:331:39+2
    call $t21 := $Le($t19, $t20);

    // if ($t21) goto L3 else goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:330:13+148
    assume {:print "$at(170,12905,13053)"} true;
    if ($t21) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:330:13+148
L3:

    // goto L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:330:13+148
    assume {:print "$at(170,12905,13053)"} true;
    goto L4;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:330:13+148
L2:

    // write_back[collection::FixedSupply@]($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:330:13+148
    assume {:print "$at(170,12905,13053)"} true;
    $4_collection_FixedSupply_$memory := $ResourceUpdate($4_collection_FixedSupply_$memory, $GlobalLocationAddress($t10),
        $Dereference($t10));

    // destroy($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:330:13+148

    // $t22 := 2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:332:37+27
    assume {:print "$at(170,13010,13037)"} true;
    $t22 := 2;
    assume $IsValid'u64'($t22);

    // $t23 := error::out_of_range($t22) on_abort goto L10 with $t8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:332:17+48
    call $t23 := $1_error_out_of_range($t22);
    if ($abort_flag) {
        assume {:print "$at(170,12990,13038)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(69,11):", $t8} $t8 == $t8;
        goto L10;
    }

    // trace_abort($t23) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:330:13+148
    assume {:print "$at(170,12905,13053)"} true;
    assume {:print "$track_abort(69,11):", $t23} $t23 == $t23;

    // $t8 := move($t23) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:330:13+148
    $t8 := $t23;

    // goto L10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:330:13+148
    goto L10;

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:334:36+6
    assume {:print "$at(170,13090,13096)"} true;
L4:

    // $t24 := borrow_field<collection::FixedSupply>.mint_events($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:334:31+23
    assume {:print "$at(170,13085,13108)"} true;
    $t24 := $ChildMutation($t10, 4, $Dereference($t10)->$mint_events);

    // $t25 := get_field<collection::FixedSupply>.total_minted($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:336:28+19
    assume {:print "$at(170,13165,13184)"} true;
    $t25 := $Dereference($t10)->$total_minted;

    // $t26 := pack collection::MintEvent($t25, $t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:335:17+104
    assume {:print "$at(170,13126,13230)"} true;
    $t26 := $4_collection_MintEvent($t25, $t1);

    // opaque begin: event::emit_event<collection::MintEvent>($t24, $t26) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:334:13+178
    assume {:print "$at(170,13067,13245)"} true;

    // opaque end: event::emit_event<collection::MintEvent>($t24, $t26) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:334:13+178

    // write_back[Reference($t10).mint_events (event::EventHandle<collection::MintEvent>)]($t24) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:334:13+178
    $t10 := $UpdateMutation($t10, $Update'$4_collection_FixedSupply'_mint_events($Dereference($t10), $Dereference($t24)));

    // $t27 := get_field<collection::FixedSupply>.total_minted($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:340:26+19
    assume {:print "$at(170,13272,13291)"} true;
    $t27 := $Dereference($t10)->$total_minted;

    // write_back[collection::FixedSupply@]($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:340:26+19
    $4_collection_FixedSupply_$memory := $ResourceUpdate($4_collection_FixedSupply_$memory, $GlobalLocationAddress($t10),
        $Dereference($t10));

    // $t3 := opaque begin: option::some<u64>($t27) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:340:13+33

    // assume And(WellFormed($t3), Le(Len<u64>(select option::Option.vec($t3)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:340:13+33
    assume ($IsValid'$1_option_Option'u64''($t3) && (LenVec($t3->$vec) <= 1));

    // assume Eq<option::Option<u64>>($t3, option::spec_some<u64>($t27)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:340:13+33
    assume $IsEqual'$1_option_Option'u64''($t3, $1_option_spec_some'u64'($t27));

    // $t3 := opaque end: option::some<u64>($t27) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:340:13+33

    // goto L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:326:9+1211
    assume {:print "$at(170,12653,13864)"} true;
    goto L5;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:341:44+15
    assume {:print "$at(170,13336,13351)"} true;
L0:

    // $t28 := exists<collection::UnlimitedSupply>($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:341:20+6
    assume {:print "$at(170,13312,13318)"} true;
    $t28 := $ResourceExists($4_collection_UnlimitedSupply_$memory, $t7);

    // if ($t28) goto L7 else goto L6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:341:16+556
    if ($t28) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:342:61+15
    assume {:print "$at(170,13416,13431)"} true;
L7:

    // $t29 := borrow_global<collection::UnlimitedSupply>($t7) on_abort goto L10 with $t8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:342:26+17
    assume {:print "$at(170,13381,13398)"} true;
    if (!$ResourceExists($4_collection_UnlimitedSupply_$memory, $t7)) {
        call $ExecFailureAbort();
    } else {
        $t29 := $Mutation($Global($t7), EmptyVec(), $ResourceValue($4_collection_UnlimitedSupply_$memory, $t7));
    }
    if ($abort_flag) {
        assume {:print "$at(170,13381,13398)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(69,11):", $t8} $t8 == $t8;
        goto L10;
    }

    // trace_local[supply#1]($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:342:17+6
    $temp_0'$4_collection_UnlimitedSupply' := $Dereference($t29);
    assume {:print "$track_local(69,11,6):", $temp_0'$4_collection_UnlimitedSupply'} $temp_0'$4_collection_UnlimitedSupply' == $temp_0'$4_collection_UnlimitedSupply';

    // $t30 := get_field<collection::UnlimitedSupply>.current_supply($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:343:37+21
    assume {:print "$at(170,13470,13491)"} true;
    $t30 := $Dereference($t29)->$current_supply;

    // $t31 := 1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:343:61+1
    $t31 := 1;
    assume $IsValid'u64'($t31);

    // $t32 := +($t30, $t31) on_abort goto L10 with $t8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:343:59+1
    call $t32 := $AddU64($t30, $t31);
    if ($abort_flag) {
        assume {:print "$at(170,13492,13493)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(69,11):", $t8} $t8 == $t8;
        goto L10;
    }

    // $t33 := borrow_field<collection::UnlimitedSupply>.current_supply($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:343:13+21
    $t33 := $ChildMutation($t29, 0, $Dereference($t29)->$current_supply);

    // write_ref($t33, $t32) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:343:13+49
    $t33 := $UpdateMutation($t33, $t32);

    // write_back[Reference($t29).current_supply (u64)]($t33) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:343:13+49
    $t29 := $UpdateMutation($t29, $Update'$4_collection_UnlimitedSupply'_current_supply($Dereference($t29), $Dereference($t33)));

    // $t34 := get_field<collection::UnlimitedSupply>.total_minted($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:344:35+19
    assume {:print "$at(170,13531,13550)"} true;
    $t34 := $Dereference($t29)->$total_minted;

    // $t35 := 1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:344:57+1
    $t35 := 1;
    assume $IsValid'u64'($t35);

    // $t36 := +($t34, $t35) on_abort goto L10 with $t8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:344:55+1
    call $t36 := $AddU64($t34, $t35);
    if ($abort_flag) {
        assume {:print "$at(170,13551,13552)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(69,11):", $t8} $t8 == $t8;
        goto L10;
    }

    // $t37 := borrow_field<collection::UnlimitedSupply>.total_minted($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:344:13+19
    $t37 := $ChildMutation($t29, 1, $Dereference($t29)->$total_minted);

    // write_ref($t37, $t36) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:344:13+45
    $t37 := $UpdateMutation($t37, $t36);

    // write_back[Reference($t29).total_minted (u64)]($t37) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:344:13+45
    $t29 := $UpdateMutation($t29, $Update'$4_collection_UnlimitedSupply'_total_minted($Dereference($t29), $Dereference($t37)));

    // $t38 := borrow_field<collection::UnlimitedSupply>.mint_events($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:346:17+23
    assume {:print "$at(170,13603,13626)"} true;
    $t38 := $ChildMutation($t29, 3, $Dereference($t29)->$mint_events);

    // $t39 := get_field<collection::UnlimitedSupply>.total_minted($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:348:28+19
    assume {:print "$at(170,13683,13702)"} true;
    $t39 := $Dereference($t29)->$total_minted;

    // $t40 := pack collection::MintEvent($t39, $t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:347:17+104
    assume {:print "$at(170,13644,13748)"} true;
    $t40 := $4_collection_MintEvent($t39, $t1);

    // opaque begin: event::emit_event<collection::MintEvent>($t38, $t40) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:345:13+195
    assume {:print "$at(170,13568,13763)"} true;

    // opaque end: event::emit_event<collection::MintEvent>($t38, $t40) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:345:13+195

    // write_back[Reference($t29).mint_events (event::EventHandle<collection::MintEvent>)]($t38) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:345:13+195
    $t29 := $UpdateMutation($t29, $Update'$4_collection_UnlimitedSupply'_mint_events($Dereference($t29), $Dereference($t38)));

    // $t41 := get_field<collection::UnlimitedSupply>.total_minted($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:352:26+19
    assume {:print "$at(170,13790,13809)"} true;
    $t41 := $Dereference($t29)->$total_minted;

    // write_back[collection::UnlimitedSupply@]($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:352:26+19
    $4_collection_UnlimitedSupply_$memory := $ResourceUpdate($4_collection_UnlimitedSupply_$memory, $GlobalLocationAddress($t29),
        $Dereference($t29));

    // $t2 := opaque begin: option::some<u64>($t41) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:352:13+33

    // assume And(WellFormed($t2), Le(Len<u64>(select option::Option.vec($t2)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:352:13+33
    assume ($IsValid'$1_option_Option'u64''($t2) && (LenVec($t2->$vec) <= 1));

    // assume Eq<option::Option<u64>>($t2, option::spec_some<u64>($t41)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:352:13+33
    assume $IsEqual'$1_option_Option'u64''($t2, $1_option_spec_some'u64'($t41));

    // $t2 := opaque end: option::some<u64>($t41) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:352:13+33

    // goto L8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:341:16+556
    assume {:print "$at(170,13308,13864)"} true;
    goto L8;

    // label L6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:354:13+14
    assume {:print "$at(170,13840,13854)"} true;
L6:

    // $t2 := opaque begin: option::none<u64>() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:354:13+14
    assume {:print "$at(170,13840,13854)"} true;

    // assume And(WellFormed($t2), Le(Len<u64>(select option::Option.vec($t2)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:354:13+14
    assume ($IsValid'$1_option_Option'u64''($t2) && (LenVec($t2->$vec) <= 1));

    // assume Eq<option::Option<u64>>($t2, option::spec_none<u64>()) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:354:13+14
    assume $IsEqual'$1_option_Option'u64''($t2, $1_option_spec_none'u64'());

    // $t2 := opaque end: option::none<u64>() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:354:13+14

    // label L8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:341:16+556
    assume {:print "$at(170,13308,13864)"} true;
L8:

    // $t3 := $t2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:326:9+1211
    assume {:print "$at(170,12653,13864)"} true;
    $t3 := $t2;

    // label L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:326:9+1211
L5:

    // trace_return[0]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:326:9+1211
    assume {:print "$at(170,12653,13864)"} true;
    assume {:print "$track_return(69,11,0):", $t3} $t3 == $t3;

    // label L9 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:356:5+1
    assume {:print "$at(170,13869,13870)"} true;
L9:

    // return $t3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:356:5+1
    assume {:print "$at(170,13869,13870)"} true;
    $ret0 := $t3;
    return;

    // label L10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:356:5+1
L10:

    // abort($t8) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\collection.move:356:5+1
    assume {:print "$at(170,13869,13870)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// struct token::MutationEvent at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:92:5+133
datatype $4_token_MutationEvent {
    $4_token_MutationEvent($mutated_field_name: $1_string_String, $old_value: $1_string_String, $new_value: $1_string_String)
}
function {:inline} $Update'$4_token_MutationEvent'_mutated_field_name(s: $4_token_MutationEvent, x: $1_string_String): $4_token_MutationEvent {
    $4_token_MutationEvent(x, s->$old_value, s->$new_value)
}
function {:inline} $Update'$4_token_MutationEvent'_old_value(s: $4_token_MutationEvent, x: $1_string_String): $4_token_MutationEvent {
    $4_token_MutationEvent(s->$mutated_field_name, x, s->$new_value)
}
function {:inline} $Update'$4_token_MutationEvent'_new_value(s: $4_token_MutationEvent, x: $1_string_String): $4_token_MutationEvent {
    $4_token_MutationEvent(s->$mutated_field_name, s->$old_value, x)
}
function $IsValid'$4_token_MutationEvent'(s: $4_token_MutationEvent): bool {
    $IsValid'$1_string_String'(s->$mutated_field_name)
      && $IsValid'$1_string_String'(s->$old_value)
      && $IsValid'$1_string_String'(s->$new_value)
}
function {:inline} $IsEqual'$4_token_MutationEvent'(s1: $4_token_MutationEvent, s2: $4_token_MutationEvent): bool {
    $IsEqual'$1_string_String'(s1->$mutated_field_name, s2->$mutated_field_name)
    && $IsEqual'$1_string_String'(s1->$old_value, s2->$old_value)
    && $IsEqual'$1_string_String'(s1->$new_value, s2->$new_value)}

// struct token::ConcurrentTokenIdentifiers at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:69:5+390
datatype $4_token_ConcurrentTokenIdentifiers {
    $4_token_ConcurrentTokenIdentifiers($index: $1_aggregator_v2_AggregatorSnapshot'u64', $name: $1_aggregator_v2_AggregatorSnapshot'$1_string_String')
}
function {:inline} $Update'$4_token_ConcurrentTokenIdentifiers'_index(s: $4_token_ConcurrentTokenIdentifiers, x: $1_aggregator_v2_AggregatorSnapshot'u64'): $4_token_ConcurrentTokenIdentifiers {
    $4_token_ConcurrentTokenIdentifiers(x, s->$name)
}
function {:inline} $Update'$4_token_ConcurrentTokenIdentifiers'_name(s: $4_token_ConcurrentTokenIdentifiers, x: $1_aggregator_v2_AggregatorSnapshot'$1_string_String'): $4_token_ConcurrentTokenIdentifiers {
    $4_token_ConcurrentTokenIdentifiers(s->$index, x)
}
function $IsValid'$4_token_ConcurrentTokenIdentifiers'(s: $4_token_ConcurrentTokenIdentifiers): bool {
    $IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''(s->$index)
      && $IsValid'$1_aggregator_v2_AggregatorSnapshot'$1_string_String''(s->$name)
}
function {:inline} $IsEqual'$4_token_ConcurrentTokenIdentifiers'(s1: $4_token_ConcurrentTokenIdentifiers, s2: $4_token_ConcurrentTokenIdentifiers): bool {
    $IsEqual'$1_aggregator_v2_AggregatorSnapshot'u64''(s1->$index, s2->$index)
    && $IsEqual'$1_aggregator_v2_AggregatorSnapshot'$1_string_String''(s1->$name, s2->$name)}
var $4_token_ConcurrentTokenIdentifiers_$memory: $Memory $4_token_ConcurrentTokenIdentifiers;

// struct token::Token at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:43:5+1193
datatype $4_token_Token {
    $4_token_Token($collection: $1_object_Object'$4_collection_Collection', $index: int, $description: $1_string_String, $name: $1_string_String, $uri: $1_string_String, $mutation_events: $1_event_EventHandle'$4_token_MutationEvent')
}
function {:inline} $Update'$4_token_Token'_collection(s: $4_token_Token, x: $1_object_Object'$4_collection_Collection'): $4_token_Token {
    $4_token_Token(x, s->$index, s->$description, s->$name, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_token_Token'_index(s: $4_token_Token, x: int): $4_token_Token {
    $4_token_Token(s->$collection, x, s->$description, s->$name, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_token_Token'_description(s: $4_token_Token, x: $1_string_String): $4_token_Token {
    $4_token_Token(s->$collection, s->$index, x, s->$name, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_token_Token'_name(s: $4_token_Token, x: $1_string_String): $4_token_Token {
    $4_token_Token(s->$collection, s->$index, s->$description, x, s->$uri, s->$mutation_events)
}
function {:inline} $Update'$4_token_Token'_uri(s: $4_token_Token, x: $1_string_String): $4_token_Token {
    $4_token_Token(s->$collection, s->$index, s->$description, s->$name, x, s->$mutation_events)
}
function {:inline} $Update'$4_token_Token'_mutation_events(s: $4_token_Token, x: $1_event_EventHandle'$4_token_MutationEvent'): $4_token_Token {
    $4_token_Token(s->$collection, s->$index, s->$description, s->$name, s->$uri, x)
}
function $IsValid'$4_token_Token'(s: $4_token_Token): bool {
    $IsValid'$1_object_Object'$4_collection_Collection''(s->$collection)
      && $IsValid'u64'(s->$index)
      && $IsValid'$1_string_String'(s->$description)
      && $IsValid'$1_string_String'(s->$name)
      && $IsValid'$1_string_String'(s->$uri)
      && $IsValid'$1_event_EventHandle'$4_token_MutationEvent''(s->$mutation_events)
}
function {:inline} $IsEqual'$4_token_Token'(s1: $4_token_Token, s2: $4_token_Token): bool {
    $IsEqual'$1_object_Object'$4_collection_Collection''(s1->$collection, s2->$collection)
    && $IsEqual'u64'(s1->$index, s2->$index)
    && $IsEqual'$1_string_String'(s1->$description, s2->$description)
    && $IsEqual'$1_string_String'(s1->$name, s2->$name)
    && $IsEqual'$1_string_String'(s1->$uri, s2->$uri)
    && $IsEqual'$1_event_EventHandle'$4_token_MutationEvent''(s1->$mutation_events, s2->$mutation_events)}
var $4_token_Token_$memory: $Memory $4_token_Token;

// fun token::create_named_token [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:237:5+570
procedure {:inline 1} $4_token_create_named_token(_$t0: $signer, _$t1: $1_string_String, _$t2: $1_string_String, _$t3: $1_string_String, _$t4: $1_option_Option'$4_royalty_Royalty', _$t5: $1_string_String) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t6: $1_aggregator_v2_AggregatorSnapshot'$1_string_String';
    var $t7: int;
    var $t8: $1_string_String;
    var $t9: $1_string_String;
    var $t10: int;
    var $t11: $1_string_String;
    var $t12: bool;
    var $t13: $1_object_Object'$4_collection_Collection';
    var $t14: $1_string_String;
    var $t15: bool;
    var $t16: $1_object_ConstructorRef;
    var $t17: $1_object_ConstructorRef;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: $1_string_String;
    var $t23: $1_string_String;
    var $t24: $1_string_String;
    var $t25: $1_option_Option'u64';
    var $t26: $1_aggregator_v2_AggregatorSnapshot'u64';
    var $t27: int;
    var $t28: $1_aggregator_v2_AggregatorSnapshot'$1_string_String';
    var $t29: $1_string_String;
    var $t30: $1_string_String;
    var $t31: $1_string_String;
    var $t32: $1_option_Option'$1_string_String';
    var $t33: $signer;
    var $t34: $1_option_Option'$4_royalty_Royalty';
    var $t35: Vec (int);
    var $t36: $4_token_Token;
    var $t37: $4_token_ConcurrentTokenIdentifiers;
    var $t38: $1_string_String;
    var $t39: int;
    var $t40: int;
    var $t41: Vec (int);
    var $t42: int;
    var $t43: int;
    var $t44: $1_object_ConstructorRef;
    var $t45: $1_option_Option'$1_string_String';
    var $t46: $1_option_Option'$1_string_String';
    var $t47: bool;
    var $t48: int;
    var $t49: int;
    var $t50: int;
    var $t51: $1_option_Option'$1_string_String';
    var $t52: $1_string_String;
    var $t53: bool;
    var $t54: int;
    var $t55: int;
    var $t56: int;
    var $t57: bool;
    var $t58: int;
    var $t59: int;
    var $t60: int;
    var $t61: int;
    var $t62: bool;
    var $t63: int;
    var $t64: int;
    var $t65: int;
    var $t66: int;
    var $t67: bool;
    var $t68: int;
    var $t69: int;
    var $t70: int;
    var $t71: int;
    var $t72: bool;
    var $t73: int;
    var $t74: int;
    var $t75: $signer;
    var $t76: int;
    var $t77: $1_object_Object'$4_collection_Collection';
    var $t78: bool;
    var $t79: bool;
    var $t80: int;
    var $t81: $1_option_Option'$1_aggregator_v2_AggregatorSnapshot'u64'';
    var $t82: int;
    var $t83: $1_aggregator_v2_AggregatorSnapshot'u64';
    var $t84: bool;
    var $t85: $1_aggregator_v2_AggregatorSnapshot'u64';
    var $t86: $1_option_Option'$1_string_String';
    var $t87: bool;
    var $t88: $Mutation ($1_option_Option'$1_string_String');
    var $t89: $1_string_String;
    var $t90: $1_option_Option'$1_string_String';
    var $t91: bool;
    var $t92: bool;
    var $t93: bool;
    var $t94: int;
    var $t95: Vec (int);
    var $t96: $4_token_ConcurrentTokenIdentifiers;
    var $t97: int;
    var $t98: $Mutation ($1_option_Option'u64');
    var $t99: $1_option_Option'u64';
    var $t100: int;
    var $t101: int;
    var $t102: $1_option_Option'$1_string_String';
    var $t103: bool;
    var $t104: $Mutation ($1_string_String);
    var $t105: $1_string_String;
    var $t106: $Mutation ($1_string_String);
    var $t107: $Mutation ($1_option_Option'$1_string_String');
    var $t108: $1_string_String;
    var $t109: $1_option_Option'$1_string_String';
    var $t110: bool;
    var $t111: $1_string_String;
    var $t112: $1_object_ObjectCore;
    var $t113: $1_guid_GUID;
    var $t114: $1_event_EventHandle'$4_token_MutationEvent';
    var $t115: $4_token_Token;
    var $t116: $1_option_Option'$4_royalty_Royalty';
    var $t117: bool;
    var $t118: $Mutation ($1_option_Option'$4_royalty_Royalty');
    var $t119: $4_royalty_Royalty;
    var $t120: $1_option_Option'$4_royalty_Royalty';
    var $t121: bool;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: $1_string_String;
    var $t3: $1_string_String;
    var $t4: $1_option_Option'$4_royalty_Royalty';
    var $t5: $1_string_String;
    var $temp_0'$1_aggregator_v2_AggregatorSnapshot'$1_string_String'': $1_aggregator_v2_AggregatorSnapshot'$1_string_String';
    var $temp_0'$1_aggregator_v2_AggregatorSnapshot'u64'': $1_aggregator_v2_AggregatorSnapshot'u64';
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$4_collection_Collection'': $1_object_Object'$4_collection_Collection';
    var $temp_0'$1_option_Option'$1_string_String'': $1_option_Option'$1_string_String';
    var $temp_0'$1_option_Option'$4_royalty_Royalty'': $1_option_Option'$4_royalty_Royalty';
    var $temp_0'$1_option_Option'u64'': $1_option_Option'u64';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$4_token_ConcurrentTokenIdentifiers': $4_token_ConcurrentTokenIdentifiers;
    var $temp_0'$4_token_Token': $4_token_Token;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;

    // bytecode translation starts here
    // trace_local[creator]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:237:5+1
    assume {:print "$at(173,10770,10771)"} true;
    assume {:print "$track_local(70,6,0):", $t0} $t0 == $t0;

    // trace_local[collection_name]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:237:5+1
    assume {:print "$track_local(70,6,1):", $t1} $t1 == $t1;

    // trace_local[description]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:237:5+1
    assume {:print "$track_local(70,6,2):", $t2} $t2 == $t2;

    // trace_local[name]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:237:5+1
    assume {:print "$track_local(70,6,3):", $t3} $t3 == $t3;

    // trace_local[royalty]($t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:237:5+1
    assume {:print "$track_local(70,6,4):", $t4} $t4 == $t4;

    // trace_local[uri]($t5) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:237:5+1
    assume {:print "$track_local(70,6,5):", $t5} $t5 == $t5;

    // $t39 := signer::address_of($t0) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:245:31+27
    assume {:print "$at(173,11020,11047)"} true;
    call $t39 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(173,11020,11047)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // trace_local[creator_address]($t39) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:245:13+15
    assume {:print "$track_local(70,6,18):", $t39} $t39 == $t39;

    // $t41 := token::create_token_seed($t1, $t3) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:246:20+42
    assume {:print "$at(173,11068,11110)"} true;
    call $t41 := $4_token_create_token_seed($t1, $t3);
    if ($abort_flag) {
        assume {:print "$at(173,11068,11110)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // trace_local[seed]($t41) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:246:13+4
    assume {:print "$track_local(70,6,35):", $t41} $t41 == $t41;

    // assume Identical($t42, signer::$address_of($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:102:9+50
    assume {:print "$at(136,3712,3762)"} true;
    assume ($t42 == $1_signer_$address_of($t0));

    // assume Identical($t43, object::spec_create_object_address($t42, $t41)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:103:9+65
    assume {:print "$at(136,3771,3836)"} true;
    assume ($t43 == $1_object_spec_create_object_address($t42, $t41));

    // $t44 := object::create_named_object($t0, $t41) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:248:31+42
    assume {:print "$at(173,11143,11185)"} true;
    call $t44 := $1_object_create_named_object($t0, $t41);
    if ($abort_flag) {
        assume {:print "$at(173,11143,11185)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // trace_local[constructor_ref]($t44) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:248:13+15
    assume {:print "$track_local(70,6,16):", $t44} $t44 == $t44;

    // $t45 := opaque begin: option::none<string::String>() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:249:94+14
    assume {:print "$at(173,11280,11294)"} true;

    // assume And(WellFormed($t45), Le(Len<string::String>(select option::Option.vec($t45)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:249:94+14
    assume ($IsValid'$1_option_Option'$1_string_String''($t45) && (LenVec($t45->$vec) <= 1));

    // assume Eq<option::Option<string::String>>($t45, option::spec_none<string::String>()) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:249:94+14
    assume $IsEqual'$1_option_Option'$1_string_String''($t45, $1_option_spec_none'$1_string_String'());

    // $t45 := opaque end: option::none<string::String>() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:249:94+14

    // trace_local[uri#668]($t5) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:108:9+3
    assume {:print "$at(173,4715,4718)"} true;
    assume {:print "$track_local(70,6,38):", $t5} $t5 == $t5;

    // $t34 := $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:107:9+7
    assume {:print "$at(173,4681,4688)"} true;
    $t34 := $t4;

    // trace_local[royalty#667]($t34) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:107:9+7
    assume {:print "$track_local(70,6,34):", $t34} $t34 == $t34;

    // $t32 := $t45 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:106:9+22
    assume {:print "$at(173,4633,4655)"} true;
    $t32 := $t45;

    // trace_local[name_with_index_suffix#666]($t32) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:106:9+22
    assume {:print "$track_local(70,6,32):", $t32} $t32 == $t32;

    // trace_local[name_prefix#665]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:103:9+11
    assume {:print "$at(173,4441,4452)"} true;
    assume {:print "$track_local(70,6,31):", $t3} $t3 == $t3;

    // trace_local[description#664]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:102:9+11
    assume {:print "$at(173,4412,4423)"} true;
    assume {:print "$track_local(70,6,24):", $t2} $t2 == $t2;

    // trace_local[collection_name#663]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:101:9+15
    assume {:print "$at(173,4379,4394)"} true;
    assume {:print "$track_local(70,6,14):", $t1} $t1 == $t1;

    // trace_local[creator_address#662]($t39) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:100:9+15
    assume {:print "$at(173,4345,4360)"} true;
    assume {:print "$track_local(70,6,19):", $t39} $t39 == $t39;

    // trace_local[constructor_ref#661]($t44) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:99:9+15
    assume {:print "$at(173,4303,4318)"} true;
    assume {:print "$track_local(70,6,17):", $t44} $t44 == $t44;

    // $t46 := copy($t32) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:110:29+23
    assume {:print "$at(173,4764,4787)"} true;
    $t46 := $t32;

    // $t47 := opaque begin: option::is_some<string::String>($t46) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:110:13+40

    // assume WellFormed($t47) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:110:13+40
    assume $IsValid'bool'($t47);

    // assume Eq<bool>($t47, option::spec_is_some<string::String>($t46)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:110:13+40
    assume $IsEqual'bool'($t47, $1_option_spec_is_some'$1_string_String'($t46));

    // $t47 := opaque end: option::is_some<string::String>($t46) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:110:13+40

    // if ($t47) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:110:9+499
    if ($t47) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:36+12
    assume {:print "$at(173,4951,4963)"} true;
L1:

    // $t48 := string::length($t3) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:21+28
    assume {:print "$at(173,4936,4964)"} true;
    call $t48 := $1_string_length($t3);
    if ($abort_flag) {
        assume {:print "$at(173,4936,4964)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // $t49 := 20 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:52+2
    $t49 := 20;
    assume $IsValid'u64'($t49);

    // $t50 := +($t48, $t49) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:50+1
    call $t50 := $AddU64($t48, $t49);
    if ($abort_flag) {
        assume {:print "$at(173,4965,4966)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // $t51 := copy($t32) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:87+23
    $t51 := $t32;

    // $t52 := opaque begin: option::borrow<string::String>($t51) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:72+39

    // assume Identical($t53, option::spec_is_none<string::String>($t51)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:72+39
    assume ($t53 == $1_option_spec_is_none'$1_string_String'($t51));

    // if ($t53) goto L35 else goto L34 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:72+39
    if ($t53) { goto L35; } else { goto L34; }

    // label L35 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:72+39
L35:

    // assume And(option::spec_is_none<string::String>($t51), Eq(262145, $t40)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:72+39
    assume {:print "$at(173,4987,5026)"} true;
    assume ($1_option_spec_is_none'$1_string_String'($t51) && $IsEqual'num'(262145, $t40));

    // trace_abort($t40) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:72+39
    assume {:print "$at(173,4987,5026)"} true;
    assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;

    // goto L33 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:72+39
    goto L33;

    // label L34 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:72+39
L34:

    // assume WellFormed($t52) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:72+39
    assume {:print "$at(173,4987,5026)"} true;
    assume $IsValid'$1_string_String'($t52);

    // assume Eq<string::String>($t52, option::spec_borrow<string::String>($t51)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:72+39
    assume $IsEqual'$1_string_String'($t52, $1_option_spec_borrow'$1_string_String'($t51));

    // $t52 := opaque end: option::borrow<string::String>($t51) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:72+39

    // $t54 := string::length($t52) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:57+55
    call $t54 := $1_string_length($t52);
    if ($abort_flag) {
        assume {:print "$at(173,4972,5027)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // $t55 := +($t50, $t54) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:55+1
    call $t55 := $AddU64($t50, $t54);
    if ($abort_flag) {
        assume {:print "$at(173,4970,4971)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // $t56 := 128 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:116+21
    $t56 := 128;
    assume $IsValid'u64'($t56);

    // $t57 := <=($t55, $t56) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:113+2
    call $t57 := $Le($t55, $t56);

    // if ($t57) goto L3 else goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:13+168
    if ($t57) { goto L3; } else { goto L2; }

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:13+168
L3:

    // goto L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:13+168
    assume {:print "$at(173,4928,5096)"} true;
    goto L4;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:13+168
L2:

    // $t58 := 4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:159+20
    assume {:print "$at(173,5074,5094)"} true;
    $t58 := 4;
    assume $IsValid'u64'($t58);

    // $t59 := error::out_of_range($t58) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:139+41
    call $t59 := $1_error_out_of_range($t58);
    if ($abort_flag) {
        assume {:print "$at(173,5054,5095)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // trace_abort($t59) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:13+168
    assume {:print "$at(173,4928,5096)"} true;
    assume {:print "$track_abort(70,6):", $t59} $t59 == $t59;

    // $t40 := move($t59) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:13+168
    $t40 := $t59;

    // goto L33 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:13+168
    goto L33;

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:181+1
L4:

    // goto L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:112:181+1
    assume {:print "$at(173,5096,5097)"} true;
    goto L5;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:114:36+12
    assume {:print "$at(173,5150,5162)"} true;
L0:

    // $t60 := string::length($t3) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:114:21+28
    assume {:print "$at(173,5135,5163)"} true;
    call $t60 := $1_string_length($t3);
    if ($abort_flag) {
        assume {:print "$at(173,5135,5163)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // $t61 := 128 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:114:53+21
    $t61 := 128;
    assume $IsValid'u64'($t61);

    // $t62 := <=($t60, $t61) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:114:50+2
    call $t62 := $Le($t60, $t61);

    // if ($t62) goto L7 else goto L6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:114:13+105
    if ($t62) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:114:13+105
L7:

    // goto L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:114:13+105
    assume {:print "$at(173,5127,5232)"} true;
    goto L5;

    // label L6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:114:13+105
L6:

    // $t63 := 4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:114:96+20
    assume {:print "$at(173,5210,5230)"} true;
    $t63 := 4;
    assume $IsValid'u64'($t63);

    // $t64 := error::out_of_range($t63) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:114:76+41
    call $t64 := $1_error_out_of_range($t63);
    if ($abort_flag) {
        assume {:print "$at(173,5190,5231)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // trace_abort($t64) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:114:13+105
    assume {:print "$at(173,5127,5232)"} true;
    assume {:print "$track_abort(70,6):", $t64} $t64 == $t64;

    // $t40 := move($t64) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:114:13+105
    $t40 := $t64;

    // goto L33 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:114:13+105
    goto L33;

    // label L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:116:32+12
    assume {:print "$at(173,5276,5288)"} true;
L5:

    // $t65 := string::length($t2) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:116:17+28
    assume {:print "$at(173,5261,5289)"} true;
    call $t65 := $1_string_length($t2);
    if ($abort_flag) {
        assume {:print "$at(173,5261,5289)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // $t66 := 2048 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:116:49+22
    $t66 := 2048;
    assume $IsValid'u64'($t66);

    // $t67 := <=($t65, $t66) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:116:46+2
    call $t67 := $Le($t65, $t66);

    // if ($t67) goto L9 else goto L8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:116:9+107
    if ($t67) { goto L9; } else { goto L8; }

    // label L9 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:116:9+107
L9:

    // goto L10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:116:9+107
    assume {:print "$at(173,5253,5360)"} true;
    goto L10;

    // label L8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:116:9+107
L8:

    // $t68 := 6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:116:93+21
    assume {:print "$at(173,5337,5358)"} true;
    $t68 := 6;
    assume $IsValid'u64'($t68);

    // $t69 := error::out_of_range($t68) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:116:73+42
    call $t69 := $1_error_out_of_range($t68);
    if ($abort_flag) {
        assume {:print "$at(173,5317,5359)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // trace_abort($t69) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:116:9+107
    assume {:print "$at(173,5253,5360)"} true;
    assume {:print "$track_abort(70,6):", $t69} $t69 == $t69;

    // $t40 := move($t69) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:116:9+107
    $t40 := $t69;

    // goto L33 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:116:9+107
    goto L33;

    // label L10 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:117:32+4
    assume {:print "$at(173,5393,5397)"} true;
L10:

    // $t70 := string::length($t5) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:117:17+20
    assume {:print "$at(173,5378,5398)"} true;
    call $t70 := $1_string_length($t5);
    if ($abort_flag) {
        assume {:print "$at(173,5378,5398)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // $t71 := 512 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:117:41+14
    $t71 := 512;
    assume $IsValid'u64'($t71);

    // $t72 := <=($t70, $t71) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:117:38+2
    call $t72 := $Le($t70, $t71);

    // if ($t72) goto L12 else goto L11 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:117:9+83
    if ($t72) { goto L12; } else { goto L11; }

    // label L12 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:117:9+83
L12:

    // goto L13 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:117:9+83
    assume {:print "$at(173,5370,5453)"} true;
    goto L13;

    // label L11 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:117:9+83
L11:

    // $t73 := 5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:117:77+13
    assume {:print "$at(173,5438,5451)"} true;
    $t73 := 5;
    assume $IsValid'u64'($t73);

    // $t74 := error::out_of_range($t73) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:117:57+34
    call $t74 := $1_error_out_of_range($t73);
    if ($abort_flag) {
        assume {:print "$at(173,5418,5452)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // trace_abort($t74) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:117:9+83
    assume {:print "$at(173,5370,5453)"} true;
    assume {:print "$track_abort(70,6):", $t74} $t74 == $t74;

    // $t40 := move($t74) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:117:9+83
    $t40 := $t74;

    // goto L33 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:117:9+83
    goto L33;

    // label L13 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:119:53+15
    assume {:print "$at(173,5508,5523)"} true;
L13:

    // $t75 := object::generate_signer($t44) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:119:29+40
    assume {:print "$at(173,5484,5524)"} true;
    call $t75 := $1_object_generate_signer($t44);
    if ($abort_flag) {
        assume {:print "$at(173,5484,5524)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // trace_local[object_signer#669]($t75) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:119:13+13
    assume {:print "$track_local(70,6,33):", $t75} $t75 == $t75;

    // $t76 := collection::create_collection_address($t39, $t1) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:121:31+73
    assume {:print "$at(173,5557,5630)"} true;
    call $t76 := $4_collection_create_collection_address($t39, $t1);
    if ($abort_flag) {
        assume {:print "$at(173,5557,5630)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // $t77 := object::address_to_object<collection::Collection>($t76) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:122:26+54
    assume {:print "$at(173,5657,5711)"} true;
    call $t77 := $1_object_address_to_object'$4_collection_Collection'($t76);
    if ($abort_flag) {
        assume {:print "$at(173,5657,5711)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // trace_local[collection#671]($t77) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:122:13+10
    assume {:print "$track_local(70,6,13):", $t77} $t77 == $t77;

    // $t78 := features::aggregator_v2_api_enabled() on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:126:38+37
    assume {:print "$at(173,5954,5991)"} true;
    call $t78 := $1_features_aggregator_v2_api_enabled();
    if ($abort_flag) {
        assume {:print "$at(173,5954,5991)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // trace_local[aggregator_api_enabled#672]($t78) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:126:13+22
    assume {:print "$track_local(70,6,12):", $t78} $t78 == $t78;

    // $t79 := features::concurrent_assets_enabled() on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:128:41+37
    assume {:print "$at(173,6133,6170)"} true;
    call $t79 := $1_features_concurrent_assets_enabled();
    if ($abort_flag) {
        assume {:print "$at(173,6133,6170)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // trace_local[concurrent_assets_enabled#673]($t79) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:128:13+25
    assume {:print "$track_local(70,6,15):", $t79} $t79 == $t79;

    // if ($t78) goto L15 else goto L14 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:130:51+2373
    assume {:print "$at(173,6223,8596)"} true;
    if ($t78) { goto L15; } else { goto L14; }

    // label L15 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:132:57+11
    assume {:print "$at(173,6363,6374)"} true;
L15:

    // $t80 := signer::address_of($t75) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:132:70+34
    assume {:print "$at(173,6376,6410)"} true;
    call $t80 := $1_signer_address_of($t75);
    if ($abort_flag) {
        assume {:print "$at(173,6376,6410)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // $t81 := collection::increment_concurrent_supply($t77, $t80) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:132:17+88
    call $t81 := $4_collection_increment_concurrent_supply($t77, $t80);
    if ($abort_flag) {
        assume {:print "$at(173,6323,6411)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // $t82 := 0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:133:53+1
    assume {:print "$at(173,6465,6466)"} true;
    $t82 := 0;
    assume $IsValid'u64'($t82);

    // $t83 := opaque begin: aggregator_v2::create_snapshot<u64>($t82) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:133:17+38

    // $t84 := havoc[val]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:133:17+38
    havoc $t84;

    // if ($t84) goto L37 else goto L36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:133:17+38
    if ($t84) { goto L37; } else { goto L36; }

    // label L37 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:133:17+38
L37:

    // trace_abort($t40) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:133:17+38
    assume {:print "$at(173,6429,6467)"} true;
    assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;

    // goto L33 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:133:17+38
    goto L33;

    // label L36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:133:17+38
L36:

    // assume WellFormed($t83) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:133:17+38
    assume {:print "$at(173,6429,6467)"} true;
    assume $IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''($t83);

    // $t83 := opaque end: aggregator_v2::create_snapshot<u64>($t82) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:133:17+38

    // $t85 := opaque begin: option::destroy_with_default<aggregator_v2::AggregatorSnapshot<u64>>($t81, $t83) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:131:25+204
    assume {:print "$at(173,6277,6481)"} true;

    // assume WellFormed($t85) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:131:25+204
    assume $IsValid'$1_aggregator_v2_AggregatorSnapshot'u64''($t85);

    // assume Eq<aggregator_v2::AggregatorSnapshot<u64>>($t85, if option::spec_is_some<aggregator_v2::AggregatorSnapshot<u64>>($t81) {
    //   option::spec_borrow<aggregator_v2::AggregatorSnapshot<u64>>($t81)
    // } else {
    //   $t83
    // }) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:131:25+204
    assume $IsEqual'$1_aggregator_v2_AggregatorSnapshot'u64''($t85, (if ($1_option_spec_is_some'$1_aggregator_v2_AggregatorSnapshot'u64''($t81)) then ($1_option_spec_borrow'$1_aggregator_v2_AggregatorSnapshot'u64''($t81)) else ($t83)));

    // $t85 := opaque end: option::destroy_with_default<aggregator_v2::AggregatorSnapshot<u64>>($t81, $t83) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:131:25+204

    // trace_local[index#674]($t85) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:131:17+5
    assume {:print "$track_local(70,6,26):", $t85} $t85 == $t85;

    // $t86 := copy($t32) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:137:44+23
    assume {:print "$at(173,6601,6624)"} true;
    $t86 := $t32;

    // $t87 := opaque begin: option::is_some<string::String>($t86) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:137:28+40

    // assume WellFormed($t87) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:137:28+40
    assume $IsValid'bool'($t87);

    // assume Eq<bool>($t87, option::spec_is_some<string::String>($t86)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:137:28+40
    assume $IsEqual'bool'($t87, $1_option_spec_is_some'$1_string_String'($t86));

    // $t87 := opaque end: option::is_some<string::String>($t86) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:137:28+40

    // if ($t87) goto L17 else goto L16 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:137:24+254
    if ($t87) { goto L17; } else { goto L16; }

    // label L17 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:46+11
    assume {:print "$at(173,6674,6685)"} true;
L17:

    // $t88 := borrow_local($t32) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:83+27
    assume {:print "$at(173,6711,6738)"} true;
    $t88 := $Mutation($Local(32), EmptyVec(), $t32);

    // $t89 := opaque begin: option::extract<string::String>($t88) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:67+44

    // $t90 := read_ref($t88) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:67+44
    $t90 := $Dereference($t88);

    // assume Identical($t91, option::spec_is_none<string::String>($t88)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:67+44
    assume ($t91 == $1_option_spec_is_none'$1_string_String'($Dereference($t88)));

    // if ($t91) goto L39 else goto L48 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:67+44
    if ($t91) { goto L39; } else { goto L48; }

    // label L39 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:67+44
L39:

    // assume And(option::spec_is_none<string::String>($t88), Eq(262145, $t40)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:67+44
    assume {:print "$at(173,6695,6739)"} true;
    assume ($1_option_spec_is_none'$1_string_String'($Dereference($t88)) && $IsEqual'num'(262145, $t40));

    // trace_abort($t40) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:67+44
    assume {:print "$at(173,6695,6739)"} true;
    assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;

    // goto L33 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:67+44
    goto L33;

    // label L38 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:67+44
L38:

    // $t88 := havoc[mut]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:67+44
    assume {:print "$at(173,6695,6739)"} true;
    havoc $temp_0'$1_option_Option'$1_string_String'';
    $t88 := $UpdateMutation($t88, $temp_0'$1_option_Option'$1_string_String'');

    // assume And(WellFormed($t88), Le(Len<string::String>(select option::Option.vec($t88)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:67+44
    assume ($IsValid'$1_option_Option'$1_string_String''($Dereference($t88)) && (LenVec($Dereference($t88)->$vec) <= 1));

    // assume WellFormed($t89) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:67+44
    assume $IsValid'$1_string_String'($t89);

    // assume Eq<string::String>($t89, option::spec_borrow<string::String>($t90)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:67+44
    assume $IsEqual'$1_string_String'($t89, $1_option_spec_borrow'$1_string_String'($t90));

    // assume option::spec_is_none<string::String>($t88) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:67+44
    assume $1_option_spec_is_none'$1_string_String'($Dereference($t88));

    // $t89 := opaque end: option::extract<string::String>($t88) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:67+44

    // pack_ref_deep($t88) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:67+44

    // write_back[LocalRoot($t32)@]($t88) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:67+44
    $t32 := $Dereference($t88);

    // trace_local[name_with_index_suffix#666]($t32) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:67+44
    assume {:print "$track_local(70,6,32):", $t32} $t32 == $t32;

    // $t6 := opaque begin: aggregator_v2::string_concat<u64>($t3, $t85, $t89) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:17+95

    // $t92 := havoc[val]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:17+95
    havoc $t92;

    // if ($t92) goto L41 else goto L40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:17+95
    if ($t92) { goto L41; } else { goto L40; }

    // label L41 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:17+95
L41:

    // trace_abort($t40) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:17+95
    assume {:print "$at(173,6645,6740)"} true;
    assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;

    // goto L33 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:17+95
    goto L33;

    // label L40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:17+95
L40:

    // assume WellFormed($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:17+95
    assume {:print "$at(173,6645,6740)"} true;
    assume $IsValid'$1_aggregator_v2_AggregatorSnapshot'$1_string_String''($t6);

    // $t6 := opaque end: aggregator_v2::string_concat<u64>($t3, $t85, $t89) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:138:17+95

    // goto L18 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:137:24+254
    assume {:print "$at(173,6581,6835)"} true;
    goto L18;

    // label L16 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:140:48+11
    assume {:print "$at(173,6809,6820)"} true;
L16:

    // $t6 := opaque begin: aggregator_v2::create_snapshot<string::String>($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:140:17+43
    assume {:print "$at(173,6778,6821)"} true;

    // $t93 := havoc[val]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:140:17+43
    havoc $t93;

    // if ($t93) goto L43 else goto L42 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:140:17+43
    if ($t93) { goto L43; } else { goto L42; }

    // label L43 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:140:17+43
L43:

    // trace_abort($t40) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:140:17+43
    assume {:print "$at(173,6778,6821)"} true;
    assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;

    // goto L33 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:140:17+43
    goto L33;

    // label L42 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:140:17+43
L42:

    // assume WellFormed($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:140:17+43
    assume {:print "$at(173,6778,6821)"} true;
    assume $IsValid'$1_aggregator_v2_AggregatorSnapshot'$1_string_String''($t6);

    // $t6 := opaque end: aggregator_v2::create_snapshot<string::String>($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:140:17+43

    // label L18 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:137:24+254
    assume {:print "$at(173,6581,6835)"} true;
L18:

    // trace_local[name#675]($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:137:17+4
    assume {:print "$at(173,6574,6578)"} true;
    assume {:print "$track_local(70,6,28):", $t6} $t6 == $t6;

    // if ($t79) goto L20 else goto L19 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:146:36+138
    assume {:print "$at(173,7131,7269)"} true;
    if ($t79) { goto L20; } else { goto L19; }

    // label L20 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:147:17+1
    assume {:print "$at(173,7180,7181)"} true;
L20:

    // $t94 := 0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:147:17+1
    assume {:print "$at(173,7180,7181)"} true;
    $t94 := 0;
    assume $IsValid'u64'($t94);

    // $t7 := $t94 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:146:36+138
    assume {:print "$at(173,7131,7269)"} true;
    $t7 := $t94;

    // goto L21 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:146:36+138
    goto L21;

    // label L19 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:149:46+6
    assume {:print "$at(173,7248,7254)"} true;
L19:

    // $t7 := aggregator_v2::read_snapshot<u64>($t85) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:149:17+36
    assume {:print "$at(173,7219,7255)"} true;
    call $t7 := $1_aggregator_v2_read_snapshot'u64'($t85);
    if ($abort_flag) {
        assume {:print "$at(173,7219,7255)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // label L21 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:146:36+138
    assume {:print "$at(173,7131,7269)"} true;
L21:

    // trace_local[deprecated_index#676]($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:146:17+16
    assume {:print "$at(173,7112,7128)"} true;
    assume {:print "$track_local(70,6,20):", $t7} $t7 == $t7;

    // if ($t79) goto L23 else goto L22 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:151:35+153
    assume {:print "$at(173,7305,7458)"} true;
    if ($t79) { goto L23; } else { goto L22; }

    // label L23 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:152:30+3
    assume {:print "$at(173,7367,7370)"} true;
L23:

    // $t95 := [] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:152:30+3
    assume {:print "$at(173,7367,7370)"} true;
    $t95 := $EmptyVec'u8'();
    assume $IsValid'vec'u8''($t95);

    // $t8 := string::utf8($t95) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:152:17+17
    call $t8 := $1_string_utf8($t95);
    if ($abort_flag) {
        assume {:print "$at(173,7354,7371)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // goto L24 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:151:35+153
    assume {:print "$at(173,7305,7458)"} true;
    goto L24;

    // label L22 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:154:46+5
    assume {:print "$at(173,7438,7443)"} true;
L22:

    // $t8 := aggregator_v2::read_snapshot<string::String>($t6) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:154:17+35
    assume {:print "$at(173,7409,7444)"} true;
    call $t8 := $1_aggregator_v2_read_snapshot'$1_string_String'($t6);
    if ($abort_flag) {
        assume {:print "$at(173,7409,7444)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // label L24 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:151:35+153
    assume {:print "$at(173,7305,7458)"} true;
L24:

    // trace_local[deprecated_name#677]($t8) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:151:17+15
    assume {:print "$at(173,7287,7302)"} true;
    assume {:print "$track_local(70,6,22):", $t8} $t8 == $t8;

    // $t96 := pack token::ConcurrentTokenIdentifiers($t85, $t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:158:36+87
    assume {:print "$at(173,7576,7663)"} true;
    $t96 := $4_token_ConcurrentTokenIdentifiers($t85, $t6);

    // trace_local[token_concurrent#678]($t96) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:158:17+16
    assume {:print "$track_local(70,6,37):", $t96} $t96 == $t96;

    // move_to<token::ConcurrentTokenIdentifiers>($t96, $t75) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:162:13+7
    assume {:print "$at(173,7677,7684)"} true;
    if ($ResourceExists($4_token_ConcurrentTokenIdentifiers_$memory, $t75->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4_token_ConcurrentTokenIdentifiers_$memory := $ResourceUpdate($4_token_ConcurrentTokenIdentifiers_$memory, $t75->$addr, $t96);
    }
    if ($abort_flag) {
        assume {:print "$at(173,7677,7684)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // $t11 := $t8 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:130:51+2373
    assume {:print "$at(173,6223,8596)"} true;
    $t11 := $t8;

    // $t10 := $t7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:130:51+2373
    $t10 := $t7;

    // goto L25 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:130:51+2373
    goto L25;

    // label L14 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:168:51+11
    assume {:print "$at(173,8021,8032)"} true;
L14:

    // $t97 := signer::address_of($t75) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:168:64+34
    assume {:print "$at(173,8034,8068)"} true;
    call $t97 := $1_signer_address_of($t75);
    if ($abort_flag) {
        assume {:print "$at(173,8034,8068)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // $t25 := collection::increment_supply($t77, $t97) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:168:22+77
    call $t25 := $4_collection_increment_supply($t77, $t97);
    if ($abort_flag) {
        assume {:print "$at(173,7992,8069)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // trace_local[id#679]($t25) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:168:17+2
    assume {:print "$track_local(70,6,25):", $t25} $t25 == $t25;

    // $t98 := borrow_local($t25) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:169:50+7
    assume {:print "$at(173,8120,8127)"} true;
    $t98 := $Mutation($Local(25), EmptyVec(), $t25);

    // $t99 := read_ref($t98) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:169:49+12
    $t99 := $Dereference($t98);

    // pack_ref_deep($t98) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:169:49+12

    // trace_local[id#679]($t25) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:169:49+12
    assume {:print "$track_local(70,6,25):", $t25} $t25 == $t25;

    // $t100 := 0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:169:59+1
    $t100 := 0;
    assume $IsValid'u64'($t100);

    // $t101 := opaque begin: option::get_with_default<u64>($t99, $t100) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:169:25+36

    // assume WellFormed($t101) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:169:25+36
    assume $IsValid'u64'($t101);

    // assume Eq<u64>($t101, if option::spec_is_some<u64>($t99) {
    //   option::spec_borrow<u64>($t99)
    // } else {
    //   $t100
    // }) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:169:25+36
    assume $IsEqual'u64'($t101, (if ($1_option_spec_is_some'u64'($t99)) then ($1_option_spec_borrow'u64'($t99)) else ($t100)));

    // $t101 := opaque end: option::get_with_default<u64>($t99, $t100) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:169:25+36

    // trace_local[index#680]($t101) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:169:17+5
    assume {:print "$track_local(70,6,27):", $t101} $t101 == $t101;

    // $t102 := copy($t32) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:172:44+23
    assume {:print "$at(173,8251,8274)"} true;
    $t102 := $t32;

    // $t103 := opaque begin: option::is_some<string::String>($t102) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:172:28+40

    // assume WellFormed($t103) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:172:28+40
    assume $IsValid'bool'($t103);

    // assume Eq<bool>($t103, option::spec_is_some<string::String>($t102)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:172:28+40
    assume $IsEqual'bool'($t103, $1_option_spec_is_some'$1_string_String'($t102));

    // $t103 := opaque end: option::is_some<string::String>($t102) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:172:28+40

    // if ($t103) goto L27 else goto L26 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:172:24+327
    if ($t103) { goto L27; } else { goto L26; }

    // label L27 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:173:28+11
    assume {:print "$at(173,8306,8317)"} true;
L27:

    // $t29 := $t3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:173:21+4
    assume {:print "$at(173,8299,8303)"} true;
    $t29 := $t3;

    // trace_local[name#681]($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:173:21+4
    assume {:print "$track_local(70,6,29):", $t29} $t29 == $t29;

    // $t104 := borrow_local($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:174:32+9
    assume {:print "$at(173,8350,8359)"} true;
    $t104 := $Mutation($Local(29), EmptyVec(), $t29);

    // $t105 := string_utils::to_string<u64>($t101) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:174:43+22
    call $t105 := $1_string_utils_to_string'u64'($t101);
    if ($abort_flag) {
        assume {:print "$at(173,8361,8383)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // string::append($t104, $t105) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:174:17+49
    call $t104 := $1_string_append($t104, $t105);
    if ($abort_flag) {
        assume {:print "$at(173,8335,8384)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // write_back[LocalRoot($t29)@]($t104) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:174:17+49
    $t29 := $Dereference($t104);

    // trace_local[name#681]($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:174:17+49
    assume {:print "$track_local(70,6,29):", $t29} $t29 == $t29;

    // $t106 := borrow_local($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:32+9
    assume {:print "$at(173,8417,8426)"} true;
    $t106 := $Mutation($Local(29), EmptyVec(), $t29);

    // $t107 := borrow_local($t32) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:59+27
    $t107 := $Mutation($Local(32), EmptyVec(), $t32);

    // $t108 := opaque begin: option::extract<string::String>($t107) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:43+44

    // $t109 := read_ref($t107) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:43+44
    $t109 := $Dereference($t107);

    // assume Identical($t110, option::spec_is_none<string::String>($t107)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:43+44
    assume ($t110 == $1_option_spec_is_none'$1_string_String'($Dereference($t107)));

    // if ($t110) goto L49 else goto L50 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:43+44
    if ($t110) { goto L49; } else { goto L50; }

    // label L45 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:43+44
L45:

    // assume And(option::spec_is_none<string::String>($t107), Eq(262145, $t40)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:43+44
    assume {:print "$at(173,8428,8472)"} true;
    assume ($1_option_spec_is_none'$1_string_String'($Dereference($t107)) && $IsEqual'num'(262145, $t40));

    // trace_abort($t40) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:43+44
    assume {:print "$at(173,8428,8472)"} true;
    assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;

    // goto L33 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:43+44
    goto L33;

    // label L44 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:43+44
L44:

    // $t107 := havoc[mut]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:43+44
    assume {:print "$at(173,8428,8472)"} true;
    havoc $temp_0'$1_option_Option'$1_string_String'';
    $t107 := $UpdateMutation($t107, $temp_0'$1_option_Option'$1_string_String'');

    // assume And(WellFormed($t107), Le(Len<string::String>(select option::Option.vec($t107)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:43+44
    assume ($IsValid'$1_option_Option'$1_string_String''($Dereference($t107)) && (LenVec($Dereference($t107)->$vec) <= 1));

    // assume WellFormed($t108) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:43+44
    assume $IsValid'$1_string_String'($t108);

    // assume Eq<string::String>($t108, option::spec_borrow<string::String>($t109)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:43+44
    assume $IsEqual'$1_string_String'($t108, $1_option_spec_borrow'$1_string_String'($t109));

    // assume option::spec_is_none<string::String>($t107) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:43+44
    assume $1_option_spec_is_none'$1_string_String'($Dereference($t107));

    // $t108 := opaque end: option::extract<string::String>($t107) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:43+44

    // pack_ref_deep($t107) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:43+44

    // write_back[LocalRoot($t32)@]($t107) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:43+44
    $t32 := $Dereference($t107);

    // trace_local[name_with_index_suffix#666]($t32) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:43+44
    assume {:print "$track_local(70,6,32):", $t32} $t32 == $t32;

    // string::append($t106, $t108) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:17+71
    call $t106 := $1_string_append($t106, $t108);
    if ($abort_flag) {
        assume {:print "$at(173,8402,8473)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // write_back[LocalRoot($t29)@]($t106) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:17+71
    $t29 := $Dereference($t106);

    // trace_local[name#681]($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:175:17+71
    assume {:print "$track_local(70,6,29):", $t29} $t29 == $t29;

    // $t111 := move($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:176:17+4
    assume {:print "$at(173,8491,8495)"} true;
    $t111 := $t29;

    // $t9 := $t111 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:172:24+327
    assume {:print "$at(173,8231,8558)"} true;
    $t9 := $t111;

    // goto L28 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:172:24+327
    goto L28;

    // label L26 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:178:17+11
    assume {:print "$at(173,8533,8544)"} true;
L26:

    // $t9 := $t3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:172:24+327
    assume {:print "$at(173,8231,8558)"} true;
    $t9 := $t3;

    // label L28 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:172:24+327
L28:

    // trace_local[name#682]($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:172:17+4
    assume {:print "$at(173,8224,8228)"} true;
    assume {:print "$track_local(70,6,30):", $t9} $t9 == $t9;

    // $t11 := $t9 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:130:51+2373
    assume {:print "$at(173,6223,8596)"} true;
    $t11 := $t9;

    // $t10 := $t101 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:130:51+2373
    $t10 := $t101;

    // label L25 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:130:51+2373
L25:

    // trace_local[deprecated_name#684]($t11) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:130:32+15
    assume {:print "$at(173,6204,6219)"} true;
    assume {:print "$track_local(70,6,23):", $t11} $t11 == $t11;

    // trace_local[deprecated_index#683]($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:130:14+16
    assume {:print "$track_local(70,6,21):", $t10} $t10 == $t10;

    // assume Identical($t112, global<object::ObjectCore>(signer::$address_of($t75))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:305:9+65
    assume {:print "$at(136,11825,11890)"} true;
    assume ($t112 == $ResourceValue($1_object_ObjectCore_$memory, $1_signer_$address_of($t75)));

    // assume Identical($t113, pack guid::GUID(pack guid::ID(select object::ObjectCore.guid_creation_num($t112), signer::$address_of($t75)))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:308:9+185
    assume {:print "$at(136,11963,12148)"} true;
    assume ($t113 == $1_guid_GUID($1_guid_ID($t112->$guid_creation_num, $1_signer_$address_of($t75))));

    // $t114 := object::new_event_handle<token::MutationEvent>($t75) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:190:30+40
    assume {:print "$at(173,8794,8834)"} true;
    call $t114 := $1_object_new_event_handle'$4_token_MutationEvent'($t75);
    if ($abort_flag) {
        assume {:print "$at(173,8794,8834)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // $t115 := pack token::Token($t77, $t10, $t2, $t11, $t5, $t114) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:184:21+226
    assume {:print "$at(173,8619,8845)"} true;
    $t115 := $4_token_Token($t77, $t10, $t2, $t11, $t5, $t114);

    // trace_local[token#685]($t115) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:184:13+5
    assume {:print "$track_local(70,6,36):", $t115} $t115 == $t115;

    // move_to<token::Token>($t115, $t75) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:192:9+7
    assume {:print "$at(173,8855,8862)"} true;
    if ($ResourceExists($4_token_Token_$memory, $t75->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4_token_Token_$memory := $ResourceUpdate($4_token_Token_$memory, $t75->$addr, $t115);
    }
    if ($abort_flag) {
        assume {:print "$at(173,8855,8862)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // $t116 := copy($t34) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:194:29+8
    assume {:print "$at(173,8916,8924)"} true;
    $t116 := $t34;

    // $t117 := opaque begin: option::is_some<royalty::Royalty>($t116) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:194:13+25

    // assume WellFormed($t117) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:194:13+25
    assume $IsValid'bool'($t117);

    // assume Eq<bool>($t117, option::spec_is_some<royalty::Royalty>($t116)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:194:13+25
    assume $IsEqual'bool'($t117, $1_option_spec_is_some'$4_royalty_Royalty'($t116));

    // $t117 := opaque end: option::is_some<royalty::Royalty>($t116) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:194:13+25

    // if ($t117) goto L30 else goto L29 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:194:9+116
    if ($t117) { goto L30; } else { goto L29; }

    // label L30 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:195:27+15
    assume {:print "$at(173,8955,8970)"} true;
L30:

    // $t118 := borrow_local($t34) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:195:60+12
    assume {:print "$at(173,8988,9000)"} true;
    $t118 := $Mutation($Local(34), EmptyVec(), $t34);

    // $t119 := opaque begin: option::extract<royalty::Royalty>($t118) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:195:44+29

    // $t120 := read_ref($t118) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:195:44+29
    $t120 := $Dereference($t118);

    // assume Identical($t121, option::spec_is_none<royalty::Royalty>($t118)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:195:44+29
    assume ($t121 == $1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t118)));

    // if ($t121) goto L47 else goto L51 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:195:44+29
    if ($t121) { goto L47; } else { goto L51; }

    // label L47 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:195:44+29
L47:

    // assume And(option::spec_is_none<royalty::Royalty>($t118), Eq(262145, $t40)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:195:44+29
    assume {:print "$at(173,8972,9001)"} true;
    assume ($1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t118)) && $IsEqual'num'(262145, $t40));

    // trace_abort($t40) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:195:44+29
    assume {:print "$at(173,8972,9001)"} true;
    assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;

    // goto L33 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:195:44+29
    goto L33;

    // label L46 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:195:44+29
L46:

    // $t118 := havoc[mut]() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:195:44+29
    assume {:print "$at(173,8972,9001)"} true;
    havoc $temp_0'$1_option_Option'$4_royalty_Royalty'';
    $t118 := $UpdateMutation($t118, $temp_0'$1_option_Option'$4_royalty_Royalty'');

    // assume And(WellFormed($t118), Le(Len<royalty::Royalty>(select option::Option.vec($t118)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:195:44+29
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($Dereference($t118)) && (LenVec($Dereference($t118)->$vec) <= 1));

    // assume WellFormed($t119) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:195:44+29
    assume $IsValid'$4_royalty_Royalty'($t119);

    // assume Eq<royalty::Royalty>($t119, option::spec_borrow<royalty::Royalty>($t120)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:195:44+29
    assume $IsEqual'$4_royalty_Royalty'($t119, $1_option_spec_borrow'$4_royalty_Royalty'($t120));

    // assume option::spec_is_none<royalty::Royalty>($t118) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:195:44+29
    assume $1_option_spec_is_none'$4_royalty_Royalty'($Dereference($t118));

    // $t119 := opaque end: option::extract<royalty::Royalty>($t118) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:195:44+29

    // pack_ref_deep($t118) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:195:44+29

    // write_back[LocalRoot($t34)@]($t118) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:195:44+29
    $t34 := $Dereference($t118);

    // trace_local[royalty#667]($t34) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:195:44+29
    assume {:print "$track_local(70,6,34):", $t34} $t34 == $t34;

    // royalty::init($t44, $t119) on_abort goto L33 with $t40 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:195:13+61
    call $4_royalty_init($t44, $t119);
    if ($abort_flag) {
        assume {:print "$at(173,8941,9002)"} true;
        $t40 := $abort_code;
        assume {:print "$track_abort(70,6):", $t40} $t40 == $t40;
        goto L33;
    }

    // goto L31 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:195:13+61
    goto L31;

    // label L29 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:194:9+116
    assume {:print "$at(173,8896,9012)"} true;
L29:

    // label L31 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:250:9+15
    assume {:print "$at(173,11319,11334)"} true;
L31:

    // trace_return[0]($t44) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:250:9+15
    assume {:print "$at(173,11319,11334)"} true;
    assume {:print "$track_return(70,6,0):", $t44} $t44 == $t44;

    // label L32 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:251:5+1
    assume {:print "$at(173,11339,11340)"} true;
L32:

    // return $t44 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:251:5+1
    assume {:print "$at(173,11339,11340)"} true;
    $ret0 := $t44;
    return;

    // label L33 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:251:5+1
L33:

    // abort($t40) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:251:5+1
    assume {:print "$at(173,11339,11340)"} true;
    $abort_code := $t40;
    $abort_flag := true;
    return;

    // label L48 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L48:

    // destroy($t88) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L38 at <internal>:1:1+10
    goto L38;

    // label L49 at <internal>:1:1+10
L49:

    // destroy($t106) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L45 at <internal>:1:1+10
    goto L45;

    // label L50 at <internal>:1:1+10
L50:

    // destroy($t107) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L44 at <internal>:1:1+10
    goto L44;

    // label L51 at <internal>:1:1+10
L51:

    // destroy($t118) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L46 at <internal>:1:1+10
    goto L46;

}

// fun token::create_token_seed [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:278:5+350
procedure {:inline 1} $4_token_create_token_seed(_$t0: $1_string_String, _$t1: $1_string_String) returns ($ret0: Vec (int))
{
    // declare local variables
    var $t2: Vec (int);
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation (Vec (int));
    var $t10: Vec (int);
    var $t11: $Mutation (Vec (int));
    var $t12: Vec (int);
    var $t13: Vec (int);
    var $t0: $1_string_String;
    var $t1: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[collection]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:278:5+1
    assume {:print "$at(173,12497,12498)"} true;
    assume {:print "$track_local(70,9,0):", $t0} $t0 == $t0;

    // trace_local[name]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:278:5+1
    assume {:print "$track_local(70,9,1):", $t1} $t1 == $t1;

    // $t3 := string::length($t1) on_abort goto L4 with $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:279:17+20
    assume {:print "$at(173,12592,12612)"} true;
    call $t3 := $1_string_length($t1);
    if ($abort_flag) {
        assume {:print "$at(173,12592,12612)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(70,9):", $t4} $t4 == $t4;
        goto L4;
    }

    // $t5 := 128 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:279:41+21
    $t5 := 128;
    assume $IsValid'u64'($t5);

    // $t6 := <=($t3, $t5) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:279:38+2
    call $t6 := $Le($t3, $t5);

    // if ($t6) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:279:9+97
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:279:9+97
L1:

    // goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:279:9+97
    assume {:print "$at(173,12584,12681)"} true;
    goto L2;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:279:9+97
L0:

    // $t7 := 4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:279:84+20
    assume {:print "$at(173,12659,12679)"} true;
    $t7 := 4;
    assume $IsValid'u64'($t7);

    // $t8 := error::out_of_range($t7) on_abort goto L4 with $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:279:64+41
    call $t8 := $1_error_out_of_range($t7);
    if ($abort_flag) {
        assume {:print "$at(173,12639,12680)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(70,9):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_abort($t8) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:279:9+97
    assume {:print "$at(173,12584,12681)"} true;
    assume {:print "$track_abort(70,9):", $t8} $t8 == $t8;

    // $t4 := move($t8) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:279:9+97
    $t4 := $t8;

    // goto L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:279:9+97
    goto L4;

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:280:35+10
    assume {:print "$at(173,12717,12727)"} true;
L2:

    // $t2 := string::bytes($t0) on_abort goto L4 with $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:280:21+25
    assume {:print "$at(173,12703,12728)"} true;
    call $t2 := $1_string_bytes($t0);
    if ($abort_flag) {
        assume {:print "$at(173,12703,12728)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(70,9):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_local[seed]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:280:13+4
    assume {:print "$track_local(70,9,2):", $t2} $t2 == $t2;

    // $t9 := borrow_local($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:281:24+9
    assume {:print "$at(173,12753,12762)"} true;
    $t9 := $Mutation($Local(2), EmptyVec(), $t2);

    // $t10 := [58, 58] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:281:35+5
    $t10 := MakeVec2(58, 58);
    assume $IsValid'vec'u8''($t10);

    // vector::append<u8>($t9, $t10) on_abort goto L4 with $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:281:9+32
    call $t9 := $1_vector_append'u8'($t9, $t10);
    if ($abort_flag) {
        assume {:print "$at(173,12738,12770)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(70,9):", $t4} $t4 == $t4;
        goto L4;
    }

    // write_back[LocalRoot($t2)@]($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:281:9+32
    $t2 := $Dereference($t9);

    // trace_local[seed]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:281:9+32
    assume {:print "$track_local(70,9,2):", $t2} $t2 == $t2;

    // $t11 := borrow_local($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:282:24+9
    assume {:print "$at(173,12795,12804)"} true;
    $t11 := $Mutation($Local(2), EmptyVec(), $t2);

    // $t12 := string::bytes($t1) on_abort goto L4 with $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:282:36+19
    call $t12 := $1_string_bytes($t1);
    if ($abort_flag) {
        assume {:print "$at(173,12807,12826)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(70,9):", $t4} $t4 == $t4;
        goto L4;
    }

    // vector::append<u8>($t11, $t12) on_abort goto L4 with $t4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:282:9+47
    call $t11 := $1_vector_append'u8'($t11, $t12);
    if ($abort_flag) {
        assume {:print "$at(173,12780,12827)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(70,9):", $t4} $t4 == $t4;
        goto L4;
    }

    // write_back[LocalRoot($t2)@]($t11) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:282:9+47
    $t2 := $Dereference($t11);

    // trace_local[seed]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:282:9+47
    assume {:print "$track_local(70,9,2):", $t2} $t2 == $t2;

    // $t13 := move($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:283:9+4
    assume {:print "$at(173,12837,12841)"} true;
    $t13 := $t2;

    // trace_return[0]($t13) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:283:9+4
    assume {:print "$track_return(70,9,0):", $t13} $t13 == $t13;

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:284:5+1
    assume {:print "$at(173,12846,12847)"} true;
L3:

    // return $t13 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:284:5+1
    assume {:print "$at(173,12846,12847)"} true;
    $ret0 := $t13;
    return;

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:284:5+1
L4:

    // abort($t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\token.move:284:5+1
    assume {:print "$at(173,12846,12847)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// struct aptos_token::AptosCollection at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:35:5+1039
datatype $4_aptos_token_AptosCollection {
    $4_aptos_token_AptosCollection($mutator_ref: $1_option_Option'$4_collection_MutatorRef', $royalty_mutator_ref: $1_option_Option'$4_royalty_MutatorRef', $mutable_description: bool, $mutable_uri: bool, $mutable_token_description: bool, $mutable_token_name: bool, $mutable_token_properties: bool, $mutable_token_uri: bool, $tokens_burnable_by_creator: bool, $tokens_freezable_by_creator: bool)
}
function {:inline} $Update'$4_aptos_token_AptosCollection'_mutator_ref(s: $4_aptos_token_AptosCollection, x: $1_option_Option'$4_collection_MutatorRef'): $4_aptos_token_AptosCollection {
    $4_aptos_token_AptosCollection(x, s->$royalty_mutator_ref, s->$mutable_description, s->$mutable_uri, s->$mutable_token_description, s->$mutable_token_name, s->$mutable_token_properties, s->$mutable_token_uri, s->$tokens_burnable_by_creator, s->$tokens_freezable_by_creator)
}
function {:inline} $Update'$4_aptos_token_AptosCollection'_royalty_mutator_ref(s: $4_aptos_token_AptosCollection, x: $1_option_Option'$4_royalty_MutatorRef'): $4_aptos_token_AptosCollection {
    $4_aptos_token_AptosCollection(s->$mutator_ref, x, s->$mutable_description, s->$mutable_uri, s->$mutable_token_description, s->$mutable_token_name, s->$mutable_token_properties, s->$mutable_token_uri, s->$tokens_burnable_by_creator, s->$tokens_freezable_by_creator)
}
function {:inline} $Update'$4_aptos_token_AptosCollection'_mutable_description(s: $4_aptos_token_AptosCollection, x: bool): $4_aptos_token_AptosCollection {
    $4_aptos_token_AptosCollection(s->$mutator_ref, s->$royalty_mutator_ref, x, s->$mutable_uri, s->$mutable_token_description, s->$mutable_token_name, s->$mutable_token_properties, s->$mutable_token_uri, s->$tokens_burnable_by_creator, s->$tokens_freezable_by_creator)
}
function {:inline} $Update'$4_aptos_token_AptosCollection'_mutable_uri(s: $4_aptos_token_AptosCollection, x: bool): $4_aptos_token_AptosCollection {
    $4_aptos_token_AptosCollection(s->$mutator_ref, s->$royalty_mutator_ref, s->$mutable_description, x, s->$mutable_token_description, s->$mutable_token_name, s->$mutable_token_properties, s->$mutable_token_uri, s->$tokens_burnable_by_creator, s->$tokens_freezable_by_creator)
}
function {:inline} $Update'$4_aptos_token_AptosCollection'_mutable_token_description(s: $4_aptos_token_AptosCollection, x: bool): $4_aptos_token_AptosCollection {
    $4_aptos_token_AptosCollection(s->$mutator_ref, s->$royalty_mutator_ref, s->$mutable_description, s->$mutable_uri, x, s->$mutable_token_name, s->$mutable_token_properties, s->$mutable_token_uri, s->$tokens_burnable_by_creator, s->$tokens_freezable_by_creator)
}
function {:inline} $Update'$4_aptos_token_AptosCollection'_mutable_token_name(s: $4_aptos_token_AptosCollection, x: bool): $4_aptos_token_AptosCollection {
    $4_aptos_token_AptosCollection(s->$mutator_ref, s->$royalty_mutator_ref, s->$mutable_description, s->$mutable_uri, s->$mutable_token_description, x, s->$mutable_token_properties, s->$mutable_token_uri, s->$tokens_burnable_by_creator, s->$tokens_freezable_by_creator)
}
function {:inline} $Update'$4_aptos_token_AptosCollection'_mutable_token_properties(s: $4_aptos_token_AptosCollection, x: bool): $4_aptos_token_AptosCollection {
    $4_aptos_token_AptosCollection(s->$mutator_ref, s->$royalty_mutator_ref, s->$mutable_description, s->$mutable_uri, s->$mutable_token_description, s->$mutable_token_name, x, s->$mutable_token_uri, s->$tokens_burnable_by_creator, s->$tokens_freezable_by_creator)
}
function {:inline} $Update'$4_aptos_token_AptosCollection'_mutable_token_uri(s: $4_aptos_token_AptosCollection, x: bool): $4_aptos_token_AptosCollection {
    $4_aptos_token_AptosCollection(s->$mutator_ref, s->$royalty_mutator_ref, s->$mutable_description, s->$mutable_uri, s->$mutable_token_description, s->$mutable_token_name, s->$mutable_token_properties, x, s->$tokens_burnable_by_creator, s->$tokens_freezable_by_creator)
}
function {:inline} $Update'$4_aptos_token_AptosCollection'_tokens_burnable_by_creator(s: $4_aptos_token_AptosCollection, x: bool): $4_aptos_token_AptosCollection {
    $4_aptos_token_AptosCollection(s->$mutator_ref, s->$royalty_mutator_ref, s->$mutable_description, s->$mutable_uri, s->$mutable_token_description, s->$mutable_token_name, s->$mutable_token_properties, s->$mutable_token_uri, x, s->$tokens_freezable_by_creator)
}
function {:inline} $Update'$4_aptos_token_AptosCollection'_tokens_freezable_by_creator(s: $4_aptos_token_AptosCollection, x: bool): $4_aptos_token_AptosCollection {
    $4_aptos_token_AptosCollection(s->$mutator_ref, s->$royalty_mutator_ref, s->$mutable_description, s->$mutable_uri, s->$mutable_token_description, s->$mutable_token_name, s->$mutable_token_properties, s->$mutable_token_uri, s->$tokens_burnable_by_creator, x)
}
function $IsValid'$4_aptos_token_AptosCollection'(s: $4_aptos_token_AptosCollection): bool {
    $IsValid'$1_option_Option'$4_collection_MutatorRef''(s->$mutator_ref)
      && $IsValid'$1_option_Option'$4_royalty_MutatorRef''(s->$royalty_mutator_ref)
      && $IsValid'bool'(s->$mutable_description)
      && $IsValid'bool'(s->$mutable_uri)
      && $IsValid'bool'(s->$mutable_token_description)
      && $IsValid'bool'(s->$mutable_token_name)
      && $IsValid'bool'(s->$mutable_token_properties)
      && $IsValid'bool'(s->$mutable_token_uri)
      && $IsValid'bool'(s->$tokens_burnable_by_creator)
      && $IsValid'bool'(s->$tokens_freezable_by_creator)
}
function {:inline} $IsEqual'$4_aptos_token_AptosCollection'(s1: $4_aptos_token_AptosCollection, s2: $4_aptos_token_AptosCollection): bool {
    $IsEqual'$1_option_Option'$4_collection_MutatorRef''(s1->$mutator_ref, s2->$mutator_ref)
    && $IsEqual'$1_option_Option'$4_royalty_MutatorRef''(s1->$royalty_mutator_ref, s2->$royalty_mutator_ref)
    && $IsEqual'bool'(s1->$mutable_description, s2->$mutable_description)
    && $IsEqual'bool'(s1->$mutable_uri, s2->$mutable_uri)
    && $IsEqual'bool'(s1->$mutable_token_description, s2->$mutable_token_description)
    && $IsEqual'bool'(s1->$mutable_token_name, s2->$mutable_token_name)
    && $IsEqual'bool'(s1->$mutable_token_properties, s2->$mutable_token_properties)
    && $IsEqual'bool'(s1->$mutable_token_uri, s2->$mutable_token_uri)
    && $IsEqual'bool'(s1->$tokens_burnable_by_creator, s2->$tokens_burnable_by_creator)
    && $IsEqual'bool'(s1->$tokens_freezable_by_creator, s2->$tokens_freezable_by_creator)}
var $4_aptos_token_AptosCollection_$memory: $Memory $4_aptos_token_AptosCollection;

// fun aptos_token::create_collection_object [baseline] at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:110:5+1956
procedure {:inline 1} $4_aptos_token_create_collection_object(_$t0: $signer, _$t1: $1_string_String, _$t2: int, _$t3: $1_string_String, _$t4: $1_string_String, _$t5: bool, _$t6: bool, _$t7: bool, _$t8: bool, _$t9: bool, _$t10: bool, _$t11: bool, _$t12: bool, _$t13: bool, _$t14: int, _$t15: int) returns ($ret0: $1_object_Object'$4_aptos_token_AptosCollection')
{
    // declare local variables
    var $t16: $1_option_Option'$4_collection_MutatorRef';
    var $t17: $1_option_Option'$4_royalty_MutatorRef';
    var $t18: $4_aptos_token_AptosCollection;
    var $t19: $1_object_ConstructorRef;
    var $t20: int;
    var $t21: $1_option_Option'$4_collection_MutatorRef';
    var $t22: $signer;
    var $t23: $4_royalty_Royalty;
    var $t24: $1_option_Option'$4_royalty_MutatorRef';
    var $t25: int;
    var $t26: int;
    var $t27: $4_royalty_Royalty;
    var $t28: $1_option_Option'$4_royalty_Royalty';
    var $t29: $1_object_ConstructorRef;
    var $t30: $signer;
    var $t31: bool;
    var $t32: $4_collection_MutatorRef;
    var $t33: $1_object_ExtendRef;
    var $t34: $4_royalty_MutatorRef;
    var $t35: $4_aptos_token_AptosCollection;
    var $t36: $1_object_Object'$4_aptos_token_AptosCollection';
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: int;
    var $t3: $1_string_String;
    var $t4: $1_string_String;
    var $t5: bool;
    var $t6: bool;
    var $t7: bool;
    var $t8: bool;
    var $t9: bool;
    var $t10: bool;
    var $t11: bool;
    var $t12: bool;
    var $t13: bool;
    var $t14: int;
    var $t15: int;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$4_aptos_token_AptosCollection'': $1_object_Object'$4_aptos_token_AptosCollection';
    var $temp_0'$1_option_Option'$4_collection_MutatorRef'': $1_option_Option'$4_collection_MutatorRef';
    var $temp_0'$1_option_Option'$4_royalty_MutatorRef'': $1_option_Option'$4_royalty_MutatorRef';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$4_aptos_token_AptosCollection': $4_aptos_token_AptosCollection;
    var $temp_0'$4_royalty_Royalty': $4_royalty_Royalty;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;
    $t6 := _$t6;
    $t7 := _$t7;
    $t8 := _$t8;
    $t9 := _$t9;
    $t10 := _$t10;
    $t11 := _$t11;
    $t12 := _$t12;
    $t13 := _$t13;
    $t14 := _$t14;
    $t15 := _$t15;

    // bytecode translation starts here
    // trace_local[creator]($t0) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:110:5+1
    assume {:print "$at(169,4037,4038)"} true;
    assume {:print "$track_local(72,7,0):", $t0} $t0 == $t0;

    // trace_local[description]($t1) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:110:5+1
    assume {:print "$track_local(72,7,1):", $t1} $t1 == $t1;

    // trace_local[max_supply]($t2) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:110:5+1
    assume {:print "$track_local(72,7,2):", $t2} $t2 == $t2;

    // trace_local[name]($t3) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:110:5+1
    assume {:print "$track_local(72,7,3):", $t3} $t3 == $t3;

    // trace_local[uri]($t4) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:110:5+1
    assume {:print "$track_local(72,7,4):", $t4} $t4 == $t4;

    // trace_local[mutable_description]($t5) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:110:5+1
    assume {:print "$track_local(72,7,5):", $t5} $t5 == $t5;

    // trace_local[mutable_royalty]($t6) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:110:5+1
    assume {:print "$track_local(72,7,6):", $t6} $t6 == $t6;

    // trace_local[mutable_uri]($t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:110:5+1
    assume {:print "$track_local(72,7,7):", $t7} $t7 == $t7;

    // trace_local[mutable_token_description]($t8) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:110:5+1
    assume {:print "$track_local(72,7,8):", $t8} $t8 == $t8;

    // trace_local[mutable_token_name]($t9) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:110:5+1
    assume {:print "$track_local(72,7,9):", $t9} $t9 == $t9;

    // trace_local[mutable_token_properties]($t10) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:110:5+1
    assume {:print "$track_local(72,7,10):", $t10} $t10 == $t10;

    // trace_local[mutable_token_uri]($t11) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:110:5+1
    assume {:print "$track_local(72,7,11):", $t11} $t11 == $t11;

    // trace_local[tokens_burnable_by_creator]($t12) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:110:5+1
    assume {:print "$track_local(72,7,12):", $t12} $t12 == $t12;

    // trace_local[tokens_freezable_by_creator]($t13) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:110:5+1
    assume {:print "$track_local(72,7,13):", $t13} $t13 == $t13;

    // trace_local[royalty_numerator]($t14) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:110:5+1
    assume {:print "$track_local(72,7,14):", $t14} $t14 == $t14;

    // trace_local[royalty_denominator]($t15) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:110:5+1
    assume {:print "$track_local(72,7,15):", $t15} $t15 == $t15;

    // $t25 := signer::address_of($t0) on_abort goto L7 with $t26 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:128:28+27
    assume {:print "$at(169,4649,4676)"} true;
    call $t25 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(169,4649,4676)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(72,7):", $t26} $t26 == $t26;
        goto L7;
    }

    // trace_local[creator_addr]($t25) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:128:13+12
    assume {:print "$track_local(72,7,20):", $t25} $t25 == $t25;

    // $t27 := royalty::create($t14, $t15, $t25) on_abort goto L7 with $t26 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:129:23+69
    assume {:print "$at(169,4700,4769)"} true;
    call $t27 := $4_royalty_create($t14, $t15, $t25);
    if ($abort_flag) {
        assume {:print "$at(169,4700,4769)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(72,7):", $t26} $t26 == $t26;
        goto L7;
    }

    // trace_local[royalty]($t27) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:129:13+7
    assume {:print "$track_local(72,7,23):", $t27} $t27 == $t27;

    // $t28 := opaque begin: option::some<royalty::Royalty>($t27) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:135:13+21
    assume {:print "$at(169,4938,4959)"} true;

    // assume And(WellFormed($t28), Le(Len<royalty::Royalty>(select option::Option.vec($t28)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:135:13+21
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($t28) && (LenVec($t28->$vec) <= 1));

    // assume Eq<option::Option<royalty::Royalty>>($t28, option::spec_some<royalty::Royalty>($t27)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:135:13+21
    assume $IsEqual'$1_option_Option'$4_royalty_Royalty''($t28, $1_option_spec_some'$4_royalty_Royalty'($t27));

    // $t28 := opaque end: option::some<royalty::Royalty>($t27) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:135:13+21

    // $t29 := collection::create_fixed_collection($t0, $t1, $t2, $t3, $t28, $t4) on_abort goto L7 with $t26 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:130:31+186
    assume {:print "$at(169,4801,4987)"} true;
    call $t29 := $4_collection_create_fixed_collection($t0, $t1, $t2, $t3, $t28, $t4);
    if ($abort_flag) {
        assume {:print "$at(169,4801,4987)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(72,7):", $t26} $t26 == $t26;
        goto L7;
    }

    // trace_local[constructor_ref]($t29) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:130:13+15
    assume {:print "$track_local(72,7,19):", $t29} $t29 == $t29;

    // $t30 := object::generate_signer($t29) on_abort goto L7 with $t26 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:139:29+41
    assume {:print "$at(169,5018,5059)"} true;
    call $t30 := $1_object_generate_signer($t29);
    if ($abort_flag) {
        assume {:print "$at(169,5018,5059)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(72,7):", $t26} $t26 == $t26;
        goto L7;
    }

    // trace_local[object_signer]($t30) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:139:13+13
    assume {:print "$track_local(72,7,22):", $t30} $t30 == $t30;

    // $t31 := ||($t5, $t7) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:140:51+2
    assume {:print "$at(169,5111,5113)"} true;
    call $t31 := $Or($t5, $t7);

    // if ($t31) goto L1 else goto L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:140:27+172
    if ($t31) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:141:59+16
    assume {:print "$at(169,5187,5203)"} true;
L1:

    // $t32 := collection::generate_mutator_ref($t29) on_abort goto L7 with $t26 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:141:26+50
    assume {:print "$at(169,5154,5204)"} true;
    call $t32 := $4_collection_generate_mutator_ref($t29);
    if ($abort_flag) {
        assume {:print "$at(169,5154,5204)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(72,7):", $t26} $t26 == $t26;
        goto L7;
    }

    // $t16 := opaque begin: option::some<collection::MutatorRef>($t32) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:141:13+64

    // assume And(WellFormed($t16), Le(Len<collection::MutatorRef>(select option::Option.vec($t16)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:141:13+64
    assume ($IsValid'$1_option_Option'$4_collection_MutatorRef''($t16) && (LenVec($t16->$vec) <= 1));

    // assume Eq<option::Option<collection::MutatorRef>>($t16, option::spec_some<collection::MutatorRef>($t32)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:141:13+64
    assume $IsEqual'$1_option_Option'$4_collection_MutatorRef''($t16, $1_option_spec_some'$4_collection_MutatorRef'($t32));

    // $t16 := opaque end: option::some<collection::MutatorRef>($t32) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:141:13+64

    // goto L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:140:27+172
    assume {:print "$at(169,5087,5259)"} true;
    goto L2;

    // label L0 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:143:13+14
    assume {:print "$at(169,5235,5249)"} true;
L0:

    // $t16 := opaque begin: option::none<collection::MutatorRef>() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:143:13+14
    assume {:print "$at(169,5235,5249)"} true;

    // assume And(WellFormed($t16), Le(Len<collection::MutatorRef>(select option::Option.vec($t16)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:143:13+14
    assume ($IsValid'$1_option_Option'$4_collection_MutatorRef''($t16) && (LenVec($t16->$vec) <= 1));

    // assume Eq<option::Option<collection::MutatorRef>>($t16, option::spec_none<collection::MutatorRef>()) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:143:13+14
    assume $IsEqual'$1_option_Option'$4_collection_MutatorRef''($t16, $1_option_spec_none'$4_collection_MutatorRef'());

    // $t16 := opaque end: option::none<collection::MutatorRef>() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:143:13+14

    // label L2 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:140:27+172
    assume {:print "$at(169,5087,5259)"} true;
L2:

    // trace_local[mutator_ref]($t16) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:140:13+11
    assume {:print "$at(169,5073,5084)"} true;
    assume {:print "$track_local(72,7,21):", $t16} $t16 == $t16;

    // if ($t6) goto L4 else goto L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:146:35+179
    assume {:print "$at(169,5296,5475)"} true;
    if ($t6) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:147:84+16
    assume {:print "$at(169,5402,5418)"} true;
L4:

    // $t33 := object::generate_extend_ref($t29) on_abort goto L7 with $t26 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:147:56+45
    assume {:print "$at(169,5374,5419)"} true;
    call $t33 := $1_object_generate_extend_ref($t29);
    if ($abort_flag) {
        assume {:print "$at(169,5374,5419)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(72,7):", $t26} $t26 == $t26;
        goto L7;
    }

    // $t34 := royalty::generate_mutator_ref($t33) on_abort goto L7 with $t26 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:147:26+76
    call $t34 := $4_royalty_generate_mutator_ref($t33);
    if ($abort_flag) {
        assume {:print "$at(169,5344,5420)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(72,7):", $t26} $t26 == $t26;
        goto L7;
    }

    // $t17 := opaque begin: option::some<royalty::MutatorRef>($t34) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:147:13+90

    // assume And(WellFormed($t17), Le(Len<royalty::MutatorRef>(select option::Option.vec($t17)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:147:13+90
    assume ($IsValid'$1_option_Option'$4_royalty_MutatorRef''($t17) && (LenVec($t17->$vec) <= 1));

    // assume Eq<option::Option<royalty::MutatorRef>>($t17, option::spec_some<royalty::MutatorRef>($t34)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:147:13+90
    assume $IsEqual'$1_option_Option'$4_royalty_MutatorRef''($t17, $1_option_spec_some'$4_royalty_MutatorRef'($t34));

    // $t17 := opaque end: option::some<royalty::MutatorRef>($t34) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:147:13+90

    // goto L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:146:35+179
    assume {:print "$at(169,5296,5475)"} true;
    goto L5;

    // label L3 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:149:13+14
    assume {:print "$at(169,5451,5465)"} true;
L3:

    // $t17 := opaque begin: option::none<royalty::MutatorRef>() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:149:13+14
    assume {:print "$at(169,5451,5465)"} true;

    // assume And(WellFormed($t17), Le(Len<royalty::MutatorRef>(select option::Option.vec($t17)), 1)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:149:13+14
    assume ($IsValid'$1_option_Option'$4_royalty_MutatorRef''($t17) && (LenVec($t17->$vec) <= 1));

    // assume Eq<option::Option<royalty::MutatorRef>>($t17, option::spec_none<royalty::MutatorRef>()) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:149:13+14
    assume $IsEqual'$1_option_Option'$4_royalty_MutatorRef''($t17, $1_option_spec_none'$4_royalty_MutatorRef'());

    // $t17 := opaque end: option::none<royalty::MutatorRef>() at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:149:13+14

    // label L5 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:146:35+179
    assume {:print "$at(169,5296,5475)"} true;
L5:

    // trace_local[royalty_mutator_ref]($t17) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:146:13+19
    assume {:print "$at(169,5274,5293)"} true;
    assume {:print "$track_local(72,7,24):", $t17} $t17 == $t17;

    // $t35 := pack aptos_token::AptosCollection($t16, $t17, $t5, $t7, $t8, $t9, $t10, $t11, $t12, $t13) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:152:32+364
    assume {:print "$at(169,5509,5873)"} true;
    $t35 := $4_aptos_token_AptosCollection($t16, $t17, $t5, $t7, $t8, $t9, $t10, $t11, $t12, $t13);

    // trace_local[aptos_collection]($t35) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:152:13+16
    assume {:print "$track_local(72,7,18):", $t35} $t35 == $t35;

    // move_to<aptos_token::AptosCollection>($t35, $t30) on_abort goto L7 with $t26 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:164:9+7
    assume {:print "$at(169,5883,5890)"} true;
    if ($ResourceExists($4_aptos_token_AptosCollection_$memory, $t30->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4_aptos_token_AptosCollection_$memory := $ResourceUpdate($4_aptos_token_AptosCollection_$memory, $t30->$addr, $t35);
    }
    if ($abort_flag) {
        assume {:print "$at(169,5883,5890)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(72,7):", $t26} $t26 == $t26;
        goto L7;
    }

    // $t36 := object::object_from_constructor_ref<aptos_token::AptosCollection>($t29) on_abort goto L7 with $t26 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:165:9+53
    assume {:print "$at(169,5934,5987)"} true;
    call $t36 := $1_object_object_from_constructor_ref'$4_aptos_token_AptosCollection'($t29);
    if ($abort_flag) {
        assume {:print "$at(169,5934,5987)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(72,7):", $t26} $t26 == $t26;
        goto L7;
    }

    // trace_return[0]($t36) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:165:9+53
    assume {:print "$track_return(72,7,0):", $t36} $t36 == $t36;

    // label L6 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:166:5+1
    assume {:print "$at(169,5992,5993)"} true;
L6:

    // return $t36 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:166:5+1
    assume {:print "$at(169,5992,5993)"} true;
    $ret0 := $t36;
    return;

    // label L7 at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:166:5+1
L7:

    // abort($t26) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-token-objects\sources\aptos_token.move:166:5+1
    assume {:print "$at(169,5992,5993)"} true;
    $abort_code := $t26;
    $abort_flag := true;
    return;

}

// fun merkle_proof::verify [baseline] at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:7:5+832
procedure {:inline 1} $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_merkle_proof_verify(_$t0: Vec (Vec (int)), _$t1: Vec (int), _$t2: Vec (int)) returns ($ret0: bool)
{
    // declare local variables
    var $t3: Vec (int);
    var $t4: int;
    var $t5: Vec (int);
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: bool;
    var $t14: int;
    var $t15: int;
    var $t16: Vec (Vec (int));
    var $t17: int;
    var $t18: bool;
    var $t19: Vec (int);
    var $t20: Vec (int);
    var $t21: int;
    var $t22: int;
    var $t23: bool;
    var $t24: Vec (int);
    var $t25: Vec (int);
    var $t26: Vec (int);
    var $t27: Vec (int);
    var $t28: int;
    var $t29: int;
    var $t30: $Mutation (Vec (Vec (int)));
    var $t31: $Mutation (Vec (int));
    var $t32: $Mutation (Vec (int));
    var $t33: $Mutation (Vec (int));
    var $t34: Vec (int);
    var $t35: bool;
    var $t0: Vec (Vec (int));
    var $t1: Vec (int);
    var $t2: Vec (int);
    var $temp_0'bool': bool;
    var $temp_0'u64': int;
    var $temp_0'vec'u8'': Vec (int);
    var $temp_0'vec'vec'u8''': Vec (Vec (int));
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[proof]($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:7:5+1
    assume {:print "$at(3,138,139)"} true;
    assume {:print "$track_local(73,1,0):", $t0} $t0 == $t0;

    // trace_local[root]($t1) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:7:5+1
    assume {:print "$track_local(73,1,1):", $t1} $t1 == $t1;

    // trace_local[leaf]($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:7:5+1
    assume {:print "$track_local(73,1,2):", $t2} $t2 == $t2;

    // $t3 := $t2 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:8:13+12
    assume {:print "$at(3,233,245)"} true;
    $t3 := $t2;

    // trace_local[computedHash]($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:8:13+12
    assume {:print "$track_local(73,1,3):", $t3} $t3 == $t3;

    // $t6 := vector::length<u8>($t1) on_abort goto L15 with $t7 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:9:17+21
    assume {:print "$at(3,271,292)"} true;
    call $t6 := $1_vector_length'u8'($t1);
    if ($abort_flag) {
        assume {:print "$at(3,271,292)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(73,1):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t8 := 32 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:9:40+2
    $t8 := 32;
    assume $IsValid'u64'($t8);

    // $t9 := ==($t6, $t8) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:9:38+2
    $t9 := $IsEqual'u64'($t6, $t8);

    // if ($t9) goto L1 else goto L0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:9:9+54
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:9:9+54
L1:

    // goto L2 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:9:9+54
    assume {:print "$at(3,263,317)"} true;
    goto L2;

    // label L0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:9:43+19
L0:

    // $t10 := 0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:9:43+19
    assume {:print "$at(3,297,316)"} true;
    $t10 := 0;
    assume $IsValid'u64'($t10);

    // trace_abort($t10) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:9:9+54
    assume {:print "$at(3,263,317)"} true;
    assume {:print "$track_abort(73,1):", $t10} $t10 == $t10;

    // $t7 := move($t10) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:9:9+54
    $t7 := $t10;

    // goto L15 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:9:9+54
    goto L15;

    // label L2 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:32+5
    assume {:print "$at(3,351,356)"} true;
L2:

    // $t11 := vector::length<u8>($t2) on_abort goto L15 with $t7 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:17+21
    assume {:print "$at(3,336,357)"} true;
    call $t11 := $1_vector_length'u8'($t2);
    if ($abort_flag) {
        assume {:print "$at(3,336,357)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(73,1):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t12 := 32 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:40+2
    $t12 := 32;
    assume $IsValid'u64'($t12);

    // $t13 := ==($t11, $t12) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:38+2
    $t13 := $IsEqual'u64'($t11, $t12);

    // if ($t13) goto L4 else goto L3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:9+54
    if ($t13) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:9+54
L4:

    // goto L5 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:9+54
    assume {:print "$at(3,328,382)"} true;
    goto L5;

    // label L3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:43+19
L3:

    // $t14 := 0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:43+19
    assume {:print "$at(3,362,381)"} true;
    $t14 := 0;
    assume $IsValid'u64'($t14);

    // trace_abort($t14) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:9+54
    assume {:print "$at(3,328,382)"} true;
    assume {:print "$track_abort(73,1):", $t14} $t14 == $t14;

    // $t7 := move($t14) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:9+54
    $t7 := $t14;

    // goto L15 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:9+54
    goto L15;

    // label L5 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:11:17+1
    assume {:print "$at(3,401,402)"} true;
L5:

    // $t15 := 0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:11:17+1
    assume {:print "$at(3,401,402)"} true;
    $t15 := 0;
    assume $IsValid'u64'($t15);

    // trace_local[i]($t15) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:11:13+1
    assume {:print "$track_local(73,1,4):", $t15} $t15 == $t15;

    // label L12 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume {:print "$at(3,420,421)"} true;
L12:

    // $t3 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume {:print "$at(3,420,421)"} true;
    havoc $t3;

    // assume WellFormed($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'u8''($t3);

    // $t4 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t4;

    // assume WellFormed($t4) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'u64'($t4);

    // $t5 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t5;

    // assume WellFormed($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'u8''($t5);

    // $t16 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t16;

    // assume WellFormed($t16) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'vec'u8'''($t16);

    // $t17 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t17;

    // assume WellFormed($t17) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'u64'($t17);

    // $t18 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t18;

    // assume WellFormed($t18) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'bool'($t18);

    // $t19 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t19;

    // assume WellFormed($t19) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'u8''($t19);

    // $t20 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t20;

    // assume WellFormed($t20) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'u8''($t20);

    // $t21 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t21;

    // assume WellFormed($t21) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'u8'($t21);

    // $t22 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t22;

    // assume WellFormed($t22) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'u8'($t22);

    // $t23 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t23;

    // assume WellFormed($t23) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'bool'($t23);

    // $t24 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t24;

    // assume WellFormed($t24) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'u8''($t24);

    // $t25 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t25;

    // assume WellFormed($t25) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'u8''($t25);

    // $t26 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t26;

    // assume WellFormed($t26) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'u8''($t26);

    // $t27 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t27;

    // assume WellFormed($t27) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'u8''($t27);

    // $t28 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t28;

    // assume WellFormed($t28) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'u64'($t28);

    // $t29 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t29;

    // assume WellFormed($t29) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'u64'($t29);

    // $t30 := havoc[mut_all]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t30;

    // assume WellFormed($t30) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'vec'u8'''($Dereference($t30));

    // $t31 := havoc[mut_all]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t31;

    // assume WellFormed($t31) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'u8''($Dereference($t31));

    // $t32 := havoc[mut_all]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t32;

    // assume WellFormed($t32) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'u8''($Dereference($t32));

    // $t33 := havoc[mut_all]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t33;

    // assume WellFormed($t33) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'u8''($Dereference($t33));

    // trace_local[computedHash]($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume {:print "$info(): enter loop, variable(s) computedHash, i, proofElement havocked and reassigned"} true;
    assume {:print "$track_local(73,1,3):", $t3} $t3 == $t3;

    // trace_local[i]($t4) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume {:print "$track_local(73,1,4):", $t4} $t4 == $t4;

    // trace_local[proofElement]($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume {:print "$track_local(73,1,5):", $t5} $t5 == $t5;

    // assume Not(AbortFlag()) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume !$abort_flag;

    // $t16 := copy($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:35+6
    $t16 := $t0;

    // $t17 := vector::length<vector<u8>>($t16) on_abort goto L15 with $t7 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:20+22
    call $t17 := $1_vector_length'vec'u8''($t16);
    if ($abort_flag) {
        assume {:print "$at(3,424,446)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(73,1):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t18 := <($t4, $t17) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:18+1
    call $t18 := $Lt($t4, $t17);

    // if ($t18) goto L7 else goto L6 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:9+519
    if ($t18) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:9+519
L7:

    // label L8 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:13:50+10
    assume {:print "$at(3,500,510)"} true;
L8:

    // $t30 := borrow_local($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:13:50+10
    assume {:print "$at(3,500,510)"} true;
    $t30 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t31 := vector::borrow_mut<vector<u8>>($t30, $t4) on_abort goto L15 with $t7 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:13:31+33
    call $t31,$t30 := $1_vector_borrow_mut'vec'u8''($t30, $t4);
    if ($abort_flag) {
        assume {:print "$at(3,481,514)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(73,1):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t5 := read_ref($t31) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:13:30+34
    $t5 := $Dereference($t31);

    // trace_local[proof]($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:13:30+34
    assume {:print "$track_local(73,1,0):", $t0} $t0 == $t0;

    // trace_local[proofElement]($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:13:17+12
    assume {:print "$track_local(73,1,5):", $t5} $t5 == $t5;

    // $t19 := copy($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:14:32+14
    assume {:print "$at(3,548,562)"} true;
    $t19 := $t3;

    // $t20 := copy($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:14:47+14
    $t20 := $t5;

    // $t21 := merkle_proof::compare_vector($t19, $t20) on_abort goto L15 with $t7 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:14:17+45
    call $t21 := $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_merkle_proof_compare_vector($t19, $t20);
    if ($abort_flag) {
        assume {:print "$at(3,533,578)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(73,1):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t22 := 1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:14:64+1
    $t22 := 1;
    assume $IsValid'u8'($t22);

    // $t23 := ==($t21, $t22) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:14:62+2
    $t23 := $IsEqual'u8'($t21, $t22);

    // if ($t23) goto L10 else goto L9 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:14:13+370
    if ($t23) { goto L10; } else { goto L9; }

    // label L10 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:15:32+17
    assume {:print "$at(3,617,634)"} true;
L10:

    // $t32 := borrow_local($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:15:32+17
    assume {:print "$at(3,617,634)"} true;
    $t32 := $Mutation($Local(3), EmptyVec(), $t3);

    // $t24 := move($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:15:50+12
    $t24 := $t5;

    // vector::append<u8>($t32, $t24) on_abort goto L15 with $t7 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:15:17+46
    call $t32 := $1_vector_append'u8'($t32, $t24);
    if ($abort_flag) {
        assume {:print "$at(3,602,648)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(73,1):", $t7} $t7 == $t7;
        goto L15;
    }

    // write_back[LocalRoot($t3)@]($t32) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:15:17+46
    $t3 := $Dereference($t32);

    // trace_local[computedHash]($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:15:17+46
    assume {:print "$track_local(73,1,3):", $t3} $t3 == $t3;

    // $t25 := move($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:16:54+12
    assume {:print "$at(3,704,716)"} true;
    $t25 := $t3;

    // $t3 := opaque begin: aptos_hash::keccak256($t25) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:16:32+35

    // assume WellFormed($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:16:32+35
    assume $IsValid'vec'u8''($t3);

    // assume Eq<vector<u8>>($t3, aptos_hash::spec_keccak256($t25)) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:16:32+35
    assume $IsEqual'vec'u8''($t3, $1_aptos_hash_spec_keccak256($t25));

    // $t3 := opaque end: aptos_hash::keccak256($t25) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:16:32+35

    // trace_local[computedHash]($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:16:17+12
    assume {:print "$track_local(73,1,3):", $t3} $t3 == $t3;

    // goto L11 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:16:17+50
    goto L11;

    // label L9 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:19:32+17
    assume {:print "$at(3,784,801)"} true;
L9:

    // $t33 := borrow_local($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:19:32+17
    assume {:print "$at(3,784,801)"} true;
    $t33 := $Mutation($Local(5), EmptyVec(), $t5);

    // $t26 := move($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:19:50+12
    $t26 := $t3;

    // vector::append<u8>($t33, $t26) on_abort goto L15 with $t7 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:19:17+46
    call $t33 := $1_vector_append'u8'($t33, $t26);
    if ($abort_flag) {
        assume {:print "$at(3,769,815)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(73,1):", $t7} $t7 == $t7;
        goto L15;
    }

    // write_back[LocalRoot($t5)@]($t33) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:19:17+46
    $t5 := $Dereference($t33);

    // trace_local[proofElement]($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:19:17+46
    assume {:print "$track_local(73,1,5):", $t5} $t5 == $t5;

    // $t27 := move($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:20:54+12
    assume {:print "$at(3,871,883)"} true;
    $t27 := $t5;

    // $t3 := opaque begin: aptos_hash::keccak256($t27) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:20:32+35

    // assume WellFormed($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:20:32+35
    assume $IsValid'vec'u8''($t3);

    // assume Eq<vector<u8>>($t3, aptos_hash::spec_keccak256($t27)) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:20:32+35
    assume $IsEqual'vec'u8''($t3, $1_aptos_hash_spec_keccak256($t27));

    // $t3 := opaque end: aptos_hash::keccak256($t27) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:20:32+35

    // trace_local[computedHash]($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:20:17+12
    assume {:print "$track_local(73,1,3):", $t3} $t3 == $t3;

    // label L11 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:22:17+1
    assume {:print "$at(3,918,919)"} true;
L11:

    // $t28 := 1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:22:19+1
    assume {:print "$at(3,920,921)"} true;
    $t28 := 1;
    assume $IsValid'u64'($t28);

    // $t29 := +($t4, $t28) on_abort goto L15 with $t7 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:22:18+1
    call $t29 := $AddU64($t4, $t28);
    if ($abort_flag) {
        assume {:print "$at(3,919,920)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(73,1):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_local[i]($t29) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:22:13+1
    assume {:print "$track_local(73,1,4):", $t29} $t29 == $t29;

    // goto L13 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:22:13+7
    goto L13;

    // label L6 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:24:9+12
    assume {:print "$at(3,943,955)"} true;
L6:

    // $t34 := move($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:24:9+12
    assume {:print "$at(3,943,955)"} true;
    $t34 := $t3;

    // $t35 := ==($t34, $t1) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:24:22+2
    $t35 := $IsEqual'vec'u8''($t34, $t1);

    // trace_return[0]($t35) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:24:9+20
    assume {:print "$track_return(73,1,0):", $t35} $t35 == $t35;

    // goto L14 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:24:9+20
    goto L14;

    // label L13 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:24:9+12
    // Loop invariant checking block for the loop started with header: L12
L13:

    // stop() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:24:9+12
    assume {:print "$at(3,943,955)"} true;
    assume false;
    return;

    // label L14 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:25:5+1
    assume {:print "$at(3,969,970)"} true;
L14:

    // return $t35 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:25:5+1
    assume {:print "$at(3,969,970)"} true;
    $ret0 := $t35;
    return;

    // label L15 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:25:5+1
L15:

    // abort($t7) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:25:5+1
    assume {:print "$at(3,969,970)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun merkle_proof::verify [verification] at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:7:5+832
procedure {:timeLimit 40} $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_merkle_proof_verify$verify(_$t0: Vec (Vec (int)), _$t1: Vec (int), _$t2: Vec (int)) returns ($ret0: bool)
{
    // declare local variables
    var $t3: Vec (int);
    var $t4: int;
    var $t5: Vec (int);
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: bool;
    var $t14: int;
    var $t15: int;
    var $t16: Vec (Vec (int));
    var $t17: int;
    var $t18: bool;
    var $t19: Vec (int);
    var $t20: Vec (int);
    var $t21: int;
    var $t22: int;
    var $t23: bool;
    var $t24: Vec (int);
    var $t25: Vec (int);
    var $t26: Vec (int);
    var $t27: Vec (int);
    var $t28: int;
    var $t29: int;
    var $t30: $Mutation (Vec (Vec (int)));
    var $t31: $Mutation (Vec (int));
    var $t32: $Mutation (Vec (int));
    var $t33: $Mutation (Vec (int));
    var $t34: Vec (int);
    var $t35: bool;
    var $t0: Vec (Vec (int));
    var $t1: Vec (int);
    var $t2: Vec (int);
    var $temp_0'bool': bool;
    var $temp_0'u64': int;
    var $temp_0'vec'u8'': Vec (int);
    var $temp_0'vec'vec'u8''': Vec (Vec (int));
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:7:5+1
    assume {:print "$at(3,138,139)"} true;
    assume $IsValid'vec'vec'u8'''($t0);

    // assume WellFormed($t1) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:7:5+1
    assume $IsValid'vec'u8''($t1);

    // assume WellFormed($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:7:5+1
    assume $IsValid'vec'u8''($t2);

    // trace_local[proof]($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:7:5+1
    assume {:print "$track_local(73,1,0):", $t0} $t0 == $t0;

    // trace_local[root]($t1) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:7:5+1
    assume {:print "$track_local(73,1,1):", $t1} $t1 == $t1;

    // trace_local[leaf]($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:7:5+1
    assume {:print "$track_local(73,1,2):", $t2} $t2 == $t2;

    // $t3 := $t2 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:8:13+12
    assume {:print "$at(3,233,245)"} true;
    $t3 := $t2;

    // trace_local[computedHash]($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:8:13+12
    assume {:print "$track_local(73,1,3):", $t3} $t3 == $t3;

    // $t6 := vector::length<u8>($t1) on_abort goto L15 with $t7 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:9:17+21
    assume {:print "$at(3,271,292)"} true;
    call $t6 := $1_vector_length'u8'($t1);
    if ($abort_flag) {
        assume {:print "$at(3,271,292)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(73,1):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t8 := 32 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:9:40+2
    $t8 := 32;
    assume $IsValid'u64'($t8);

    // $t9 := ==($t6, $t8) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:9:38+2
    $t9 := $IsEqual'u64'($t6, $t8);

    // if ($t9) goto L1 else goto L0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:9:9+54
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:9:9+54
L1:

    // goto L2 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:9:9+54
    assume {:print "$at(3,263,317)"} true;
    goto L2;

    // label L0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:9:43+19
L0:

    // $t10 := 0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:9:43+19
    assume {:print "$at(3,297,316)"} true;
    $t10 := 0;
    assume $IsValid'u64'($t10);

    // trace_abort($t10) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:9:9+54
    assume {:print "$at(3,263,317)"} true;
    assume {:print "$track_abort(73,1):", $t10} $t10 == $t10;

    // $t7 := move($t10) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:9:9+54
    $t7 := $t10;

    // goto L15 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:9:9+54
    goto L15;

    // label L2 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:32+5
    assume {:print "$at(3,351,356)"} true;
L2:

    // $t11 := vector::length<u8>($t2) on_abort goto L15 with $t7 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:17+21
    assume {:print "$at(3,336,357)"} true;
    call $t11 := $1_vector_length'u8'($t2);
    if ($abort_flag) {
        assume {:print "$at(3,336,357)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(73,1):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t12 := 32 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:40+2
    $t12 := 32;
    assume $IsValid'u64'($t12);

    // $t13 := ==($t11, $t12) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:38+2
    $t13 := $IsEqual'u64'($t11, $t12);

    // if ($t13) goto L4 else goto L3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:9+54
    if ($t13) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:9+54
L4:

    // goto L5 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:9+54
    assume {:print "$at(3,328,382)"} true;
    goto L5;

    // label L3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:43+19
L3:

    // $t14 := 0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:43+19
    assume {:print "$at(3,362,381)"} true;
    $t14 := 0;
    assume $IsValid'u64'($t14);

    // trace_abort($t14) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:9+54
    assume {:print "$at(3,328,382)"} true;
    assume {:print "$track_abort(73,1):", $t14} $t14 == $t14;

    // $t7 := move($t14) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:9+54
    $t7 := $t14;

    // goto L15 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:10:9+54
    goto L15;

    // label L5 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:11:17+1
    assume {:print "$at(3,401,402)"} true;
L5:

    // $t15 := 0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:11:17+1
    assume {:print "$at(3,401,402)"} true;
    $t15 := 0;
    assume $IsValid'u64'($t15);

    // trace_local[i]($t15) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:11:13+1
    assume {:print "$track_local(73,1,4):", $t15} $t15 == $t15;

    // label L12 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume {:print "$at(3,420,421)"} true;
L12:

    // $t3 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume {:print "$at(3,420,421)"} true;
    havoc $t3;

    // assume WellFormed($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'u8''($t3);

    // $t4 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t4;

    // assume WellFormed($t4) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'u64'($t4);

    // $t5 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t5;

    // assume WellFormed($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'u8''($t5);

    // $t16 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t16;

    // assume WellFormed($t16) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'vec'u8'''($t16);

    // $t17 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t17;

    // assume WellFormed($t17) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'u64'($t17);

    // $t18 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t18;

    // assume WellFormed($t18) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'bool'($t18);

    // $t19 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t19;

    // assume WellFormed($t19) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'u8''($t19);

    // $t20 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t20;

    // assume WellFormed($t20) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'u8''($t20);

    // $t21 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t21;

    // assume WellFormed($t21) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'u8'($t21);

    // $t22 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t22;

    // assume WellFormed($t22) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'u8'($t22);

    // $t23 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t23;

    // assume WellFormed($t23) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'bool'($t23);

    // $t24 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t24;

    // assume WellFormed($t24) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'u8''($t24);

    // $t25 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t25;

    // assume WellFormed($t25) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'u8''($t25);

    // $t26 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t26;

    // assume WellFormed($t26) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'u8''($t26);

    // $t27 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t27;

    // assume WellFormed($t27) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'u8''($t27);

    // $t28 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t28;

    // assume WellFormed($t28) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'u64'($t28);

    // $t29 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t29;

    // assume WellFormed($t29) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'u64'($t29);

    // $t30 := havoc[mut_all]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t30;

    // assume WellFormed($t30) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'vec'u8'''($Dereference($t30));

    // $t31 := havoc[mut_all]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t31;

    // assume WellFormed($t31) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'u8''($Dereference($t31));

    // $t32 := havoc[mut_all]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t32;

    // assume WellFormed($t32) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'u8''($Dereference($t32));

    // $t33 := havoc[mut_all]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    havoc $t33;

    // assume WellFormed($t33) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume $IsValid'vec'u8''($Dereference($t33));

    // trace_local[computedHash]($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume {:print "$info(): enter loop, variable(s) computedHash, i, proofElement havocked and reassigned"} true;
    assume {:print "$track_local(73,1,3):", $t3} $t3 == $t3;

    // trace_local[i]($t4) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume {:print "$track_local(73,1,4):", $t4} $t4 == $t4;

    // trace_local[proofElement]($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume {:print "$track_local(73,1,5):", $t5} $t5 == $t5;

    // assume Not(AbortFlag()) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:16+1
    assume !$abort_flag;

    // $t16 := copy($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:35+6
    $t16 := $t0;

    // $t17 := vector::length<vector<u8>>($t16) on_abort goto L15 with $t7 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:20+22
    call $t17 := $1_vector_length'vec'u8''($t16);
    if ($abort_flag) {
        assume {:print "$at(3,424,446)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(73,1):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t18 := <($t4, $t17) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:18+1
    call $t18 := $Lt($t4, $t17);

    // if ($t18) goto L7 else goto L6 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:9+519
    if ($t18) { goto L7; } else { goto L6; }

    // label L7 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:12:9+519
L7:

    // label L8 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:13:50+10
    assume {:print "$at(3,500,510)"} true;
L8:

    // $t30 := borrow_local($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:13:50+10
    assume {:print "$at(3,500,510)"} true;
    $t30 := $Mutation($Local(0), EmptyVec(), $t0);

    // $t31 := vector::borrow_mut<vector<u8>>($t30, $t4) on_abort goto L15 with $t7 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:13:31+33
    call $t31,$t30 := $1_vector_borrow_mut'vec'u8''($t30, $t4);
    if ($abort_flag) {
        assume {:print "$at(3,481,514)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(73,1):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t5 := read_ref($t31) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:13:30+34
    $t5 := $Dereference($t31);

    // trace_local[proof]($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:13:30+34
    assume {:print "$track_local(73,1,0):", $t0} $t0 == $t0;

    // trace_local[proofElement]($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:13:17+12
    assume {:print "$track_local(73,1,5):", $t5} $t5 == $t5;

    // $t19 := copy($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:14:32+14
    assume {:print "$at(3,548,562)"} true;
    $t19 := $t3;

    // $t20 := copy($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:14:47+14
    $t20 := $t5;

    // $t21 := merkle_proof::compare_vector($t19, $t20) on_abort goto L15 with $t7 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:14:17+45
    call $t21 := $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_merkle_proof_compare_vector($t19, $t20);
    if ($abort_flag) {
        assume {:print "$at(3,533,578)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(73,1):", $t7} $t7 == $t7;
        goto L15;
    }

    // $t22 := 1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:14:64+1
    $t22 := 1;
    assume $IsValid'u8'($t22);

    // $t23 := ==($t21, $t22) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:14:62+2
    $t23 := $IsEqual'u8'($t21, $t22);

    // if ($t23) goto L10 else goto L9 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:14:13+370
    if ($t23) { goto L10; } else { goto L9; }

    // label L10 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:15:32+17
    assume {:print "$at(3,617,634)"} true;
L10:

    // $t32 := borrow_local($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:15:32+17
    assume {:print "$at(3,617,634)"} true;
    $t32 := $Mutation($Local(3), EmptyVec(), $t3);

    // $t24 := move($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:15:50+12
    $t24 := $t5;

    // vector::append<u8>($t32, $t24) on_abort goto L15 with $t7 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:15:17+46
    call $t32 := $1_vector_append'u8'($t32, $t24);
    if ($abort_flag) {
        assume {:print "$at(3,602,648)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(73,1):", $t7} $t7 == $t7;
        goto L15;
    }

    // write_back[LocalRoot($t3)@]($t32) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:15:17+46
    $t3 := $Dereference($t32);

    // trace_local[computedHash]($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:15:17+46
    assume {:print "$track_local(73,1,3):", $t3} $t3 == $t3;

    // $t25 := move($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:16:54+12
    assume {:print "$at(3,704,716)"} true;
    $t25 := $t3;

    // $t3 := opaque begin: aptos_hash::keccak256($t25) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:16:32+35

    // assume WellFormed($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:16:32+35
    assume $IsValid'vec'u8''($t3);

    // assume Eq<vector<u8>>($t3, aptos_hash::spec_keccak256($t25)) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:16:32+35
    assume $IsEqual'vec'u8''($t3, $1_aptos_hash_spec_keccak256($t25));

    // $t3 := opaque end: aptos_hash::keccak256($t25) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:16:32+35

    // trace_local[computedHash]($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:16:17+12
    assume {:print "$track_local(73,1,3):", $t3} $t3 == $t3;

    // goto L11 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:16:17+50
    goto L11;

    // label L9 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:19:32+17
    assume {:print "$at(3,784,801)"} true;
L9:

    // $t33 := borrow_local($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:19:32+17
    assume {:print "$at(3,784,801)"} true;
    $t33 := $Mutation($Local(5), EmptyVec(), $t5);

    // $t26 := move($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:19:50+12
    $t26 := $t3;

    // vector::append<u8>($t33, $t26) on_abort goto L15 with $t7 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:19:17+46
    call $t33 := $1_vector_append'u8'($t33, $t26);
    if ($abort_flag) {
        assume {:print "$at(3,769,815)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(73,1):", $t7} $t7 == $t7;
        goto L15;
    }

    // write_back[LocalRoot($t5)@]($t33) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:19:17+46
    $t5 := $Dereference($t33);

    // trace_local[proofElement]($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:19:17+46
    assume {:print "$track_local(73,1,5):", $t5} $t5 == $t5;

    // $t27 := move($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:20:54+12
    assume {:print "$at(3,871,883)"} true;
    $t27 := $t5;

    // $t3 := opaque begin: aptos_hash::keccak256($t27) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:20:32+35

    // assume WellFormed($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:20:32+35
    assume $IsValid'vec'u8''($t3);

    // assume Eq<vector<u8>>($t3, aptos_hash::spec_keccak256($t27)) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:20:32+35
    assume $IsEqual'vec'u8''($t3, $1_aptos_hash_spec_keccak256($t27));

    // $t3 := opaque end: aptos_hash::keccak256($t27) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:20:32+35

    // trace_local[computedHash]($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:20:17+12
    assume {:print "$track_local(73,1,3):", $t3} $t3 == $t3;

    // label L11 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:22:17+1
    assume {:print "$at(3,918,919)"} true;
L11:

    // $t28 := 1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:22:19+1
    assume {:print "$at(3,920,921)"} true;
    $t28 := 1;
    assume $IsValid'u64'($t28);

    // $t29 := +($t4, $t28) on_abort goto L15 with $t7 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:22:18+1
    call $t29 := $AddU64($t4, $t28);
    if ($abort_flag) {
        assume {:print "$at(3,919,920)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(73,1):", $t7} $t7 == $t7;
        goto L15;
    }

    // trace_local[i]($t29) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:22:13+1
    assume {:print "$track_local(73,1,4):", $t29} $t29 == $t29;

    // goto L13 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:22:13+7
    goto L13;

    // label L6 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:24:9+12
    assume {:print "$at(3,943,955)"} true;
L6:

    // $t34 := move($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:24:9+12
    assume {:print "$at(3,943,955)"} true;
    $t34 := $t3;

    // $t35 := ==($t34, $t1) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:24:22+2
    $t35 := $IsEqual'vec'u8''($t34, $t1);

    // trace_return[0]($t35) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:24:9+20
    assume {:print "$track_return(73,1,0):", $t35} $t35 == $t35;

    // goto L14 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:24:9+20
    goto L14;

    // label L13 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:24:9+12
    // Loop invariant checking block for the loop started with header: L12
L13:

    // stop() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:24:9+12
    assume {:print "$at(3,943,955)"} true;
    assume false;
    return;

    // label L14 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:25:5+1
    assume {:print "$at(3,969,970)"} true;
L14:

    // return $t35 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:25:5+1
    assume {:print "$at(3,969,970)"} true;
    $ret0 := $t35;
    return;

    // label L15 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:25:5+1
L15:

    // abort($t7) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:25:5+1
    assume {:print "$at(3,969,970)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun merkle_proof::compare_vector [baseline] at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:26:5+403
procedure {:inline 1} $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_merkle_proof_compare_vector(_$t0: Vec (int), _$t1: Vec (int)) returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: bool;
    var $t9: int;
    var $t10: int;
    var $t11: bool;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t18: int;
    var $t0: Vec (int);
    var $t1: Vec (int);
    var $temp_0'u64': int;
    var $temp_0'u8': int;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[a]($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:26:5+1
    assume {:print "$at(3,976,977)"} true;
    assume {:print "$track_local(73,0,0):", $t0} $t0 == $t0;

    // trace_local[b]($t1) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:26:5+1
    assume {:print "$track_local(73,0,1):", $t1} $t1 == $t1;

    // $t3 := 0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:27:21+1
    assume {:print "$at(3,1049,1050)"} true;
    $t3 := 0;
    assume $IsValid'u64'($t3);

    // trace_local[index]($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:27:13+5
    assume {:print "$track_local(73,0,2):", $t3} $t3 == $t3;

    // label L7 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume {:print "$at(3,1067,1072)"} true;
L7:

    // $t2 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume {:print "$at(3,1067,1072)"} true;
    havoc $t2;

    // assume WellFormed($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume $IsValid'u64'($t2);

    // $t4 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    havoc $t4;

    // assume WellFormed($t4) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume $IsValid'u64'($t4);

    // $t5 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    havoc $t5;

    // assume WellFormed($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume $IsValid'bool'($t5);

    // $t6 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    havoc $t6;

    // assume WellFormed($t6) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume $IsValid'u8'($t6);

    // $t7 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    havoc $t7;

    // assume WellFormed($t7) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume $IsValid'u8'($t7);

    // $t8 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    havoc $t8;

    // assume WellFormed($t8) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume $IsValid'bool'($t8);

    // $t9 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    havoc $t9;

    // assume WellFormed($t9) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume $IsValid'u8'($t9);

    // $t10 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    havoc $t10;

    // assume WellFormed($t10) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume $IsValid'u8'($t10);

    // $t11 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    havoc $t11;

    // assume WellFormed($t11) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume $IsValid'bool'($t11);

    // $t12 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    havoc $t12;

    // assume WellFormed($t12) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume $IsValid'u64'($t12);

    // $t13 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    havoc $t13;

    // assume WellFormed($t13) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume $IsValid'u64'($t13);

    // trace_local[index]($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume {:print "$info(): enter loop, variable(s) index havocked and reassigned"} true;
    assume {:print "$track_local(73,0,2):", $t2} $t2 == $t2;

    // assume Not(AbortFlag()) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume !$abort_flag;

    // $t4 := vector::length<u8>($t0) on_abort goto L10 with $t14 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:23+17
    call $t4 := $1_vector_length'u8'($t0);
    if ($abort_flag) {
        assume {:print "$at(3,1075,1092)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(73,0):", $t14} $t14 == $t14;
        goto L10;
    }

    // $t5 := <($t2, $t4) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:21+1
    call $t5 := $Lt($t2, $t4);

    // if ($t5) goto L1 else goto L0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:9+299
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:9+299
L1:

    // label L2 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:29:32+1
    assume {:print "$at(3,1127,1128)"} true;
L2:

    // $t6 := vector::borrow<u8>($t0, $t2) on_abort goto L10 with $t14 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:29:17+23
    assume {:print "$at(3,1112,1135)"} true;
    call $t6 := $1_vector_borrow'u8'($t0, $t2);
    if ($abort_flag) {
        assume {:print "$at(3,1112,1135)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(73,0):", $t14} $t14 == $t14;
        goto L10;
    }

    // $t7 := vector::borrow<u8>($t1, $t2) on_abort goto L10 with $t14 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:29:44+23
    call $t7 := $1_vector_borrow'u8'($t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(3,1139,1162)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(73,0):", $t14} $t14 == $t14;
        goto L10;
    }

    // $t8 := >($t6, $t7) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:29:41+1
    call $t8 := $Gt($t6, $t7);

    // if ($t8) goto L4 else goto L3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:29:13+97
    if ($t8) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:30:17+8
    assume {:print "$at(3,1182,1190)"} true;
L4:

    // $t15 := 0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:30:24+1
    assume {:print "$at(3,1189,1190)"} true;
    $t15 := 0;
    assume $IsValid'u8'($t15);

    // trace_return[0]($t15) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:30:17+8
    assume {:print "$track_return(73,0,0):", $t15} $t15 == $t15;

    // $t16 := move($t15) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:30:17+8
    $t16 := $t15;

    // goto L9 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:30:17+8
    goto L9;

    // label L3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:32:32+1
    assume {:print "$at(3,1239,1240)"} true;
L3:

    // $t9 := vector::borrow<u8>($t0, $t2) on_abort goto L10 with $t14 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:32:17+23
    assume {:print "$at(3,1224,1247)"} true;
    call $t9 := $1_vector_borrow'u8'($t0, $t2);
    if ($abort_flag) {
        assume {:print "$at(3,1224,1247)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(73,0):", $t14} $t14 == $t14;
        goto L10;
    }

    // $t10 := vector::borrow<u8>($t1, $t2) on_abort goto L10 with $t14 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:32:44+23
    call $t10 := $1_vector_borrow'u8'($t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(3,1251,1274)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(73,0):", $t14} $t14 == $t14;
        goto L10;
    }

    // $t11 := <($t9, $t10) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:32:41+1
    call $t11 := $Lt($t9, $t10);

    // if ($t11) goto L6 else goto L5 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:32:13+97
    if ($t11) { goto L6; } else { goto L5; }

    // label L6 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:33:17+8
    assume {:print "$at(3,1294,1302)"} true;
L6:

    // $t17 := 1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:33:24+1
    assume {:print "$at(3,1301,1302)"} true;
    $t17 := 1;
    assume $IsValid'u8'($t17);

    // trace_return[0]($t17) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:33:17+8
    assume {:print "$track_return(73,0,0):", $t17} $t17 == $t17;

    // $t16 := move($t17) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:33:17+8
    $t16 := $t17;

    // goto L9 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:33:17+8
    goto L9;

    // label L5 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:35:21+5
    assume {:print "$at(3,1340,1345)"} true;
L5:

    // $t12 := 1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:35:28+1
    assume {:print "$at(3,1347,1348)"} true;
    $t12 := 1;
    assume $IsValid'u64'($t12);

    // $t13 := +($t2, $t12) on_abort goto L10 with $t14 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:35:27+1
    call $t13 := $AddU64($t2, $t12);
    if ($abort_flag) {
        assume {:print "$at(3,1346,1347)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(73,0):", $t14} $t14 == $t14;
        goto L10;
    }

    // trace_local[index]($t13) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:35:13+5
    assume {:print "$track_local(73,0,2):", $t13} $t13 == $t13;

    // goto L8 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:35:29+1
    goto L8;

    // label L0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:37:9+1
    assume {:print "$at(3,1371,1372)"} true;
L0:

    // $t18 := 1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:37:9+1
    assume {:print "$at(3,1371,1372)"} true;
    $t18 := 1;
    assume $IsValid'u8'($t18);

    // trace_return[0]($t18) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:37:9+1
    assume {:print "$track_return(73,0,0):", $t18} $t18 == $t18;

    // $t16 := move($t18) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:37:9+1
    $t16 := $t18;

    // goto L9 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:37:9+1
    goto L9;

    // label L8 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:37:9+1
    // Loop invariant checking block for the loop started with header: L7
L8:

    // stop() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:37:9+1
    assume {:print "$at(3,1371,1372)"} true;
    assume false;
    return;

    // label L9 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:38:5+1
    assume {:print "$at(3,1378,1379)"} true;
L9:

    // return $t16 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:38:5+1
    assume {:print "$at(3,1378,1379)"} true;
    $ret0 := $t16;
    return;

    // label L10 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:38:5+1
L10:

    // abort($t14) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:38:5+1
    assume {:print "$at(3,1378,1379)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

}

// fun merkle_proof::compare_vector [verification] at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:26:5+403
procedure {:timeLimit 40} $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_merkle_proof_compare_vector$verify(_$t0: Vec (int), _$t1: Vec (int)) returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: bool;
    var $t9: int;
    var $t10: int;
    var $t11: bool;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t18: int;
    var $t0: Vec (int);
    var $t1: Vec (int);
    var $temp_0'u64': int;
    var $temp_0'u8': int;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:26:5+1
    assume {:print "$at(3,976,977)"} true;
    assume $IsValid'vec'u8''($t0);

    // assume WellFormed($t1) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:26:5+1
    assume $IsValid'vec'u8''($t1);

    // trace_local[a]($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:26:5+1
    assume {:print "$track_local(73,0,0):", $t0} $t0 == $t0;

    // trace_local[b]($t1) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:26:5+1
    assume {:print "$track_local(73,0,1):", $t1} $t1 == $t1;

    // $t3 := 0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:27:21+1
    assume {:print "$at(3,1049,1050)"} true;
    $t3 := 0;
    assume $IsValid'u64'($t3);

    // trace_local[index]($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:27:13+5
    assume {:print "$track_local(73,0,2):", $t3} $t3 == $t3;

    // label L7 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume {:print "$at(3,1067,1072)"} true;
L7:

    // $t2 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume {:print "$at(3,1067,1072)"} true;
    havoc $t2;

    // assume WellFormed($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume $IsValid'u64'($t2);

    // $t4 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    havoc $t4;

    // assume WellFormed($t4) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume $IsValid'u64'($t4);

    // $t5 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    havoc $t5;

    // assume WellFormed($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume $IsValid'bool'($t5);

    // $t6 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    havoc $t6;

    // assume WellFormed($t6) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume $IsValid'u8'($t6);

    // $t7 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    havoc $t7;

    // assume WellFormed($t7) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume $IsValid'u8'($t7);

    // $t8 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    havoc $t8;

    // assume WellFormed($t8) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume $IsValid'bool'($t8);

    // $t9 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    havoc $t9;

    // assume WellFormed($t9) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume $IsValid'u8'($t9);

    // $t10 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    havoc $t10;

    // assume WellFormed($t10) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume $IsValid'u8'($t10);

    // $t11 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    havoc $t11;

    // assume WellFormed($t11) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume $IsValid'bool'($t11);

    // $t12 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    havoc $t12;

    // assume WellFormed($t12) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume $IsValid'u64'($t12);

    // $t13 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    havoc $t13;

    // assume WellFormed($t13) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume $IsValid'u64'($t13);

    // trace_local[index]($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume {:print "$info(): enter loop, variable(s) index havocked and reassigned"} true;
    assume {:print "$track_local(73,0,2):", $t2} $t2 == $t2;

    // assume Not(AbortFlag()) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:15+5
    assume !$abort_flag;

    // $t4 := vector::length<u8>($t0) on_abort goto L10 with $t14 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:23+17
    call $t4 := $1_vector_length'u8'($t0);
    if ($abort_flag) {
        assume {:print "$at(3,1075,1092)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(73,0):", $t14} $t14 == $t14;
        goto L10;
    }

    // $t5 := <($t2, $t4) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:21+1
    call $t5 := $Lt($t2, $t4);

    // if ($t5) goto L1 else goto L0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:9+299
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:28:9+299
L1:

    // label L2 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:29:32+1
    assume {:print "$at(3,1127,1128)"} true;
L2:

    // $t6 := vector::borrow<u8>($t0, $t2) on_abort goto L10 with $t14 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:29:17+23
    assume {:print "$at(3,1112,1135)"} true;
    call $t6 := $1_vector_borrow'u8'($t0, $t2);
    if ($abort_flag) {
        assume {:print "$at(3,1112,1135)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(73,0):", $t14} $t14 == $t14;
        goto L10;
    }

    // $t7 := vector::borrow<u8>($t1, $t2) on_abort goto L10 with $t14 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:29:44+23
    call $t7 := $1_vector_borrow'u8'($t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(3,1139,1162)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(73,0):", $t14} $t14 == $t14;
        goto L10;
    }

    // $t8 := >($t6, $t7) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:29:41+1
    call $t8 := $Gt($t6, $t7);

    // if ($t8) goto L4 else goto L3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:29:13+97
    if ($t8) { goto L4; } else { goto L3; }

    // label L4 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:30:17+8
    assume {:print "$at(3,1182,1190)"} true;
L4:

    // $t15 := 0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:30:24+1
    assume {:print "$at(3,1189,1190)"} true;
    $t15 := 0;
    assume $IsValid'u8'($t15);

    // trace_return[0]($t15) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:30:17+8
    assume {:print "$track_return(73,0,0):", $t15} $t15 == $t15;

    // $t16 := move($t15) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:30:17+8
    $t16 := $t15;

    // goto L9 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:30:17+8
    goto L9;

    // label L3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:32:32+1
    assume {:print "$at(3,1239,1240)"} true;
L3:

    // $t9 := vector::borrow<u8>($t0, $t2) on_abort goto L10 with $t14 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:32:17+23
    assume {:print "$at(3,1224,1247)"} true;
    call $t9 := $1_vector_borrow'u8'($t0, $t2);
    if ($abort_flag) {
        assume {:print "$at(3,1224,1247)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(73,0):", $t14} $t14 == $t14;
        goto L10;
    }

    // $t10 := vector::borrow<u8>($t1, $t2) on_abort goto L10 with $t14 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:32:44+23
    call $t10 := $1_vector_borrow'u8'($t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(3,1251,1274)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(73,0):", $t14} $t14 == $t14;
        goto L10;
    }

    // $t11 := <($t9, $t10) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:32:41+1
    call $t11 := $Lt($t9, $t10);

    // if ($t11) goto L6 else goto L5 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:32:13+97
    if ($t11) { goto L6; } else { goto L5; }

    // label L6 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:33:17+8
    assume {:print "$at(3,1294,1302)"} true;
L6:

    // $t17 := 1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:33:24+1
    assume {:print "$at(3,1301,1302)"} true;
    $t17 := 1;
    assume $IsValid'u8'($t17);

    // trace_return[0]($t17) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:33:17+8
    assume {:print "$track_return(73,0,0):", $t17} $t17 == $t17;

    // $t16 := move($t17) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:33:17+8
    $t16 := $t17;

    // goto L9 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:33:17+8
    goto L9;

    // label L5 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:35:21+5
    assume {:print "$at(3,1340,1345)"} true;
L5:

    // $t12 := 1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:35:28+1
    assume {:print "$at(3,1347,1348)"} true;
    $t12 := 1;
    assume $IsValid'u64'($t12);

    // $t13 := +($t2, $t12) on_abort goto L10 with $t14 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:35:27+1
    call $t13 := $AddU64($t2, $t12);
    if ($abort_flag) {
        assume {:print "$at(3,1346,1347)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(73,0):", $t14} $t14 == $t14;
        goto L10;
    }

    // trace_local[index]($t13) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:35:13+5
    assume {:print "$track_local(73,0,2):", $t13} $t13 == $t13;

    // goto L8 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:35:29+1
    goto L8;

    // label L0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:37:9+1
    assume {:print "$at(3,1371,1372)"} true;
L0:

    // $t18 := 1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:37:9+1
    assume {:print "$at(3,1371,1372)"} true;
    $t18 := 1;
    assume $IsValid'u8'($t18);

    // trace_return[0]($t18) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:37:9+1
    assume {:print "$track_return(73,0,0):", $t18} $t18 == $t18;

    // $t16 := move($t18) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:37:9+1
    $t16 := $t18;

    // goto L9 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:37:9+1
    goto L9;

    // label L8 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:37:9+1
    // Loop invariant checking block for the loop started with header: L7
L8:

    // stop() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:37:9+1
    assume {:print "$at(3,1371,1372)"} true;
    assume false;
    return;

    // label L9 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:38:5+1
    assume {:print "$at(3,1378,1379)"} true;
L9:

    // return $t16 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:38:5+1
    assume {:print "$at(3,1378,1379)"} true;
    $ret0 := $t16;
    return;

    // label L10 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:38:5+1
L10:

    // abort($t14) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\merkle_proof.move:38:5+1
    assume {:print "$at(3,1378,1379)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

}

// struct machineV0::Machine at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:27:5+653
datatype $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine($white_list: Table int (int), $public_list: Table int (int), $aptify_name: $1_string_String, $collection_name: $1_string_String, $collection_description: $1_string_String, $cover: $1_string_String, $max_supply: int, $royalty_payee_address: int, $royalty_numerator: int, $royalty_denominator: int, $presale_mint_time: int, $presale_mint_price: int, $public_mint_time: int, $public_mint_price: int, $paused: bool, $minted: int, $merkle_root: Vec (int), $update_event: $1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent')
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'_white_list(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_aptify, x: Table int (int)): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine(x, s->$public_list, s->$aptify_name, s->$collection_name, s->$collection_description, s->$cover, s->$max_supply, s->$royalty_payee_address, s->$royalty_numerator, s->$royalty_denominator, s->$presale_mint_time, s->$presale_mint_price, s->$public_mint_time, s->$public_mint_price, s->$paused, s->$minted, s->$merkle_root, s->$update_event)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'_public_list(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_aptify, x: Table int (int)): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine(s->$white_list, x, s->$aptify_name, s->$collection_name, s->$collection_description, s->$cover, s->$max_supply, s->$royalty_payee_address, s->$royalty_numerator, s->$royalty_denominator, s->$presale_mint_time, s->$presale_mint_price, s->$public_mint_time, s->$public_mint_price, s->$paused, s->$minted, s->$merkle_root, s->$update_event)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'_aptify_name(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_aptify, x: $1_string_String): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine(s->$white_list, s->$public_list, x, s->$collection_name, s->$collection_description, s->$cover, s->$max_supply, s->$royalty_payee_address, s->$royalty_numerator, s->$royalty_denominator, s->$presale_mint_time, s->$presale_mint_price, s->$public_mint_time, s->$public_mint_price, s->$paused, s->$minted, s->$merkle_root, s->$update_event)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'_collection_name(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_aptify, x: $1_string_String): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine(s->$white_list, s->$public_list, s->$aptify_name, x, s->$collection_description, s->$cover, s->$max_supply, s->$royalty_payee_address, s->$royalty_numerator, s->$royalty_denominator, s->$presale_mint_time, s->$presale_mint_price, s->$public_mint_time, s->$public_mint_price, s->$paused, s->$minted, s->$merkle_root, s->$update_event)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'_collection_description(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_aptify, x: $1_string_String): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine(s->$white_list, s->$public_list, s->$aptify_name, s->$collection_name, x, s->$cover, s->$max_supply, s->$royalty_payee_address, s->$royalty_numerator, s->$royalty_denominator, s->$presale_mint_time, s->$presale_mint_price, s->$public_mint_time, s->$public_mint_price, s->$paused, s->$minted, s->$merkle_root, s->$update_event)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'_cover(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_aptify, x: $1_string_String): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine(s->$white_list, s->$public_list, s->$aptify_name, s->$collection_name, s->$collection_description, x, s->$max_supply, s->$royalty_payee_address, s->$royalty_numerator, s->$royalty_denominator, s->$presale_mint_time, s->$presale_mint_price, s->$public_mint_time, s->$public_mint_price, s->$paused, s->$minted, s->$merkle_root, s->$update_event)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'_max_supply(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_aptify, x: int): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine(s->$white_list, s->$public_list, s->$aptify_name, s->$collection_name, s->$collection_description, s->$cover, x, s->$royalty_payee_address, s->$royalty_numerator, s->$royalty_denominator, s->$presale_mint_time, s->$presale_mint_price, s->$public_mint_time, s->$public_mint_price, s->$paused, s->$minted, s->$merkle_root, s->$update_event)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'_royalty_payee_address(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_aptify, x: int): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine(s->$white_list, s->$public_list, s->$aptify_name, s->$collection_name, s->$collection_description, s->$cover, s->$max_supply, x, s->$royalty_numerator, s->$royalty_denominator, s->$presale_mint_time, s->$presale_mint_price, s->$public_mint_time, s->$public_mint_price, s->$paused, s->$minted, s->$merkle_root, s->$update_event)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'_royalty_numerator(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_aptify, x: int): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine(s->$white_list, s->$public_list, s->$aptify_name, s->$collection_name, s->$collection_description, s->$cover, s->$max_supply, s->$royalty_payee_address, x, s->$royalty_denominator, s->$presale_mint_time, s->$presale_mint_price, s->$public_mint_time, s->$public_mint_price, s->$paused, s->$minted, s->$merkle_root, s->$update_event)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'_royalty_denominator(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_aptify, x: int): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine(s->$white_list, s->$public_list, s->$aptify_name, s->$collection_name, s->$collection_description, s->$cover, s->$max_supply, s->$royalty_payee_address, s->$royalty_numerator, x, s->$presale_mint_time, s->$presale_mint_price, s->$public_mint_time, s->$public_mint_price, s->$paused, s->$minted, s->$merkle_root, s->$update_event)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'_presale_mint_time(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_aptify, x: int): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine(s->$white_list, s->$public_list, s->$aptify_name, s->$collection_name, s->$collection_description, s->$cover, s->$max_supply, s->$royalty_payee_address, s->$royalty_numerator, s->$royalty_denominator, x, s->$presale_mint_price, s->$public_mint_time, s->$public_mint_price, s->$paused, s->$minted, s->$merkle_root, s->$update_event)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'_presale_mint_price(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_aptify, x: int): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine(s->$white_list, s->$public_list, s->$aptify_name, s->$collection_name, s->$collection_description, s->$cover, s->$max_supply, s->$royalty_payee_address, s->$royalty_numerator, s->$royalty_denominator, s->$presale_mint_time, x, s->$public_mint_time, s->$public_mint_price, s->$paused, s->$minted, s->$merkle_root, s->$update_event)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'_public_mint_time(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_aptify, x: int): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine(s->$white_list, s->$public_list, s->$aptify_name, s->$collection_name, s->$collection_description, s->$cover, s->$max_supply, s->$royalty_payee_address, s->$royalty_numerator, s->$royalty_denominator, s->$presale_mint_time, s->$presale_mint_price, x, s->$public_mint_price, s->$paused, s->$minted, s->$merkle_root, s->$update_event)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'_public_mint_price(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_aptify, x: int): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine(s->$white_list, s->$public_list, s->$aptify_name, s->$collection_name, s->$collection_description, s->$cover, s->$max_supply, s->$royalty_payee_address, s->$royalty_numerator, s->$royalty_denominator, s->$presale_mint_time, s->$presale_mint_price, s->$public_mint_time, x, s->$paused, s->$minted, s->$merkle_root, s->$update_event)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'_paused(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_aptify, x: bool): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine(s->$white_list, s->$public_list, s->$aptify_name, s->$collection_name, s->$collection_description, s->$cover, s->$max_supply, s->$royalty_payee_address, s->$royalty_numerator, s->$royalty_denominator, s->$presale_mint_time, s->$presale_mint_price, s->$public_mint_time, s->$public_mint_price, x, s->$minted, s->$merkle_root, s->$update_event)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'_minted(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_aptify, x: int): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine(s->$white_list, s->$public_list, s->$aptify_name, s->$collection_name, s->$collection_description, s->$cover, s->$max_supply, s->$royalty_payee_address, s->$royalty_numerator, s->$royalty_denominator, s->$presale_mint_time, s->$presale_mint_price, s->$public_mint_time, s->$public_mint_price, s->$paused, x, s->$merkle_root, s->$update_event)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'_merkle_root(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_aptify, x: Vec (int)): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine(s->$white_list, s->$public_list, s->$aptify_name, s->$collection_name, s->$collection_description, s->$cover, s->$max_supply, s->$royalty_payee_address, s->$royalty_numerator, s->$royalty_denominator, s->$presale_mint_time, s->$presale_mint_price, s->$public_mint_time, s->$public_mint_price, s->$paused, s->$minted, x, s->$update_event)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'_update_event(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_aptify, x: $1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent'): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine(s->$white_list, s->$public_list, s->$aptify_name, s->$collection_name, s->$collection_description, s->$cover, s->$max_supply, s->$royalty_payee_address, s->$royalty_numerator, s->$royalty_denominator, s->$presale_mint_time, s->$presale_mint_price, s->$public_mint_time, s->$public_mint_price, s->$paused, s->$minted, s->$merkle_root, x)
}
function $IsValid'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine): bool {
    $IsValid'$1_table_Table'address_u64''(s->$white_list)
      && $IsValid'$1_table_Table'address_u64''(s->$public_list)
      && $IsValid'$1_string_String'(s->$aptify_name)
      && $IsValid'$1_string_String'(s->$collection_name)
      && $IsValid'$1_string_String'(s->$collection_description)
      && $IsValid'$1_string_String'(s->$cover)
      && $IsValid'u64'(s->$max_supply)
      && $IsValid'address'(s->$royalty_payee_address)
      && $IsValid'u64'(s->$royalty_numerator)
      && $IsValid'u64'(s->$royalty_denominator)
      && $IsValid'u64'(s->$presale_mint_time)
      && $IsValid'u64'(s->$presale_mint_price)
      && $IsValid'u64'(s->$public_mint_time)
      && $IsValid'u64'(s->$public_mint_price)
      && $IsValid'bool'(s->$paused)
      && $IsValid'u64'(s->$minted)
      && $IsValid'vec'u8''(s->$merkle_root)
      && $IsValid'$1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent''(s->$update_event)
}
function {:inline} $IsEqual'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'(s1: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_aptify, s2: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine): bool {
    $IsEqual'$1_table_Table'address_u64''(s1->$white_list, s2->$white_list)
    && $IsEqual'$1_table_Table'address_u64''(s1->$public_list, s2->$public_list)
    && $IsEqual'$1_string_String'(s1->$aptify_name, s2->$aptify_name)
    && $IsEqual'$1_string_String'(s1->$collection_name, s2->$collection_name)
    && $IsEqual'$1_string_String'(s1->$collection_description, s2->$collection_description)
    && $IsEqual'$1_string_String'(s1->$cover, s2->$cover)
    && $IsEqual'u64'(s1->$max_supply, s2->$max_supply)
    && $IsEqual'address'(s1->$royalty_payee_address, s2->$royalty_payee_address)
    && $IsEqual'u64'(s1->$royalty_numerator, s2->$royalty_numerator)
    && $IsEqual'u64'(s1->$royalty_denominator, s2->$royalty_denominator)
    && $IsEqual'u64'(s1->$presale_mint_time, s2->$presale_mint_time)
    && $IsEqual'u64'(s1->$presale_mint_price, s2->$presale_mint_price)
    && $IsEqual'u64'(s1->$public_mint_time, s2->$public_mint_time)
    && $IsEqual'u64'(s1->$public_mint_price, s2->$public_mint_price)
    && $IsEqual'bool'(s1->$paused, s2->$paused)
    && $IsEqual'u64'(s1->$minted, s2->$minted)
    && $IsEqual'vec'u8''(s1->$merkle_root, s2->$merkle_root)
    && $IsEqual'$1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent''(s1->$update_event, s2->$update_event)}
var $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine_$memory: $Memory $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine;

// struct machineV0::ResourceInfo at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:57:5+111
datatype $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo($source: int, $resource_cap: $1_account_SignerCapability)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo'_source(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo, x: int): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo(x, s->$resource_cap)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo'_resource_cap(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo, x: $1_account_SignerCapability): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo(s->$source, x)
}
function $IsValid'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo'(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo): bool {
    $IsValid'address'(s->$source)
      && $IsValid'$1_account_SignerCapability'(s->$resource_cap)
}
function {:inline} $IsEqual'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo'(s1: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo, s2: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo): bool {
    s1 == s2
}
var $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo_$memory: $Memory $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo;

// struct machineV0::UpdateMachineEvent at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:48:5+250
datatype $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent($royalty_numerator: int, $royalty_denominator: int, $presale_mint_time: int, $presale_mint_price: int, $public_mint_time: int, $public_mint_price: int)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent'_royalty_numerator(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent, x: int): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent(x, s->$royalty_denominator, s->$presale_mint_time, s->$presale_mint_price, s->$public_mint_time, s->$public_mint_price)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent'_royalty_denominator(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent, x: int): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent(s->$royalty_numerator, x, s->$presale_mint_time, s->$presale_mint_price, s->$public_mint_time, s->$public_mint_price)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent'_presale_mint_time(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent, x: int): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent(s->$royalty_numerator, s->$royalty_denominator, x, s->$presale_mint_price, s->$public_mint_time, s->$public_mint_price)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent'_presale_mint_price(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent, x: int): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent(s->$royalty_numerator, s->$royalty_denominator, s->$presale_mint_time, x, s->$public_mint_time, s->$public_mint_price)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent'_public_mint_time(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent, x: int): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent(s->$royalty_numerator, s->$royalty_denominator, s->$presale_mint_time, s->$presale_mint_price, x, s->$public_mint_price)
}
function {:inline} $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent'_public_mint_price(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent, x: int): $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent {
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent(s->$royalty_numerator, s->$royalty_denominator, s->$presale_mint_time, s->$presale_mint_price, s->$public_mint_time, x)
}
function $IsValid'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent'(s: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent): bool {
    $IsValid'u64'(s->$royalty_numerator)
      && $IsValid'u64'(s->$royalty_denominator)
      && $IsValid'u64'(s->$presale_mint_time)
      && $IsValid'u64'(s->$presale_mint_price)
      && $IsValid'u64'(s->$public_mint_time)
      && $IsValid'u64'(s->$public_mint_price)
}
function {:inline} $IsEqual'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent'(s1: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent, s2: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent): bool {
    s1 == s2
}

// fun machineV0::mint [verification] at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+2298
procedure {:timeLimit 40} $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_mint$verify(_$t0: $signer, _$t1: int, _$t2: $1_string_String, _$t3: int, _$t4: int) returns ()
{
    // declare local variables
    var $t5: int;
    var $t6: int;
    var $t7: $Mutation ($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine);
    var $t8: $1_object_Object'$4_token_Token';
    var $t9: int;
    var $t10: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo;
    var $t11: $signer;
    var $t12: $4_royalty_Royalty;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: $1_object_ConstructorRef;
    var $t17: $1_string_String;
    var $t18: int;
    var $t19: int;
    var $t20: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo;
    var $t21: $1_account_SignerCapability;
    var $t22: int;
    var $t23: $signer;
    var $t24: $Mutation ($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine);
    var $t25: int;
    var $t26: int;
    var $t27: int;
    var $t28: $Mutation ($1_string_String);
    var $t29: Vec (int);
    var $t30: $1_string_String;
    var $t31: $Mutation ($1_string_String);
    var $t32: int;
    var $t33: int;
    var $t34: int;
    var $t35: $1_string_String;
    var $t36: int;
    var $t37: int;
    var $t38: int;
    var $t39: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t40: int;
    var $t41: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t42: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t43: int;
    var $t44: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t45: int;
    var $t46: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t47: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t48: $4_royalty_Royalty;
    var $t49: $1_string_String;
    var $t50: $1_string_String;
    var $t51: $1_string_String;
    var $t52: $1_option_Option'$4_royalty_Royalty';
    var $t53: $1_object_ConstructorRef;
    var $t54: $1_object_Object'$4_token_Token';
    var $t55: $signer;
    var $t56: int;
    var $t57: int;
    var $t58: int;
    var $t59: int;
    var $t60: int;
    var $t61: $Mutation (int);
    var $t0: $signer;
    var $t1: int;
    var $t2: $1_string_String;
    var $t3: int;
    var $t4: int;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$4_token_Token'': $1_object_Object'$4_token_Token';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$4_royalty_Royalty': $4_royalty_Royalty;
    var $temp_0'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine': $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine;
    var $temp_0'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo': $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume {:print "$at(2,4599,4600)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume $IsValid'address'($t1);

    // assume WellFormed($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume $IsValid'$1_string_String'($t2);

    // assume WellFormed($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume $IsValid'u64'($t3);

    // assume WellFormed($t4) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume $IsValid'u64'($t4);

    // assume forall $rsc: features::Features: ResourceDomain<features::Features>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: coin::CoinInfo<aptos_coin::AptosCoin>: ResourceDomain<coin::CoinInfo<aptos_coin::AptosCoin>>(): And(WellFormed($rsc), And(Le(Len<optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: optional_aggregator::OptionalAggregator: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($rsc) && ((LenVec($rsc->$supply->$vec) <= 1) && (var $range_1 := $rsc->$supply->$vec; (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($elem->$integer)) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) <==> $1_option_$is_none'$1_aggregator_Aggregator'($elem->$aggregator))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($elem->$integer) ==> ($1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$value <= $1_option_$borrow'$1_optional_aggregator_Integer'($elem->$integer)->$limit))) && ($1_option_$is_some'$1_aggregator_Aggregator'($elem->$aggregator) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator)) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($elem->$aggregator))))) && (LenVec($elem->$aggregator->$vec) <= 1)) && (LenVec($elem->$integer->$vec) <= 1)))))))))));

    // assume forall $rsc: coin::CoinStore<aptos_coin::AptosCoin>: ResourceDomain<coin::CoinStore<aptos_coin::AptosCoin>>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($rsc))));

    // assume forall $rsc: coin::Ghost$supply<aptos_coin::AptosCoin>: ResourceDomain<coin::Ghost$supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$supply<aptos_coin::AptosCoin>>(0x0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume $ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>: ResourceDomain<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(0x0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: object::ObjectCore: ResourceDomain<object::ObjectCore>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: royalty::Royalty: ResourceDomain<royalty::Royalty>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_royalty_Royalty_$memory, $a_0)}(var $rsc := $ResourceValue($4_royalty_Royalty_$memory, $a_0);
    ($IsValid'$4_royalty_Royalty'($rsc))));

    // assume forall $rsc: collection::ConcurrentSupply: ResourceDomain<collection::ConcurrentSupply>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$4_collection_ConcurrentSupply'($rsc))));

    // assume forall $rsc: collection::FixedSupply: ResourceDomain<collection::FixedSupply>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_FixedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_FixedSupply_$memory, $a_0);
    ($IsValid'$4_collection_FixedSupply'($rsc))));

    // assume forall $rsc: collection::UnlimitedSupply: ResourceDomain<collection::UnlimitedSupply>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_UnlimitedSupply_$memory, $a_0);
    ($IsValid'$4_collection_UnlimitedSupply'($rsc))));

    // assume forall $rsc: token::ConcurrentTokenIdentifiers: ResourceDomain<token::ConcurrentTokenIdentifiers>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_token_ConcurrentTokenIdentifiers_$memory, $a_0)}(var $rsc := $ResourceValue($4_token_ConcurrentTokenIdentifiers_$memory, $a_0);
    ($IsValid'$4_token_ConcurrentTokenIdentifiers'($rsc))));

    // assume forall $rsc: token::Token: ResourceDomain<token::Token>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_token_Token_$memory, $a_0)}(var $rsc := $ResourceValue($4_token_Token_$memory, $a_0);
    ($IsValid'$4_token_Token'($rsc))));

    // assume forall $rsc: machineV0::aptify: ResourceDomain<machineV0::Machine>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume (forall $a_0: int :: {$ResourceValue($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine_$memory, $a_0)}(var $rsc := $ResourceValue($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine_$memory, $a_0);
    ($IsValid'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'($rsc))));

    // assume forall $rsc: machineV0::ResourceInfo: ResourceDomain<machineV0::ResourceInfo>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume (forall $a_0: int :: {$ResourceValue($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo_$memory, $a_0)}(var $rsc := $ResourceValue($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo_$memory, $a_0);
    ($IsValid'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo'($rsc))));

    // trace_local[receiver]($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume {:print "$track_local(74,1,0):", $t0} $t0 == $t0;

    // trace_local[machine]($t1) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume {:print "$track_local(74,1,1):", $t1} $t1 == $t1;

    // trace_local[uri]($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume {:print "$track_local(74,1,2):", $t2} $t2 == $t2;

    // trace_local[mint_price]($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume {:print "$track_local(74,1,3):", $t3} $t3 == $t3;

    // trace_local[mint_limit]($t4) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:142:5+1
    assume {:print "$track_local(74,1,4):", $t4} $t4 == $t4;

    // $t18 := signer::address_of($t0) on_abort goto L2 with $t19 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:149:29+28
    assume {:print "$at(2,4819,4847)"} true;
    call $t18 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,4819,4847)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(74,1):", $t19} $t19 == $t19;
        goto L2;
    }

    // trace_local[receiver_addr]($t18) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:149:13+13
    assume {:print "$track_local(74,1,9):", $t18} $t18 == $t18;

    // $t20 := get_global<machineV0::ResourceInfo>($t1) on_abort goto L2 with $t19 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:150:29+13
    assume {:print "$at(2,4878,4891)"} true;
    if (!$ResourceExists($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t20 := $ResourceValue($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(2,4878,4891)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(74,1):", $t19} $t19 == $t19;
        goto L2;
    }

    // trace_local[resource_data]($t20) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:150:13+13
    assume {:print "$track_local(74,1,10):", $t20} $t20 == $t20;

    // $t21 := get_field<machineV0::ResourceInfo>.resource_cap($t20) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:151:79+27
    assume {:print "$at(2,4995,5022)"} true;
    $t21 := $t20->$resource_cap;

    // assume Identical($t22, select account::SignerCapability.account($t21)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:518:9+30
    assume {:print "$at(83,24860,24890)"} true;
    assume ($t22 == $t21->$account);

    // $t23 := account::create_signer_with_capability($t21) on_abort goto L2 with $t19 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:151:40+67
    assume {:print "$at(2,4956,5023)"} true;
    call $t23 := $1_account_create_signer_with_capability($t21);
    if ($abort_flag) {
        assume {:print "$at(2,4956,5023)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(74,1):", $t19} $t19 == $t19;
        goto L2;
    }

    // trace_local[resource_signer_from_cap]($t23) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:151:13+24
    assume {:print "$track_local(74,1,11):", $t23} $t23 == $t23;

    // $t24 := borrow_global<machineV0::Machine>($t1) on_abort goto L2 with $t19 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:152:28+17
    assume {:print "$at(2,5053,5070)"} true;
    if (!$ResourceExists($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t24 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,5053,5070)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(74,1):", $t19} $t19 == $t19;
        goto L2;
    }

    // trace_local[machine_data]($t24) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:152:13+12
    $temp_0'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine' := $Dereference($t24);
    assume {:print "$track_local(74,1,7):", $temp_0'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'} $temp_0'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine' == $temp_0'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine';

    // $t17 := get_field<machineV0::Machine>.collection_name($t24) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:153:26+28
    assume {:print "$at(2,5116,5144)"} true;
    $t17 := $Dereference($t24)->$collection_name;

    // trace_local[token_name]($t17) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:153:13+10
    assume {:print "$track_local(74,1,17):", $t17} $t17 == $t17;

    // $t25 := get_field<machineV0::Machine>.royalty_payee_address($t24) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:154:37+34
    assume {:print "$at(2,5183,5217)"} true;
    $t25 := $Dereference($t24)->$royalty_payee_address;

    // trace_local[royalty_payee_address]($t25) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:154:13+21
    assume {:print "$track_local(74,1,15):", $t25} $t25 == $t25;

    // $t26 := get_field<machineV0::Machine>.royalty_numerator($t24) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:155:33+30
    assume {:print "$at(2,5252,5282)"} true;
    $t26 := $Dereference($t24)->$royalty_numerator;

    // trace_local[royalty_numerator]($t26) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:155:13+17
    assume {:print "$track_local(74,1,14):", $t26} $t26 == $t26;

    // $t27 := get_field<machineV0::Machine>.royalty_denominator($t24) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:156:35+32
    assume {:print "$at(2,5319,5351)"} true;
    $t27 := $Dereference($t24)->$royalty_denominator;

    // trace_local[royalty_denominator]($t27) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:156:13+19
    assume {:print "$track_local(74,1,13):", $t27} $t27 == $t27;

    // $t28 := borrow_local($t17) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:157:24+15
    assume {:print "$at(2,5377,5392)"} true;
    $t28 := $Mutation($Local(17), EmptyVec(), $t17);

    // $t29 := [32, 35] at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:157:53+5
    $t29 := MakeVec2(32, 35);
    assume $IsValid'vec'u8''($t29);

    // $t30 := string::utf8($t29) on_abort goto L2 with $t19 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:157:40+19
    call $t30 := $1_string_utf8($t29);
    if ($abort_flag) {
        assume {:print "$at(2,5393,5412)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(74,1):", $t19} $t19 == $t19;
        goto L2;
    }

    // string::append($t28, $t30) on_abort goto L2 with $t19 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:157:9+51
    call $t28 := $1_string_append($t28, $t30);
    if ($abort_flag) {
        assume {:print "$at(2,5362,5413)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(74,1):", $t19} $t19 == $t19;
        goto L2;
    }

    // write_back[LocalRoot($t17)@]($t28) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:157:9+51
    $t17 := $Dereference($t28);

    // trace_local[token_name]($t17) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:157:9+51
    assume {:print "$track_local(74,1,17):", $t17} $t17 == $t17;

    // $t31 := borrow_local($t17) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:158:24+15
    assume {:print "$at(2,5439,5454)"} true;
    $t31 := $Mutation($Local(17), EmptyVec(), $t17);

    // $t32 := get_field<machineV0::Machine>.minted($t24) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:158:48+19
    $t32 := $Dereference($t24)->$minted;

    // $t33 := 1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:158:68+1
    $t33 := 1;
    assume $IsValid'u64'($t33);

    // $t34 := +($t32, $t33) on_abort goto L2 with $t19 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:158:67+1
    call $t34 := $AddU64($t32, $t33);
    if ($abort_flag) {
        assume {:print "$at(2,5482,5483)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(74,1):", $t19} $t19 == $t19;
        goto L2;
    }

    // $t35 := machineV0::num_str($t34) on_abort goto L2 with $t19 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:158:40+30
    call $t35 := $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_num_str($t34);
    if ($abort_flag) {
        assume {:print "$at(2,5455,5485)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(74,1):", $t19} $t19 == $t19;
        goto L2;
    }

    // string::append($t31, $t35) on_abort goto L2 with $t19 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:158:9+62
    call $t31 := $1_string_append($t31, $t35);
    if ($abort_flag) {
        assume {:print "$at(2,5424,5486)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(74,1):", $t19} $t19 == $t19;
        goto L2;
    }

    // write_back[LocalRoot($t17)@]($t31) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:158:9+62
    $t17 := $Dereference($t31);

    // trace_local[token_name]($t17) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:158:9+62
    assume {:print "$track_local(74,1,17):", $t17} $t17 == $t17;

    // $t36 := 1000000 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:159:26+7
    assume {:print "$at(2,5514,5521)"} true;
    $t36 := 1000000;
    assume $IsValid'u64'($t36);

    // trace_local[enigma_fee]($t36) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:159:13+10
    assume {:print "$track_local(74,1,6):", $t36} $t36 == $t36;

    // $t37 := -($t3, $t36) on_abort goto L2 with $t19 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:160:49+1
    assume {:print "$at(2,5572,5573)"} true;
    call $t37 := $Sub($t3, $t36);
    if ($abort_flag) {
        assume {:print "$at(2,5572,5573)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(74,1):", $t19} $t19 == $t19;
        goto L2;
    }

    // trace_local[collection_owner_price]($t37) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:160:13+22
    assume {:print "$track_local(74,1,5):", $t37} $t37 == $t37;

    // $t38 := 0x4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:161:45+13
    assume {:print "$at(2,5631,5644)"} true;
    $t38 := 36098152786677996066707556699179940597557482147303469374420066976810931406980;
    assume $IsValid'address'($t38);

    // assume Identical($t39, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:32:9+99
    assume {:print "$at(107,1664,1763)"} true;
    assume ($t39 == $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply);

    // assume Identical($t40, signer::$address_of($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:375:9+49
    assume {:print "$at(107,16245,16294)"} true;
    assume ($t40 == $1_signer_$address_of($t0));

    // assume Identical($t41, global<coin::CoinStore<aptos_coin::AptosCoin>>($t40)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:376:9+69
    assume {:print "$at(107,16303,16372)"} true;
    assume ($t41 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t40));

    // assume Identical($t42, global<coin::CoinStore<aptos_coin::AptosCoin>>($t38)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:378:9+52
    assume {:print "$at(107,16469,16521)"} true;
    assume ($t42 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t38));

    // coin::transfer<aptos_coin::AptosCoin>($t0, $t38, $t36) on_abort goto L2 with $t19 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:161:9+62
    assume {:print "$at(2,5595,5657)"} true;
    call $1_coin_transfer'$1_aptos_coin_AptosCoin'($t0, $t38, $t36);
    if ($abort_flag) {
        assume {:print "$at(2,5595,5657)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(74,1):", $t19} $t19 == $t19;
        goto L2;
    }

    // $t43 := get_field<machineV0::ResourceInfo>.source($t20) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:162:45+20
    assume {:print "$at(2,5704,5724)"} true;
    $t43 := $t20->$source;

    // assume Identical($t44, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:32:9+99
    assume {:print "$at(107,1664,1763)"} true;
    assume ($t44 == $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))->$account_address)->$supply);

    // assume Identical($t45, signer::$address_of($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:375:9+49
    assume {:print "$at(107,16245,16294)"} true;
    assume ($t45 == $1_signer_$address_of($t0));

    // assume Identical($t46, global<coin::CoinStore<aptos_coin::AptosCoin>>($t45)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:376:9+69
    assume {:print "$at(107,16303,16372)"} true;
    assume ($t46 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t45));

    // assume Identical($t47, global<coin::CoinStore<aptos_coin::AptosCoin>>($t43)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\coin.spec.move:378:9+52
    assume {:print "$at(107,16469,16521)"} true;
    assume ($t47 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t43));

    // coin::transfer<aptos_coin::AptosCoin>($t0, $t43, $t37) on_abort goto L2 with $t19 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:162:9+81
    assume {:print "$at(2,5668,5749)"} true;
    call $1_coin_transfer'$1_aptos_coin_AptosCoin'($t0, $t43, $t37);
    if ($abort_flag) {
        assume {:print "$at(2,5668,5749)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(74,1):", $t19} $t19 == $t19;
        goto L2;
    }

    // $t48 := royalty::create($t26, $t27, $t25) on_abort goto L2 with $t19 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:175:23+78
    assume {:print "$at(2,6130,6208)"} true;
    call $t48 := $4_royalty_create($t26, $t27, $t25);
    if ($abort_flag) {
        assume {:print "$at(2,6130,6208)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(74,1):", $t19} $t19 == $t19;
        goto L2;
    }

    // trace_local[royalty]($t48) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:175:13+7
    assume {:print "$track_local(74,1,12):", $t48} $t48 == $t48;

    // $t49 := get_field<machineV0::Machine>.collection_name($t24) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:180:13+28
    assume {:print "$at(2,6358,6386)"} true;
    $t49 := $Dereference($t24)->$collection_name;

    // $t50 := get_field<machineV0::Machine>.collection_description($t24) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:181:13+35
    assume {:print "$at(2,6401,6436)"} true;
    $t50 := $Dereference($t24)->$collection_description;

    // $t51 := move($t17) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:182:13+10
    assume {:print "$at(2,6451,6461)"} true;
    $t51 := $t17;

    // $t52 := opaque begin: option::some<royalty::Royalty>($t48) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:183:13+21
    assume {:print "$at(2,6476,6497)"} true;

    // assume And(WellFormed($t52), Le(Len<royalty::Royalty>(select option::Option.vec($t52)), 1)) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:183:13+21
    assume ($IsValid'$1_option_Option'$4_royalty_Royalty''($t52) && (LenVec($t52->$vec) <= 1));

    // assume Eq<option::Option<royalty::Royalty>>($t52, option::spec_some<royalty::Royalty>($t48)) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:183:13+21
    assume $IsEqual'$1_option_Option'$4_royalty_Royalty''($t52, $1_option_spec_some'$4_royalty_Royalty'($t48));

    // $t52 := opaque end: option::some<royalty::Royalty>($t48) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:183:13+21

    // $t53 := token::create_named_token($t23, $t49, $t50, $t51, $t52, $t2) on_abort goto L2 with $t19 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:178:37+248
    assume {:print "$at(2,6278,6526)"} true;
    call $t53 := $4_token_create_named_token($t23, $t49, $t50, $t51, $t52, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,6278,6526)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(74,1):", $t19} $t19 == $t19;
        goto L2;
    }

    // trace_local[token_constructor_ref]($t53) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:178:13+21
    assume {:print "$track_local(74,1,16):", $t53} $t53 == $t53;

    // $t54 := object::object_from_constructor_ref<token::Token>($t53) on_abort goto L2 with $t19 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:186:19+66
    assume {:print "$at(2,6547,6613)"} true;
    call $t54 := $1_object_object_from_constructor_ref'$4_token_Token'($t53);
    if ($abort_flag) {
        assume {:print "$at(2,6547,6613)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(74,1):", $t19} $t19 == $t19;
        goto L2;
    }

    // trace_local[obj]($t54) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:186:13+3
    assume {:print "$track_local(74,1,8):", $t54} $t54 == $t54;

    // $t55 := object::generate_signer($t53) on_abort goto L2 with $t19 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:188:26+47
    assume {:print "$at(2,6705,6752)"} true;
    call $t55 := $1_object_generate_signer($t53);
    if ($abort_flag) {
        assume {:print "$at(2,6705,6752)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(74,1):", $t19} $t19 == $t19;
        goto L2;
    }

    // destroy($t55) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:188:13+10

    // assume Identical($t56, signer::$address_of($t23)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:371:9+46
    assume {:print "$at(136,13982,14028)"} true;
    assume ($t56 == $1_signer_$address_of($t23));

    // assume Identical($t57, select object::Object.inner($t54)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\object.spec.move:372:9+34
    assume {:print "$at(136,14037,14071)"} true;
    assume ($t57 == $t54->$inner);

    // object::transfer<token::Token>($t23, $t54, $t18) on_abort goto L2 with $t19 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:189:9+61
    assume {:print "$at(2,6766,6827)"} true;
    call $1_object_transfer'$4_token_Token'($t23, $t54, $t18);
    if ($abort_flag) {
        assume {:print "$at(2,6766,6827)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(74,1):", $t19} $t19 == $t19;
        goto L2;
    }

    // $t58 := get_field<machineV0::Machine>.minted($t24) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:190:29+19
    assume {:print "$at(2,6858,6877)"} true;
    $t58 := $Dereference($t24)->$minted;

    // $t59 := 1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:190:49+1
    $t59 := 1;
    assume $IsValid'u64'($t59);

    // $t60 := +($t58, $t59) on_abort goto L2 with $t19 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:190:48+1
    call $t60 := $AddU64($t58, $t59);
    if ($abort_flag) {
        assume {:print "$at(2,6877,6878)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(74,1):", $t19} $t19 == $t19;
        goto L2;
    }

    // $t61 := borrow_field<machineV0::Machine>.minted($t24) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:190:9+19
    $t61 := $ChildMutation($t24, 15, $Dereference($t24)->$minted);

    // write_ref($t61, $t60) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:190:9+41
    $t61 := $UpdateMutation($t61, $t60);

    // write_back[Reference($t24).minted (u64)]($t61) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:190:9+41
    $t24 := $UpdateMutation($t24, $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'_minted($Dereference($t24), $Dereference($t61)));

    // write_back[machineV0::Machine@]($t24) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:190:9+41
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine_$memory := $ResourceUpdate($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine_$memory, $GlobalLocationAddress($t24),
        $Dereference($t24));

    // label L1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:192:5+1
    assume {:print "$at(2,6896,6897)"} true;
L1:

    // return () at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:192:5+1
    assume {:print "$at(2,6896,6897)"} true;
    return;

    // label L2 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:192:5+1
L2:

    // abort($t19) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:192:5+1
    assume {:print "$at(2,6896,6897)"} true;
    $abort_code := $t19;
    $abort_flag := true;
    return;

}

// fun machineV0::create_machine [verification] at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+2737
procedure {:timeLimit 40} $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_create_machine$verify(_$t0: $signer, _$t1: $1_string_String, _$t2: $1_string_String, _$t3: $1_string_String, _$t4: $1_string_String, _$t5: int, _$t6: int, _$t7: int, _$t8: int, _$t9: int, _$t10: int, _$t11: int, _$t12: int, _$t13: Vec (int)) returns ()
{
    // declare local variables
    var $t14: $1_account_SignerCapability;
    var $t15: int;
    var $t16: $signer;
    var $t17: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine;
    var $t18: $1_account_SignerCapability;
    var $t19: $signer;
    var $t20: int;
    var $t21: int;
    var $t22: $1_account_Account;
    var $t23: Vec (int);
    var $t24: $signer;
    var $t25: $1_account_SignerCapability;
    var $t26: int;
    var $t27: int;
    var $t28: $signer;
    var $t29: int;
    var $t30: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo;
    var $t31: Table int (int);
    var $t32: Table int (int);
    var $t33: bool;
    var $t34: int;
    var $t35: Vec (int);
    var $t36: int;
    var $t37: $1_account_Account;
    var $t38: $1_event_EventHandle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent';
    var $t39: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine;
    var $t40: bool;
    var $t41: bool;
    var $t42: bool;
    var $t43: bool;
    var $t44: bool;
    var $t45: bool;
    var $t46: bool;
    var $t47: bool;
    var $t48: bool;
    var $t49: $1_object_Object'$4_aptos_token_AptosCollection';
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: $1_string_String;
    var $t3: $1_string_String;
    var $t4: $1_string_String;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: Vec (int);
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine': $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;
    $t6 := _$t6;
    $t7 := _$t7;
    $t8 := _$t8;
    $t9 := _$t9;
    $t10 := _$t10;
    $t11 := _$t11;
    $t12 := _$t12;
    $t13 := _$t13;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume {:print "$at(2,1852,1853)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume $IsValid'$1_string_String'($t1);

    // assume WellFormed($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume $IsValid'$1_string_String'($t2);

    // assume WellFormed($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume $IsValid'$1_string_String'($t3);

    // assume WellFormed($t4) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume $IsValid'$1_string_String'($t4);

    // assume WellFormed($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume $IsValid'u64'($t5);

    // assume WellFormed($t6) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume $IsValid'address'($t6);

    // assume WellFormed($t7) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume $IsValid'u64'($t7);

    // assume WellFormed($t8) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume $IsValid'u64'($t8);

    // assume WellFormed($t9) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume $IsValid'u64'($t9);

    // assume WellFormed($t10) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume $IsValid'u64'($t10);

    // assume WellFormed($t11) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume $IsValid'u64'($t11);

    // assume WellFormed($t12) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume $IsValid'u64'($t12);

    // assume WellFormed($t13) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume $IsValid'vec'u8''($t13);

    // assume forall $rsc: features::Features: ResourceDomain<features::Features>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: account::Account: ResourceDomain<account::Account>(): And(WellFormed($rsc), And(Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.rotation_capability_offer($rsc)))), 1), Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($rsc)))), 1))) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_account_Account_$memory, $a_0)}(var $rsc := $ResourceValue($1_account_Account_$memory, $a_0);
    (($IsValid'$1_account_Account'($rsc) && ((LenVec($rsc->$rotation_capability_offer->$for->$vec) <= 1) && (LenVec($rsc->$signer_capability_offer->$for->$vec) <= 1))))));

    // assume forall $rsc: object::ObjectCore: ResourceDomain<object::ObjectCore>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: royalty::Royalty: ResourceDomain<royalty::Royalty>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_royalty_Royalty_$memory, $a_0)}(var $rsc := $ResourceValue($4_royalty_Royalty_$memory, $a_0);
    ($IsValid'$4_royalty_Royalty'($rsc))));

    // assume forall $rsc: collection::ConcurrentSupply: ResourceDomain<collection::ConcurrentSupply>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$4_collection_ConcurrentSupply'($rsc))));

    // assume forall $rsc: collection::Collection: ResourceDomain<collection::Collection>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_Collection_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_Collection_$memory, $a_0);
    ($IsValid'$4_collection_Collection'($rsc))));

    // assume forall $rsc: collection::FixedSupply: ResourceDomain<collection::FixedSupply>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_collection_FixedSupply_$memory, $a_0)}(var $rsc := $ResourceValue($4_collection_FixedSupply_$memory, $a_0);
    ($IsValid'$4_collection_FixedSupply'($rsc))));

    // assume forall $rsc: aptos_token::AptosCollection: ResourceDomain<aptos_token::AptosCollection>(): And(WellFormed($rsc), And(Le(Len<collection::MutatorRef>(select option::Option.vec(select aptos_token::AptosCollection.mutator_ref($rsc))), 1), Le(Len<royalty::MutatorRef>(select option::Option.vec(select aptos_token::AptosCollection.royalty_mutator_ref($rsc))), 1))) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume (forall $a_0: int :: {$ResourceValue($4_aptos_token_AptosCollection_$memory, $a_0)}(var $rsc := $ResourceValue($4_aptos_token_AptosCollection_$memory, $a_0);
    (($IsValid'$4_aptos_token_AptosCollection'($rsc) && ((LenVec($rsc->$mutator_ref->$vec) <= 1) && (LenVec($rsc->$royalty_mutator_ref->$vec) <= 1))))));

    // assume forall $rsc: machineV0::aptify: ResourceDomain<machineV0::Machine>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume (forall $a_0: int :: {$ResourceValue($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine_$memory, $a_0)}(var $rsc := $ResourceValue($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine_$memory, $a_0);
    ($IsValid'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'($rsc))));

    // assume forall $rsc: machineV0::ResourceInfo: ResourceDomain<machineV0::ResourceInfo>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume (forall $a_0: int :: {$ResourceValue($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo_$memory, $a_0)}(var $rsc := $ResourceValue($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo_$memory, $a_0);
    ($IsValid'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo'($rsc))));

    // trace_local[account]($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume {:print "$track_local(74,0,0):", $t0} $t0 == $t0;

    // trace_local[aptify_name]($t1) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume {:print "$track_local(74,0,1):", $t1} $t1 == $t1;

    // trace_local[collection_name]($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume {:print "$track_local(74,0,2):", $t2} $t2 == $t2;

    // trace_local[collection_description]($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume {:print "$track_local(74,0,3):", $t3} $t3 == $t3;

    // trace_local[cover]($t4) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume {:print "$track_local(74,0,4):", $t4} $t4 == $t4;

    // trace_local[max_supply]($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume {:print "$track_local(74,0,5):", $t5} $t5 == $t5;

    // trace_local[royalty_payee_address]($t6) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume {:print "$track_local(74,0,6):", $t6} $t6 == $t6;

    // trace_local[royalty_numerator]($t7) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume {:print "$track_local(74,0,7):", $t7} $t7 == $t7;

    // trace_local[royalty_denominator]($t8) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume {:print "$track_local(74,0,8):", $t8} $t8 == $t8;

    // trace_local[presale_mint_time]($t9) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume {:print "$track_local(74,0,9):", $t9} $t9 == $t9;

    // trace_local[presale_mint_price]($t10) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume {:print "$track_local(74,0,10):", $t10} $t10 == $t10;

    // trace_local[public_mint_time]($t11) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume {:print "$track_local(74,0,11):", $t11} $t11 == $t11;

    // trace_local[public_mint_price]($t12) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume {:print "$track_local(74,0,12):", $t12} $t12 == $t12;

    // trace_local[seeds]($t13) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:62:5+1
    assume {:print "$track_local(74,0,13):", $t13} $t13 == $t13;

    // assume Identical($t20, signer::$address_of($t0)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:450:9+45
    assume {:print "$at(83,22000,22045)"} true;
    assume ($t20 == $1_signer_$address_of($t0));

    // assume Identical($t21, account::spec_create_resource_address($t20, $t13)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:451:9+68
    assume {:print "$at(83,22054,22122)"} true;
    assume ($t21 == $1_account_spec_create_resource_address($t20, $t13));

    // assume Identical($t22, global<account::Account>($t21)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:524:9+45
    assume {:print "$at(83,25038,25083)"} true;
    assume ($t22 == $ResourceValue($1_account_Account_$memory, $t21));

    // assume Identical($t23, bcs::$to_bytes<address>($t21)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:54:9+45
    assume {:print "$at(83,2155,2200)"} true;
    assume ($t23 == $1_bcs_$to_bytes'address'($t21));

    // ($t24, $t25) := account::create_resource_account($t0, $t13) on_abort goto L2 with $t26 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:78:45+48
    assume {:print "$at(2,2392,2440)"} true;
    call $t24,$t25 := $1_account_create_resource_account($t0, $t13);
    if ($abort_flag) {
        assume {:print "$at(2,2392,2440)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(74,0):", $t26} $t26 == $t26;
        goto L2;
    }

    // trace_local[resource_cap]($t25) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:78:29+12
    assume {:print "$track_local(74,0,18):", $t25} $t25 == $t25;

    // destroy($t24) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:78:18+9

    // assume Identical($t27, select account::SignerCapability.account($t25)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:518:9+30
    assume {:print "$at(83,24860,24890)"} true;
    assume ($t27 == $t25->$account);

    // $t28 := account::create_signer_with_capability($t25) on_abort goto L2 with $t26 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:79:44+53
    assume {:print "$at(2,2486,2539)"} true;
    call $t28 := $1_account_create_signer_with_capability($t25);
    if ($abort_flag) {
        assume {:print "$at(2,2486,2539)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(74,0):", $t26} $t26 == $t26;
        goto L2;
    }

    // trace_local[resource_signer_from_cap]($t28) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:79:17+24
    assume {:print "$track_local(74,0,19):", $t28} $t28 == $t28;

    // $t29 := signer::address_of($t0) on_abort goto L2 with $t26 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:80:97+27
    assume {:print "$at(2,2638,2665)"} true;
    call $t29 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,2638,2665)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(74,0):", $t26} $t26 == $t26;
        goto L2;
    }

    // $t30 := pack machineV0::ResourceInfo($t29, $t25) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:80:48+77
    $t30 := $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo($t29, $t25);

    // move_to<machineV0::ResourceInfo>($t30, $t28) on_abort goto L2 with $t26 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:80:13+7
    if ($ResourceExists($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo_$memory, $t28->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo_$memory := $ResourceUpdate($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo_$memory, $t28->$addr, $t30);
    }
    if ($abort_flag) {
        assume {:print "$at(2,2554,2561)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(74,0):", $t26} $t26 == $t26;
        goto L2;
    }

    // $t31 := table::new<address, u64>() on_abort goto L2 with $t26 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:83:29+12
    assume {:print "$at(2,2752,2764)"} true;
    call $t31 := $1_table_new'address_u64'();
    if ($abort_flag) {
        assume {:print "$at(2,2752,2764)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(74,0):", $t26} $t26 == $t26;
        goto L2;
    }

    // $t32 := table::new<address, u64>() on_abort goto L2 with $t26 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:84:30+12
    assume {:print "$at(2,2796,2808)"} true;
    call $t32 := $1_table_new'address_u64'();
    if ($abort_flag) {
        assume {:print "$at(2,2796,2808)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(74,0):", $t26} $t26 == $t26;
        goto L2;
    }

    // $t33 := false at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:97:24+5
    assume {:print "$at(2,3251,3256)"} true;
    $t33 := false;
    assume $IsValid'bool'($t33);

    // $t34 := 0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:98:24+1
    assume {:print "$at(2,3282,3283)"} true;
    $t34 := 0;
    assume $IsValid'u64'($t34);

    // $t35 := vector::empty<u8>() on_abort goto L2 with $t26 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:99:30+15
    assume {:print "$at(2,3315,3330)"} true;
    call $t35 := $1_vector_empty'u8'();
    if ($abort_flag) {
        assume {:print "$at(2,3315,3330)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(74,0):", $t26} $t26 == $t26;
        goto L2;
    }

    // assume Identical($t36, signer::$address_of($t28)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:504:9+39
    assume {:print "$at(83,24284,24323)"} true;
    assume ($t36 == $1_signer_$address_of($t28));

    // assume Identical($t37, global<account::Account>($t36)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:505:9+36
    assume {:print "$at(83,24332,24368)"} true;
    assume ($t37 == $ResourceValue($1_account_Account_$memory, $t36));

    // $t38 := account::new_event_handle<machineV0::UpdateMachineEvent>($t28) on_abort goto L2 with $t26 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:100:31+72
    assume {:print "$at(2,3363,3435)"} true;
    call $t38 := $1_account_new_event_handle'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_UpdateMachineEvent'($t28);
    if ($abort_flag) {
        assume {:print "$at(2,3363,3435)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(74,0):", $t26} $t26 == $t26;
        goto L2;
    }

    // $t39 := pack machineV0::Machine($t31, $t32, $t1, $t2, $t3, $t4, $t5, $t6, $t7, $t8, $t9, $t10, $t11, $t12, $t33, $t34, $t35, $t38) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:82:34+737
    assume {:print "$at(2,2713,3450)"} true;
    $t39 := $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine($t31, $t32, $t1, $t2, $t3, $t4, $t5, $t6, $t7, $t8, $t9, $t10, $t11, $t12, $t33, $t34, $t35, $t38);

    // trace_local[machine_holder]($t39) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:82:17+14
    assume {:print "$track_local(74,0,17):", $t39} $t39 == $t39;

    // move_to<machineV0::Machine>($t39, $t28) on_abort goto L2 with $t26 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:105:13+7
    assume {:print "$at(2,3547,3554)"} true;
    if ($ResourceExists($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine_$memory, $t28->$addr)) {
        call $ExecFailureAbort();
    } else {
        $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine_$memory := $ResourceUpdate($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine_$memory, $t28->$addr, $t39);
    }
    if ($abort_flag) {
        assume {:print "$at(2,3547,3554)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(74,0):", $t26} $t26 == $t26;
        goto L2;
    }

    // $t40 := true at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:125:17+4
    assume {:print "$at(2,4295,4299)"} true;
    $t40 := true;
    assume $IsValid'bool'($t40);

    // $t41 := true at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:126:17+4
    assume {:print "$at(2,4318,4322)"} true;
    $t41 := true;
    assume $IsValid'bool'($t41);

    // $t42 := true at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:127:17+4
    assume {:print "$at(2,4341,4345)"} true;
    $t42 := true;
    assume $IsValid'bool'($t42);

    // $t43 := true at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:128:17+4
    assume {:print "$at(2,4364,4368)"} true;
    $t43 := true;
    assume $IsValid'bool'($t43);

    // $t44 := true at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:129:17+4
    assume {:print "$at(2,4387,4391)"} true;
    $t44 := true;
    assume $IsValid'bool'($t44);

    // $t45 := true at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:130:17+4
    assume {:print "$at(2,4410,4414)"} true;
    $t45 := true;
    assume $IsValid'bool'($t45);

    // $t46 := true at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:131:17+4
    assume {:print "$at(2,4433,4437)"} true;
    $t46 := true;
    assume $IsValid'bool'($t46);

    // $t47 := true at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:132:17+4
    assume {:print "$at(2,4456,4460)"} true;
    $t47 := true;
    assume $IsValid'bool'($t47);

    // $t48 := true at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:133:17+4
    assume {:print "$at(2,4479,4483)"} true;
    $t48 := true;
    assume $IsValid'bool'($t48);

    // $t49 := aptos_token::create_collection_object($t28, $t3, $t5, $t2, $t4, $t40, $t41, $t42, $t43, $t44, $t45, $t46, $t47, $t48, $t7, $t8) on_abort goto L2 with $t26 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:119:14+508
    assume {:print "$at(2,4065,4573)"} true;
    call $t49 := $4_aptos_token_create_collection_object($t28, $t3, $t5, $t2, $t4, $t40, $t41, $t42, $t43, $t44, $t45, $t46, $t47, $t48, $t7, $t8);
    if ($abort_flag) {
        assume {:print "$at(2,4065,4573)"} true;
        $t26 := $abort_code;
        assume {:print "$track_abort(74,0):", $t26} $t26 == $t26;
        goto L2;
    }

    // destroy($t49) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:119:14+508

    // label L1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:139:9+1
    assume {:print "$at(2,4588,4589)"} true;
L1:

    // return () at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:139:9+1
    assume {:print "$at(2,4588,4589)"} true;
    return;

    // label L2 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:139:9+1
L2:

    // abort($t26) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:139:9+1
    assume {:print "$at(2,4588,4589)"} true;
    $abort_code := $t26;
    $abort_flag := true;
    return;

}

// fun machineV0::mint_from_merkle [verification] at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:194:5+790
procedure {:timeLimit 40} $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_mint_from_merkle$verify(_$t0: $signer, _$t1: int, _$t2: Vec (Vec (int)), _$t3: int) returns ()
{
    // declare local variables
    var $t4: Vec (int);
    var $t5: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo;
    var $t10: $1_account_SignerCapability;
    var $t11: int;
    var $t12: $signer;
    var $t13: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine;
    var $t14: int;
    var $t15: $Mutation (Vec (int));
    var $t16: Vec (int);
    var $t17: Vec (int);
    var $t18: Vec (int);
    var $t19: Vec (int);
    var $t20: bool;
    var $t21: int;
    var $t0: $signer;
    var $t1: int;
    var $t2: Vec (Vec (int));
    var $t3: int;
    var $temp_0'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine': $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'vec'u8'': Vec (int);
    var $temp_0'vec'vec'u8''': Vec (Vec (int));
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:194:5+1
    assume {:print "$at(2,6909,6910)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:194:5+1
    assume $IsValid'address'($t1);

    // assume WellFormed($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:194:5+1
    assume $IsValid'vec'vec'u8'''($t2);

    // assume WellFormed($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:194:5+1
    assume $IsValid'u64'($t3);

    // assume forall $rsc: chain_status::GenesisEndMarker: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: timestamp::CurrentTimeMicroseconds: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: reconfiguration::Configuration: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: machineV0::aptify: ResourceDomain<machineV0::Machine>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine_$memory, $a_0)}(var $rsc := $ResourceValue($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine_$memory, $a_0);
    ($IsValid'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'($rsc))));

    // assume forall $rsc: machineV0::ResourceInfo: ResourceDomain<machineV0::ResourceInfo>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:194:5+1
    assume (forall $a_0: int :: {$ResourceValue($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo_$memory, $a_0)}(var $rsc := $ResourceValue($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo_$memory, $a_0);
    ($IsValid'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(0x1)) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:194:5+790
    // global invariant at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\timestamp.spec.move:4:9+107
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:194:5+790
    // global invariant at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[receiver]($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:194:5+1
    assume {:print "$track_local(74,2,0):", $t0} $t0 == $t0;

    // trace_local[machine]($t1) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:194:5+1
    assume {:print "$track_local(74,2,1):", $t1} $t1 == $t1;

    // trace_local[proof]($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:194:5+1
    assume {:print "$track_local(74,2,2):", $t2} $t2 == $t2;

    // trace_local[mint_limit]($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:194:5+1
    assume {:print "$track_local(74,2,3):", $t3} $t3 == $t3;

    // $t7 := signer::address_of($t0) on_abort goto L4 with $t8 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:200:29+28
    assume {:print "$at(2,7127,7155)"} true;
    call $t7 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,7127,7155)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(74,2):", $t8} $t8 == $t8;
        goto L4;
    }

    // trace_local[receiver_addr]($t7) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:200:13+13
    assume {:print "$track_local(74,2,6):", $t7} $t7 == $t7;

    // $t9 := get_global<machineV0::ResourceInfo>($t1) on_abort goto L4 with $t8 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:201:29+13
    assume {:print "$at(2,7186,7199)"} true;
    if (!$ResourceExists($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $ResourceValue($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(2,7186,7199)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(74,2):", $t8} $t8 == $t8;
        goto L4;
    }

    // $t10 := get_field<machineV0::ResourceInfo>.resource_cap($t9) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:202:79+27
    assume {:print "$at(2,7303,7330)"} true;
    $t10 := $t9->$resource_cap;

    // assume Identical($t11, select account::SignerCapability.account($t10)) at C:\Users\nht12/.move\https___github_com_aptos-labs_aptos-core_git_mainnet\aptos-move/framework/aptos-framework\sources\account.spec.move:518:9+30
    assume {:print "$at(83,24860,24890)"} true;
    assume ($t11 == $t10->$account);

    // $t12 := account::create_signer_with_capability($t10) on_abort goto L4 with $t8 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:202:40+67
    assume {:print "$at(2,7264,7331)"} true;
    call $t12 := $1_account_create_signer_with_capability($t10);
    if ($abort_flag) {
        assume {:print "$at(2,7264,7331)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(74,2):", $t8} $t8 == $t8;
        goto L4;
    }

    // destroy($t12) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:202:13+24

    // $t13 := get_global<machineV0::Machine>($t1) on_abort goto L4 with $t8 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:203:28+13
    assume {:print "$at(2,7361,7374)"} true;
    if (!$ResourceExists($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t13 := $ResourceValue($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(2,7361,7374)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(74,2):", $t8} $t8 == $t8;
        goto L4;
    }

    // trace_local[machine_data]($t13) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:203:13+12
    assume {:print "$track_local(74,2,5):", $t13} $t13 == $t13;

    // $t14 := timestamp::now_seconds() on_abort goto L4 with $t8 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:204:19+41
    assume {:print "$at(2,7413,7454)"} true;
    call $t14 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,7413,7454)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(74,2):", $t8} $t8 == $t8;
        goto L4;
    }

    // destroy($t14) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:204:13+3

    // $t4 := bcs::to_bytes<address>($t7) on_abort goto L4 with $t8 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:205:23+29
    assume {:print "$at(2,7479,7508)"} true;
    call $t4 := $1_bcs_to_bytes'address'($t7);
    if ($abort_flag) {
        assume {:print "$at(2,7479,7508)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(74,2):", $t8} $t8 == $t8;
        goto L4;
    }

    // trace_local[leafvec]($t4) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:205:13+7
    assume {:print "$track_local(74,2,4):", $t4} $t4 == $t4;

    // $t15 := borrow_local($t4) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:206:24+12
    assume {:print "$at(2,7534,7546)"} true;
    $t15 := $Mutation($Local(4), EmptyVec(), $t4);

    // $t16 := bcs::to_bytes<u64>($t3) on_abort goto L4 with $t8 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:206:37+26
    call $t16 := $1_bcs_to_bytes'u64'($t3);
    if ($abort_flag) {
        assume {:print "$at(2,7547,7573)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(74,2):", $t8} $t8 == $t8;
        goto L4;
    }

    // vector::append<u8>($t15, $t16) on_abort goto L4 with $t8 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:206:9+55
    call $t15 := $1_vector_append'u8'($t15, $t16);
    if ($abort_flag) {
        assume {:print "$at(2,7519,7574)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(74,2):", $t8} $t8 == $t8;
        goto L4;
    }

    // write_back[LocalRoot($t4)@]($t15) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:206:9+55
    $t4 := $Dereference($t15);

    // trace_local[leafvec]($t4) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:206:9+55
    assume {:print "$track_local(74,2,4):", $t4} $t4 == $t4;

    // $t17 := get_field<machineV0::Machine>.merkle_root($t13) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:207:44+24
    assume {:print "$at(2,7620,7644)"} true;
    $t17 := $t13->$merkle_root;

    // $t18 := move($t4) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:207:91+7
    $t18 := $t4;

    // $t19 := opaque begin: aptos_hash::keccak256($t18) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:207:69+30

    // assume WellFormed($t19) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:207:69+30
    assume $IsValid'vec'u8''($t19);

    // assume Eq<vector<u8>>($t19, aptos_hash::spec_keccak256($t18)) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:207:69+30
    assume $IsEqual'vec'u8''($t19, $1_aptos_hash_spec_keccak256($t18));

    // $t19 := opaque end: aptos_hash::keccak256($t18) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:207:69+30

    // $t20 := merkle_proof::verify($t2, $t17, $t19) on_abort goto L4 with $t8 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:207:17+83
    call $t20 := $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_merkle_proof_verify($t2, $t17, $t19);
    if ($abort_flag) {
        assume {:print "$at(2,7593,7676)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(74,2):", $t8} $t8 == $t8;
        goto L4;
    }

    // if ($t20) goto L1 else goto L0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:207:9+106
    if ($t20) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:207:9+106
L1:

    // goto L2 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:207:9+106
    assume {:print "$at(2,7585,7691)"} true;
    goto L2;

    // label L0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:207:101+13
L0:

    // $t21 := 1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:207:101+13
    assume {:print "$at(2,7677,7690)"} true;
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // trace_abort($t21) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:207:9+106
    assume {:print "$at(2,7585,7691)"} true;
    assume {:print "$track_abort(74,2):", $t21} $t21 == $t21;

    // $t8 := move($t21) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:207:9+106
    $t8 := $t21;

    // goto L4 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:207:9+106
    goto L4;

    // label L2 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:207:115+1
L2:

    // label L3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:208:5+1
    assume {:print "$at(2,7698,7699)"} true;
L3:

    // return () at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:208:5+1
    assume {:print "$at(2,7698,7699)"} true;
    return;

    // label L4 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:208:5+1
L4:

    // abort($t8) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:208:5+1
    assume {:print "$at(2,7698,7699)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun machineV0::num_str [baseline] at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:210:5+348
procedure {:inline 1} $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_num_str(_$t0: int) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t1: int;
    var $t2: Vec (int);
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: $Mutation (Vec (int));
    var $t16: $Mutation (Vec (int));
    var $t17: int;
    var $t18: int;
    var $t19: int;
    var $t20: $Mutation (Vec (int));
    var $t21: Vec (int);
    var $t22: $1_string_String;
    var $t0: int;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'u64': int;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[num]($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:210:5+1
    assume {:print "$at(2,7709,7710)"} true;
    assume {:print "$track_local(74,3,0):", $t0} $t0 == $t0;

    // $t2 := vector::empty<u8>() on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:212:18+15
    assume {:print "$at(2,7764,7779)"} true;
    call $t2 := $1_vector_empty'u8'();
    if ($abort_flag) {
        assume {:print "$at(2,7764,7779)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // trace_local[v1]($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:212:13+2
    assume {:print "$track_local(74,3,2):", $t2} $t2 == $t2;

    // label L3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume {:print "$at(2,7797,7800)"} true;
L3:

    // $t0 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume {:print "$at(2,7797,7800)"} true;
    havoc $t0;

    // assume WellFormed($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'u64'($t0);

    // $t2 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t2;

    // assume WellFormed($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'vec'u8''($t2);

    // $t4 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t4;

    // assume WellFormed($t4) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'u64'($t4);

    // $t5 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t5;

    // assume WellFormed($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'u64'($t5);

    // $t6 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t6;

    // assume WellFormed($t6) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'u64'($t6);

    // $t7 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t7;

    // assume WellFormed($t7) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'bool'($t7);

    // $t8 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t8;

    // assume WellFormed($t8) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'u64'($t8);

    // $t9 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t9;

    // assume WellFormed($t9) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'u64'($t9);

    // $t10 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t10;

    // assume WellFormed($t10) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'u64'($t10);

    // $t11 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t11;

    // assume WellFormed($t11) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'u64'($t11);

    // $t12 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t12;

    // assume WellFormed($t12) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'u8'($t12);

    // $t13 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t13;

    // assume WellFormed($t13) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'u64'($t13);

    // $t14 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t14;

    // assume WellFormed($t14) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'u64'($t14);

    // $t15 := havoc[mut_all]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t15;

    // assume WellFormed($t15) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'vec'u8''($Dereference($t15));

    // trace_local[num]($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume {:print "$info(): enter loop, variable(s) num, v1 havocked and reassigned"} true;
    assume {:print "$track_local(74,3,0):", $t0} $t0 == $t0;

    // trace_local[v1]($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume {:print "$track_local(74,3,2):", $t2} $t2 == $t2;

    // assume Not(AbortFlag()) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume !$abort_flag;

    // $t4 := 10 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:20+2
    $t4 := 10;
    assume $IsValid'u64'($t4);

    // $t5 := /($t0, $t4) on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:19+1
    call $t5 := $Div($t0, $t4);
    if ($abort_flag) {
        assume {:print "$at(2,7800,7801)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // $t6 := 0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:25+1
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t7 := >($t5, $t6) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:23+1
    call $t7 := $Gt($t5, $t6);

    // if ($t7) goto L1 else goto L0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:9+145
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:9+145
L1:

    // label L2 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:214:23+3
    assume {:print "$at(2,7833,7836)"} true;
L2:

    // $t8 := 10 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:214:27+2
    assume {:print "$at(2,7837,7839)"} true;
    $t8 := 10;
    assume $IsValid'u64'($t8);

    // $t9 := %($t0, $t8) on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:214:26+1
    call $t9 := $Mod($t0, $t8);
    if ($abort_flag) {
        assume {:print "$at(2,7836,7837)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // trace_local[rem]($t9) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:214:17+3
    assume {:print "$track_local(74,3,1):", $t9} $t9 == $t9;

    // $t15 := borrow_local($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:215:31+7
    assume {:print "$at(2,7872,7879)"} true;
    $t15 := $Mutation($Local(2), EmptyVec(), $t2);

    // $t10 := 48 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:215:45+2
    $t10 := 48;
    assume $IsValid'u64'($t10);

    // $t11 := +($t9, $t10) on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:215:44+1
    call $t11 := $AddU64($t9, $t10);
    if ($abort_flag) {
        assume {:print "$at(2,7885,7886)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // $t12 := (u8)($t11) on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:215:40+14
    call $t12 := $CastU8($t11);
    if ($abort_flag) {
        assume {:print "$at(2,7881,7895)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // vector::push_back<u8>($t15, $t12) on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:215:13+42
    call $t15 := $1_vector_push_back'u8'($t15, $t12);
    if ($abort_flag) {
        assume {:print "$at(2,7854,7896)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // write_back[LocalRoot($t2)@]($t15) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:215:13+42
    $t2 := $Dereference($t15);

    // trace_local[v1]($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:215:13+42
    assume {:print "$track_local(74,3,2):", $t2} $t2 == $t2;

    // $t13 := 10 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:216:23+2
    assume {:print "$at(2,7921,7923)"} true;
    $t13 := 10;
    assume $IsValid'u64'($t13);

    // $t14 := /($t0, $t13) on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:216:22+1
    call $t14 := $Div($t0, $t13);
    if ($abort_flag) {
        assume {:print "$at(2,7920,7921)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // trace_local[num]($t14) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:216:13+3
    assume {:print "$track_local(74,3,0):", $t14} $t14 == $t14;

    // goto L4 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:216:25+1
    goto L4;

    // label L0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:218:27+7
    assume {:print "$at(2,7964,7971)"} true;
L0:

    // $t16 := borrow_local($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:218:27+7
    assume {:print "$at(2,7964,7971)"} true;
    $t16 := $Mutation($Local(2), EmptyVec(), $t2);

    // $t17 := 48 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:218:41+2
    $t17 := 48;
    assume $IsValid'u64'($t17);

    // $t18 := +($t0, $t17) on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:218:40+1
    call $t18 := $AddU64($t0, $t17);
    if ($abort_flag) {
        assume {:print "$at(2,7977,7978)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // $t19 := (u8)($t18) on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:218:36+14
    call $t19 := $CastU8($t18);
    if ($abort_flag) {
        assume {:print "$at(2,7973,7987)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // vector::push_back<u8>($t16, $t19) on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:218:9+42
    call $t16 := $1_vector_push_back'u8'($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(2,7946,7988)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // write_back[LocalRoot($t2)@]($t16) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:218:9+42
    $t2 := $Dereference($t16);

    // trace_local[v1]($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:218:9+42
    assume {:print "$track_local(74,3,2):", $t2} $t2 == $t2;

    // $t20 := borrow_local($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:219:25+7
    assume {:print "$at(2,8015,8022)"} true;
    $t20 := $Mutation($Local(2), EmptyVec(), $t2);

    // vector::reverse<u8>($t20) on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:219:9+24
    call $t20 := $1_vector_reverse'u8'($t20);
    if ($abort_flag) {
        assume {:print "$at(2,7999,8023)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // write_back[LocalRoot($t2)@]($t20) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:219:9+24
    $t2 := $Dereference($t20);

    // trace_local[v1]($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:219:9+24
    assume {:print "$track_local(74,3,2):", $t2} $t2 == $t2;

    // $t21 := move($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:220:22+2
    assume {:print "$at(2,8047,8049)"} true;
    $t21 := $t2;

    // $t22 := string::utf8($t21) on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:220:9+16
    call $t22 := $1_string_utf8($t21);
    if ($abort_flag) {
        assume {:print "$at(2,8034,8050)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // trace_return[0]($t22) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:220:9+16
    assume {:print "$track_return(74,3,0):", $t22} $t22 == $t22;

    // goto L5 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:220:9+16
    goto L5;

    // label L4 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:218:27+7
    // Loop invariant checking block for the loop started with header: L3
    assume {:print "$at(2,7964,7971)"} true;
L4:

    // stop() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:218:27+7
    assume {:print "$at(2,7964,7971)"} true;
    assume false;
    return;

    // label L5 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:221:5+1
    assume {:print "$at(2,8056,8057)"} true;
L5:

    // return $t22 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:221:5+1
    assume {:print "$at(2,8056,8057)"} true;
    $ret0 := $t22;
    return;

    // label L6 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:221:5+1
L6:

    // abort($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:221:5+1
    assume {:print "$at(2,8056,8057)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun machineV0::num_str [verification] at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:210:5+348
procedure {:timeLimit 40} $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_num_str$verify(_$t0: int) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t1: int;
    var $t2: Vec (int);
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: $Mutation (Vec (int));
    var $t16: $Mutation (Vec (int));
    var $t17: int;
    var $t18: int;
    var $t19: int;
    var $t20: $Mutation (Vec (int));
    var $t21: Vec (int);
    var $t22: $1_string_String;
    var $t0: int;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'u64': int;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:210:5+1
    assume {:print "$at(2,7709,7710)"} true;
    assume $IsValid'u64'($t0);

    // trace_local[num]($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:210:5+1
    assume {:print "$track_local(74,3,0):", $t0} $t0 == $t0;

    // $t2 := vector::empty<u8>() on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:212:18+15
    assume {:print "$at(2,7764,7779)"} true;
    call $t2 := $1_vector_empty'u8'();
    if ($abort_flag) {
        assume {:print "$at(2,7764,7779)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // trace_local[v1]($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:212:13+2
    assume {:print "$track_local(74,3,2):", $t2} $t2 == $t2;

    // label L3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume {:print "$at(2,7797,7800)"} true;
L3:

    // $t0 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume {:print "$at(2,7797,7800)"} true;
    havoc $t0;

    // assume WellFormed($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'u64'($t0);

    // $t2 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t2;

    // assume WellFormed($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'vec'u8''($t2);

    // $t4 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t4;

    // assume WellFormed($t4) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'u64'($t4);

    // $t5 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t5;

    // assume WellFormed($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'u64'($t5);

    // $t6 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t6;

    // assume WellFormed($t6) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'u64'($t6);

    // $t7 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t7;

    // assume WellFormed($t7) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'bool'($t7);

    // $t8 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t8;

    // assume WellFormed($t8) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'u64'($t8);

    // $t9 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t9;

    // assume WellFormed($t9) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'u64'($t9);

    // $t10 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t10;

    // assume WellFormed($t10) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'u64'($t10);

    // $t11 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t11;

    // assume WellFormed($t11) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'u64'($t11);

    // $t12 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t12;

    // assume WellFormed($t12) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'u8'($t12);

    // $t13 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t13;

    // assume WellFormed($t13) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'u64'($t13);

    // $t14 := havoc[val]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t14;

    // assume WellFormed($t14) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'u64'($t14);

    // $t15 := havoc[mut_all]() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    havoc $t15;

    // assume WellFormed($t15) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume $IsValid'vec'u8''($Dereference($t15));

    // trace_local[num]($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume {:print "$info(): enter loop, variable(s) num, v1 havocked and reassigned"} true;
    assume {:print "$track_local(74,3,0):", $t0} $t0 == $t0;

    // trace_local[v1]($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume {:print "$track_local(74,3,2):", $t2} $t2 == $t2;

    // assume Not(AbortFlag()) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:16+3
    assume !$abort_flag;

    // $t4 := 10 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:20+2
    $t4 := 10;
    assume $IsValid'u64'($t4);

    // $t5 := /($t0, $t4) on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:19+1
    call $t5 := $Div($t0, $t4);
    if ($abort_flag) {
        assume {:print "$at(2,7800,7801)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // $t6 := 0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:25+1
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t7 := >($t5, $t6) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:23+1
    call $t7 := $Gt($t5, $t6);

    // if ($t7) goto L1 else goto L0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:9+145
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:213:9+145
L1:

    // label L2 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:214:23+3
    assume {:print "$at(2,7833,7836)"} true;
L2:

    // $t8 := 10 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:214:27+2
    assume {:print "$at(2,7837,7839)"} true;
    $t8 := 10;
    assume $IsValid'u64'($t8);

    // $t9 := %($t0, $t8) on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:214:26+1
    call $t9 := $Mod($t0, $t8);
    if ($abort_flag) {
        assume {:print "$at(2,7836,7837)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // trace_local[rem]($t9) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:214:17+3
    assume {:print "$track_local(74,3,1):", $t9} $t9 == $t9;

    // $t15 := borrow_local($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:215:31+7
    assume {:print "$at(2,7872,7879)"} true;
    $t15 := $Mutation($Local(2), EmptyVec(), $t2);

    // $t10 := 48 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:215:45+2
    $t10 := 48;
    assume $IsValid'u64'($t10);

    // $t11 := +($t9, $t10) on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:215:44+1
    call $t11 := $AddU64($t9, $t10);
    if ($abort_flag) {
        assume {:print "$at(2,7885,7886)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // $t12 := (u8)($t11) on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:215:40+14
    call $t12 := $CastU8($t11);
    if ($abort_flag) {
        assume {:print "$at(2,7881,7895)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // vector::push_back<u8>($t15, $t12) on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:215:13+42
    call $t15 := $1_vector_push_back'u8'($t15, $t12);
    if ($abort_flag) {
        assume {:print "$at(2,7854,7896)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // write_back[LocalRoot($t2)@]($t15) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:215:13+42
    $t2 := $Dereference($t15);

    // trace_local[v1]($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:215:13+42
    assume {:print "$track_local(74,3,2):", $t2} $t2 == $t2;

    // $t13 := 10 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:216:23+2
    assume {:print "$at(2,7921,7923)"} true;
    $t13 := 10;
    assume $IsValid'u64'($t13);

    // $t14 := /($t0, $t13) on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:216:22+1
    call $t14 := $Div($t0, $t13);
    if ($abort_flag) {
        assume {:print "$at(2,7920,7921)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // trace_local[num]($t14) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:216:13+3
    assume {:print "$track_local(74,3,0):", $t14} $t14 == $t14;

    // goto L4 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:216:25+1
    goto L4;

    // label L0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:218:27+7
    assume {:print "$at(2,7964,7971)"} true;
L0:

    // $t16 := borrow_local($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:218:27+7
    assume {:print "$at(2,7964,7971)"} true;
    $t16 := $Mutation($Local(2), EmptyVec(), $t2);

    // $t17 := 48 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:218:41+2
    $t17 := 48;
    assume $IsValid'u64'($t17);

    // $t18 := +($t0, $t17) on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:218:40+1
    call $t18 := $AddU64($t0, $t17);
    if ($abort_flag) {
        assume {:print "$at(2,7977,7978)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // $t19 := (u8)($t18) on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:218:36+14
    call $t19 := $CastU8($t18);
    if ($abort_flag) {
        assume {:print "$at(2,7973,7987)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // vector::push_back<u8>($t16, $t19) on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:218:9+42
    call $t16 := $1_vector_push_back'u8'($t16, $t19);
    if ($abort_flag) {
        assume {:print "$at(2,7946,7988)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // write_back[LocalRoot($t2)@]($t16) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:218:9+42
    $t2 := $Dereference($t16);

    // trace_local[v1]($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:218:9+42
    assume {:print "$track_local(74,3,2):", $t2} $t2 == $t2;

    // $t20 := borrow_local($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:219:25+7
    assume {:print "$at(2,8015,8022)"} true;
    $t20 := $Mutation($Local(2), EmptyVec(), $t2);

    // vector::reverse<u8>($t20) on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:219:9+24
    call $t20 := $1_vector_reverse'u8'($t20);
    if ($abort_flag) {
        assume {:print "$at(2,7999,8023)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // write_back[LocalRoot($t2)@]($t20) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:219:9+24
    $t2 := $Dereference($t20);

    // trace_local[v1]($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:219:9+24
    assume {:print "$track_local(74,3,2):", $t2} $t2 == $t2;

    // $t21 := move($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:220:22+2
    assume {:print "$at(2,8047,8049)"} true;
    $t21 := $t2;

    // $t22 := string::utf8($t21) on_abort goto L6 with $t3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:220:9+16
    call $t22 := $1_string_utf8($t21);
    if ($abort_flag) {
        assume {:print "$at(2,8034,8050)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,3):", $t3} $t3 == $t3;
        goto L6;
    }

    // trace_return[0]($t22) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:220:9+16
    assume {:print "$track_return(74,3,0):", $t22} $t22 == $t22;

    // goto L5 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:220:9+16
    goto L5;

    // label L4 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:218:27+7
    // Loop invariant checking block for the loop started with header: L3
    assume {:print "$at(2,7964,7971)"} true;
L4:

    // stop() at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:218:27+7
    assume {:print "$at(2,7964,7971)"} true;
    assume false;
    return;

    // label L5 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:221:5+1
    assume {:print "$at(2,8056,8057)"} true;
L5:

    // return $t22 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:221:5+1
    assume {:print "$at(2,8056,8057)"} true;
    $ret0 := $t22;
    return;

    // label L6 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:221:5+1
L6:

    // abort($t3) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:221:5+1
    assume {:print "$at(2,8056,8057)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun machineV0::set_root [verification] at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:223:5+487
procedure {:timeLimit 40} $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_set_root$verify(_$t0: $signer, _$t1: int, _$t2: Vec (int)) returns ()
{
    // declare local variables
    var $t3: int;
    var $t4: $Mutation ($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine);
    var $t5: int;
    var $t6: int;
    var $t7: $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo;
    var $t8: int;
    var $t9: bool;
    var $t10: int;
    var $t11: $Mutation ($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine);
    var $t12: $Mutation (Vec (int));
    var $t0: $signer;
    var $t1: int;
    var $t2: Vec (int);
    var $temp_0'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine': $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:223:5+1
    assume {:print "$at(2,8069,8070)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:223:5+1
    assume $IsValid'address'($t1);

    // assume WellFormed($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:223:5+1
    assume $IsValid'vec'u8''($t2);

    // assume forall $rsc: machineV0::aptify: ResourceDomain<machineV0::Machine>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:223:5+1
    assume (forall $a_0: int :: {$ResourceValue($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine_$memory, $a_0)}(var $rsc := $ResourceValue($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine_$memory, $a_0);
    ($IsValid'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'($rsc))));

    // assume forall $rsc: machineV0::ResourceInfo: ResourceDomain<machineV0::ResourceInfo>(): WellFormed($rsc) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:223:5+1
    assume (forall $a_0: int :: {$ResourceValue($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo_$memory, $a_0)}(var $rsc := $ResourceValue($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo_$memory, $a_0);
    ($IsValid'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo'($rsc))));

    // trace_local[account]($t0) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:223:5+1
    assume {:print "$track_local(74,4,0):", $t0} $t0 == $t0;

    // trace_local[machine]($t1) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:223:5+1
    assume {:print "$track_local(74,4,1):", $t1} $t1 == $t1;

    // trace_local[merkle_root]($t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:223:5+1
    assume {:print "$track_local(74,4,2):", $t2} $t2 == $t2;

    // $t5 := signer::address_of($t0) on_abort goto L4 with $t6 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:228:32+27
    assume {:print "$at(2,8253,8280)"} true;
    call $t5 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,8253,8280)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(74,4):", $t6} $t6 == $t6;
        goto L4;
    }

    // trace_local[account_addr]($t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:228:17+12
    assume {:print "$track_local(74,4,3):", $t5} $t5 == $t5;

    // $t7 := get_global<machineV0::ResourceInfo>($t1) on_abort goto L4 with $t6 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:229:33+13
    assume {:print "$at(2,8315,8328)"} true;
    if (!$ResourceExists($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $ResourceValue($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_ResourceInfo_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(2,8315,8328)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(74,4):", $t6} $t6 == $t6;
        goto L4;
    }

    // $t8 := get_field<machineV0::ResourceInfo>.source($t7) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:230:21+20
    assume {:print "$at(2,8374,8394)"} true;
    $t8 := $t7->$source;

    // $t9 := ==($t8, $t5) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:230:42+2
    $t9 := $IsEqual'address'($t8, $t5);

    // if ($t9) goto L1 else goto L0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:230:13+61
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:230:13+61
L1:

    // goto L2 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:230:13+61
    assume {:print "$at(2,8366,8427)"} true;
    goto L2;

    // label L0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:230:59+14
L0:

    // $t10 := 0 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:230:59+14
    assume {:print "$at(2,8412,8426)"} true;
    $t10 := 0;
    assume $IsValid'u64'($t10);

    // trace_abort($t10) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:230:13+61
    assume {:print "$at(2,8366,8427)"} true;
    assume {:print "$track_abort(74,4):", $t10} $t10 == $t10;

    // $t6 := move($t10) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:230:13+61
    $t6 := $t10;

    // goto L4 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:230:13+61
    goto L4;

    // label L2 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:231:59+7
    assume {:print "$at(2,8488,8495)"} true;
L2:

    // $t11 := borrow_global<machineV0::Machine>($t1) on_abort goto L4 with $t6 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:231:32+17
    assume {:print "$at(2,8461,8478)"} true;
    if (!$ResourceExists($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,8461,8478)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(74,4):", $t6} $t6 == $t6;
        goto L4;
    }

    // trace_local[machine_data]($t11) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:231:17+12
    $temp_0'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine' := $Dereference($t11);
    assume {:print "$track_local(74,4,4):", $temp_0'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'} $temp_0'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine' == $temp_0'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine';

    // $t12 := borrow_field<machineV0::Machine>.merkle_root($t11) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:232:13+24
    assume {:print "$at(2,8511,8535)"} true;
    $t12 := $ChildMutation($t11, 16, $Dereference($t11)->$merkle_root);

    // write_ref($t12, $t2) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:232:13+38
    $t12 := $UpdateMutation($t12, $t2);

    // write_back[Reference($t11).merkle_root (vector<u8>)]($t12) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:232:13+38
    $t11 := $UpdateMutation($t11, $Update'$4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine'_merkle_root($Dereference($t11), $Dereference($t12)));

    // write_back[machineV0::Machine@]($t11) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:232:13+38
    $4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine_$memory := $ResourceUpdate($4fced49772b053a6de8e0c573060c495953a3ea6ed9c1e0a8a52acf52a914884_machineV0_Machine_$memory, $GlobalLocationAddress($t11),
        $Dereference($t11));

    // label L3 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:233:5+1
    assume {:print "$at(2,8555,8556)"} true;
L3:

    // return () at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:233:5+1
    assume {:print "$at(2,8555,8556)"} true;
    return;

    // label L4 at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:233:5+1
L4:

    // abort($t6) at C:\Users\nht12\OneDrive\Documents\GitHub\aptify\move\sources\aptify.move:233:5+1
    assume {:print "$at(2,8555,8556)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}
